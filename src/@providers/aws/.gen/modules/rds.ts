// generated by cdktf get
// terraform-aws-modules/rds/aws
import { TerraformModule, TerraformModuleUserConfig } from 'cdktf';
import { Construct } from 'npm:constructs';
export interface RdsConfig extends TerraformModuleUserConfig {
  /**
   * The allocated storage in gigabytes
   */
  readonly allocatedStorage?: string;
  /**
   * Indicates that major version upgrades are allowed. Changing this parameter does not result in an outage and the change is asynchronously applied as soon as possible
   */
  readonly allowMajorVersionUpgrade?: boolean;
  /**
   * Specifies whether any database modifications are applied immediately, or during the next maintenance window
   */
  readonly applyImmediately?: boolean;
  /**
   * Indicates that minor engine upgrades will be applied automatically to the DB instance during the maintenance window
   * @default true
   */
  readonly autoMinorVersionUpgrade?: boolean;
  /**
   * The Availability Zone of the RDS instance
   */
  readonly availabilityZone?: string;
  /**
   * The days to retain backups for
   */
  readonly backupRetentionPeriod?: number;
  /**
   * The daily time range (in UTC) during which automated backups are created if they are enabled. Example: '09:46-10:16'. Must not overlap with maintenance_window
   */
  readonly backupWindow?: string;
  /**
   * Enables low-downtime updates using RDS Blue/Green deployments.
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly blueGreenUpdate?: { [key: string]: string };
  /**
   * Specifies the identifier of the CA certificate for the DB instance
   */
  readonly caCertIdentifier?: string;
  /**
   * The character set name to use for DB encoding in Oracle instances. This can't be changed. See Oracle Character Sets Supported in Amazon RDS and Collations and Character Sets for Microsoft SQL Server for more information. This can only be set on creation
   */
  readonly characterSetName?: string;
  /**
   * The ARN of the KMS Key to use when encrypting log data
   */
  readonly cloudwatchLogGroupKmsKeyId?: string;
  /**
   * The number of days to retain CloudWatch logs for the DB instance
   * @default 7
   */
  readonly cloudwatchLogGroupRetentionInDays?: number;
  /**
   * On delete, copy all Instance tags to the final snapshot
   */
  readonly copyTagsToSnapshot?: boolean;
  /**
   * Determines whether a CloudWatch log group is created for each `enabled_cloudwatch_logs_exports`
   */
  readonly createCloudwatchLogGroup?: boolean;
  /**
   * Whether to create a database instance
   * @default true
   */
  readonly createDbInstance?: boolean;
  /**
   * Create a database option group
   * @default true
   */
  readonly createDbOptionGroup?: boolean;
  /**
   * Whether to create a database parameter group
   * @default true
   */
  readonly createDbParameterGroup?: boolean;
  /**
   * Whether to create a database subnet group
   */
  readonly createDbSubnetGroup?: boolean;
  /**
   * Create IAM role with a defined name that permits RDS to send enhanced monitoring metrics to CloudWatch Logs
   */
  readonly createMonitoringRole?: boolean;
  /**
   * Whether to create random password for RDS primary cluster
   * @default true
   */
  readonly createRandomPassword?: boolean;
  /**
   * RDS custom iam instance profile
   */
  readonly customIamInstanceProfile?: string;
  /**
   * Additional tags for the DB instance
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly dbInstanceTags?: { [key: string]: string };
  /**
   * The DB name to create. If omitted, no database is created initially
   */
  readonly dbName?: string;
  /**
   * Additional tags for the DB option group
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly dbOptionGroupTags?: { [key: string]: string };
  /**
   * Additional tags for the  DB parameter group
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly dbParameterGroupTags?: { [key: string]: string };
  /**
   * Description of the DB subnet group to create
   */
  readonly dbSubnetGroupDescription?: string;
  /**
   * Name of DB subnet group. DB instance will be created in the VPC associated with the DB subnet group. If unspecified, will be created in the default VPC
   */
  readonly dbSubnetGroupName?: string;
  /**
   * Additional tags for the DB subnet group
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly dbSubnetGroupTags?: { [key: string]: string };
  /**
   * Determines whether to use `subnet_group_name` as is or create a unique name beginning with the `subnet_group_name` as the prefix
   * @default true
   */
  readonly dbSubnetGroupUseNamePrefix?: boolean;
  /**
   * Specifies whether to remove automated backups immediately after the DB instance is deleted
   * @default true
   */
  readonly deleteAutomatedBackups?: boolean;
  /**
   * The database can't be deleted when this value is set to true
   */
  readonly deletionProtection?: boolean;
  /**
   * The ID of the Directory Service Active Directory domain to create the instance in
   */
  readonly domain?: string;
  /**
   * (Required if domain is provided) The name of the IAM role to be used when making API calls to the Directory Service
   */
  readonly domainIamRoleName?: string;
  /**
   * List of log types to enable for exporting to CloudWatch logs. If omitted, no logs will be exported. Valid values (depending on engine): alert, audit, error, general, listener, slowquery, trace, postgresql (PostgreSQL), upgrade (PostgreSQL)
   * @default
   */
  readonly enabledCloudwatchLogsExports?: string[];
  /**
   * The database engine to use
   */
  readonly engine?: string;
  /**
   * The engine version to use
   */
  readonly engineVersion?: string;
  /**
   * The family of the DB parameter group
   */
  readonly family?: string;
  /**
   * The name which is prefixed to the final snapshot on cluster destroy
   * @default final
   */
  readonly finalSnapshotIdentifierPrefix?: string;
  /**
   * Specifies whether or not the mappings of AWS Identity and Access Management (IAM) accounts to database accounts are enabled
   */
  readonly iamDatabaseAuthenticationEnabled?: boolean;
  /**
   * The name of the RDS instance
   */
  readonly identifier: string;
  /**
   * The instance type of the RDS instance
   */
  readonly instanceClass?: string;
  /**
   * Determines whether to use `identifier` as is or create a unique identifier beginning with `identifier` as the specified prefix
   */
  readonly instanceUseIdentifierPrefix?: boolean;
  /**
   * The amount of provisioned IOPS. Setting this implies a storage_type of 'io1' or `gp3`. See `notes` for limitations regarding this variable for `gp3`
   */
  readonly iops?: number;
  /**
   * The ARN for the KMS encryption key. If creating an encrypted replica, set this to the destination KMS ARN. If storage_encrypted is set to true and kms_key_id is not specified the default KMS key created in your account will be used. Be sure to use the full ARN, not a key alias.
   */
  readonly kmsKeyId?: string;
  /**
   * License model information for this DB instance. Optional, but required for some DB engines, i.e. Oracle SE1
   */
  readonly licenseModel?: string;
  /**
   * The window to perform maintenance in. Syntax: 'ddd:hh24:mi-ddd:hh24:mi'. Eg: 'Mon:00:00-Mon:03:00'
   */
  readonly maintenanceWindow?: string;
  /**
   * Specifies the major version of the engine that this option group should be associated with
   */
  readonly majorEngineVersion?: string;
  /**
   * Specifies the value for Storage Autoscaling
   */
  readonly maxAllocatedStorage?: number;
  /**
   * The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0. Valid Values: 0, 1, 5, 10, 15, 30, 60
   */
  readonly monitoringInterval?: number;
  /**
   * The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to CloudWatch Logs. Must be specified if monitoring_interval is non-zero
   */
  readonly monitoringRoleArn?: string;
  /**
   * Description of the monitoring IAM role
   */
  readonly monitoringRoleDescription?: string;
  /**
   * Name of the IAM role which will be created when create_monitoring_role is enabled
   * @default rds-monitoring-role
   */
  readonly monitoringRoleName?: string;
  /**
   * ARN of the policy that is used to set the permissions boundary for the monitoring IAM role
   */
  readonly monitoringRolePermissionsBoundary?: string;
  /**
   * Determines whether to use `monitoring_role_name` as is or create a unique identifier beginning with `monitoring_role_name` as the specified prefix
   */
  readonly monitoringRoleUseNamePrefix?: boolean;
  /**
   * Specifies if the RDS instance is multi-AZ
   */
  readonly multiAz?: boolean;
  /**
   * The type of network stack to use
   */
  readonly networkType?: string;
  /**
   * The description of the option group
   */
  readonly optionGroupDescription?: string;
  /**
   * Name of the option group
   */
  readonly optionGroupName?: string;
  /**
   * Define maximum timeout for deletion of `aws_db_option_group` resource
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly optionGroupTimeouts?: { [key: string]: string };
  /**
   * Determines whether to use `option_group_name` as is or create a unique name beginning with the `option_group_name` as the prefix
   * @default true
   */
  readonly optionGroupUseNamePrefix?: boolean;
  /**
   * A list of Options to apply
   * @default
   */
  readonly options?: any;
  /**
   * Description of the DB parameter group to create
   */
  readonly parameterGroupDescription?: string;
  /**
   * Name of the DB parameter group to associate or create
   */
  readonly parameterGroupName?: string;
  /**
   * Determines whether to use `parameter_group_name` as is or create a unique name beginning with the `parameter_group_name` as the prefix
   * @default true
   */
  readonly parameterGroupUseNamePrefix?: boolean;
  /**
   * A list of DB parameters (map) to apply
   * @default
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly parameters?: { [key: string]: string }[];
  /**
   *   Password for the master DB user. Note that this may show up in logs, and it will be stored in the state file.
  The password provided will not be used if the variable create_random_password is set to true.

   */
  readonly password?: string;
  /**
   * Specifies whether Performance Insights are enabled
   */
  readonly performanceInsightsEnabled?: boolean;
  /**
   * The ARN for the KMS key to encrypt Performance Insights data
   */
  readonly performanceInsightsKmsKeyId?: string;
  /**
   * The amount of time in days to retain Performance Insights data. Valid values are `7`, `731` (2 years) or a multiple of `31`
   * @default 7
   */
  readonly performanceInsightsRetentionPeriod?: number;
  /**
   * The port on which the DB accepts connections
   */
  readonly port?: string;
  /**
   * Bool to control if instance is publicly accessible
   */
  readonly publiclyAccessible?: boolean;
  /**
   * Do you agree that Putin doesn't respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!
   * @default true
   */
  readonly putinKhuylo?: boolean;
  /**
   * Length of random password to create
   * @default 16
   */
  readonly randomPasswordLength?: number;
  /**
   * Specifies whether the replica is in either mounted or open-read-only mode. This attribute is only supported by Oracle instances. Oracle replicas operate in open-read-only mode unless otherwise specified
   */
  readonly replicaMode?: string;
  /**
   * Specifies that this resource is a Replicate database, and to use this value as the source database. This correlates to the identifier of another Amazon RDS Database to replicate
   */
  readonly replicateSourceDb?: string;
  /**
   * Restore to a point in time (MySQL is NOT supported)
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly restoreToPointInTime?: { [key: string]: string };
  /**
   * Restore from a Percona Xtrabackup in S3 (only MySQL is supported)
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly s3Import?: { [key: string]: string };
  /**
   * Determines whether a final DB snapshot is created before the DB instance is deleted. If true is specified, no DBSnapshot is created. If false is specified, a DB snapshot is created before the DB instance is deleted
   */
  readonly skipFinalSnapshot?: boolean;
  /**
   * Specifies whether or not to create this database from a snapshot. This correlates to the snapshot ID you'd find in the RDS console, e.g: rds:production-2015-06-26-06-05
   */
  readonly snapshotIdentifier?: string;
  /**
   * Specifies whether the DB instance is encrypted
   * @default true
   */
  readonly storageEncrypted?: boolean;
  /**
   * Storage throughput value for the DB instance. See `notes` for limitations regarding this variable for `gp3`
   */
  readonly storageThroughput?: number;
  /**
   * One of 'standard' (magnetic), 'gp2' (general purpose SSD), 'gp3' (new generation of general purpose SSD), or 'io1' (provisioned IOPS SSD). The default is 'io1' if iops is specified, 'gp2' if not. If you specify 'io1' or 'gp3' , you must also include a value for the 'iops' parameter
   */
  readonly storageType?: string;
  /**
   * A list of VPC subnet IDs
   * @default
   */
  readonly subnetIds?: string[];
  /**
   * A mapping of tags to assign to all resources
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly tags?: { [key: string]: string };
  /**
   * Updated Terraform resource management timeouts. Applies to `aws_db_instance` in particular to permit resource management times
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly timeouts?: { [key: string]: string };
  /**
   * Time zone of the DB instance. timezone is currently only supported by Microsoft SQL Server. The timezone can only be set on creation. See MSSQL User Guide for more information
   */
  readonly timezone?: string;
  /**
   * Username for the master DB user
   */
  readonly username?: string;
  /**
   * List of VPC security groups to associate
   * @default
   */
  readonly vpcSecurityGroupIds?: string[];
}
export class Rds extends TerraformModule {
  private readonly inputs: { [name: string]: any } = { }
  public constructor(scope: Construct, id: string, config: RdsConfig) {
    super(scope, id, {
      ...config,
      source: 'terraform-aws-modules/rds/aws',
      version: '5.6.0',
    });
    this.allocatedStorage = config.allocatedStorage;
    this.allowMajorVersionUpgrade = config.allowMajorVersionUpgrade;
    this.applyImmediately = config.applyImmediately;
    this.autoMinorVersionUpgrade = config.autoMinorVersionUpgrade;
    this.availabilityZone = config.availabilityZone;
    this.backupRetentionPeriod = config.backupRetentionPeriod;
    this.backupWindow = config.backupWindow;
    this.blueGreenUpdate = config.blueGreenUpdate;
    this.caCertIdentifier = config.caCertIdentifier;
    this.characterSetName = config.characterSetName;
    this.cloudwatchLogGroupKmsKeyId = config.cloudwatchLogGroupKmsKeyId;
    this.cloudwatchLogGroupRetentionInDays = config.cloudwatchLogGroupRetentionInDays;
    this.copyTagsToSnapshot = config.copyTagsToSnapshot;
    this.createCloudwatchLogGroup = config.createCloudwatchLogGroup;
    this.createDbInstance = config.createDbInstance;
    this.createDbOptionGroup = config.createDbOptionGroup;
    this.createDbParameterGroup = config.createDbParameterGroup;
    this.createDbSubnetGroup = config.createDbSubnetGroup;
    this.createMonitoringRole = config.createMonitoringRole;
    this.createRandomPassword = config.createRandomPassword;
    this.customIamInstanceProfile = config.customIamInstanceProfile;
    this.dbInstanceTags = config.dbInstanceTags;
    this.dbName = config.dbName;
    this.dbOptionGroupTags = config.dbOptionGroupTags;
    this.dbParameterGroupTags = config.dbParameterGroupTags;
    this.dbSubnetGroupDescription = config.dbSubnetGroupDescription;
    this.dbSubnetGroupName = config.dbSubnetGroupName;
    this.dbSubnetGroupTags = config.dbSubnetGroupTags;
    this.dbSubnetGroupUseNamePrefix = config.dbSubnetGroupUseNamePrefix;
    this.deleteAutomatedBackups = config.deleteAutomatedBackups;
    this.deletionProtection = config.deletionProtection;
    this.domain = config.domain;
    this.domainIamRoleName = config.domainIamRoleName;
    this.enabledCloudwatchLogsExports = config.enabledCloudwatchLogsExports;
    this.engine = config.engine;
    this.engineVersion = config.engineVersion;
    this.family = config.family;
    this.finalSnapshotIdentifierPrefix = config.finalSnapshotIdentifierPrefix;
    this.iamDatabaseAuthenticationEnabled = config.iamDatabaseAuthenticationEnabled;
    this.identifier = config.identifier;
    this.instanceClass = config.instanceClass;
    this.instanceUseIdentifierPrefix = config.instanceUseIdentifierPrefix;
    this.iops = config.iops;
    this.kmsKeyId = config.kmsKeyId;
    this.licenseModel = config.licenseModel;
    this.maintenanceWindow = config.maintenanceWindow;
    this.majorEngineVersion = config.majorEngineVersion;
    this.maxAllocatedStorage = config.maxAllocatedStorage;
    this.monitoringInterval = config.monitoringInterval;
    this.monitoringRoleArn = config.monitoringRoleArn;
    this.monitoringRoleDescription = config.monitoringRoleDescription;
    this.monitoringRoleName = config.monitoringRoleName;
    this.monitoringRolePermissionsBoundary = config.monitoringRolePermissionsBoundary;
    this.monitoringRoleUseNamePrefix = config.monitoringRoleUseNamePrefix;
    this.multiAz = config.multiAz;
    this.networkType = config.networkType;
    this.optionGroupDescription = config.optionGroupDescription;
    this.optionGroupName = config.optionGroupName;
    this.optionGroupTimeouts = config.optionGroupTimeouts;
    this.optionGroupUseNamePrefix = config.optionGroupUseNamePrefix;
    this.options = config.options;
    this.parameterGroupDescription = config.parameterGroupDescription;
    this.parameterGroupName = config.parameterGroupName;
    this.parameterGroupUseNamePrefix = config.parameterGroupUseNamePrefix;
    this.parameters = config.parameters;
    this.password = config.password;
    this.performanceInsightsEnabled = config.performanceInsightsEnabled;
    this.performanceInsightsKmsKeyId = config.performanceInsightsKmsKeyId;
    this.performanceInsightsRetentionPeriod = config.performanceInsightsRetentionPeriod;
    this.port = config.port;
    this.publiclyAccessible = config.publiclyAccessible;
    this.putinKhuylo = config.putinKhuylo;
    this.randomPasswordLength = config.randomPasswordLength;
    this.replicaMode = config.replicaMode;
    this.replicateSourceDb = config.replicateSourceDb;
    this.restoreToPointInTime = config.restoreToPointInTime;
    this.s3Import = config.s3Import;
    this.skipFinalSnapshot = config.skipFinalSnapshot;
    this.snapshotIdentifier = config.snapshotIdentifier;
    this.storageEncrypted = config.storageEncrypted;
    this.storageThroughput = config.storageThroughput;
    this.storageType = config.storageType;
    this.subnetIds = config.subnetIds;
    this.tags = config.tags;
    this.timeouts = config.timeouts;
    this.timezone = config.timezone;
    this.username = config.username;
    this.vpcSecurityGroupIds = config.vpcSecurityGroupIds;
  }
  public get allocatedStorage(): string | undefined {
    return this.inputs['allocated_storage'] as string | undefined;
  }
  public set allocatedStorage(value: string | undefined) {
    this.inputs['allocated_storage'] = value;
  }
  public get allowMajorVersionUpgrade(): boolean | undefined {
    return this.inputs['allow_major_version_upgrade'] as boolean | undefined;
  }
  public set allowMajorVersionUpgrade(value: boolean | undefined) {
    this.inputs['allow_major_version_upgrade'] = value;
  }
  public get applyImmediately(): boolean | undefined {
    return this.inputs['apply_immediately'] as boolean | undefined;
  }
  public set applyImmediately(value: boolean | undefined) {
    this.inputs['apply_immediately'] = value;
  }
  public get autoMinorVersionUpgrade(): boolean | undefined {
    return this.inputs['auto_minor_version_upgrade'] as boolean | undefined;
  }
  public set autoMinorVersionUpgrade(value: boolean | undefined) {
    this.inputs['auto_minor_version_upgrade'] = value;
  }
  public get availabilityZone(): string | undefined {
    return this.inputs['availability_zone'] as string | undefined;
  }
  public set availabilityZone(value: string | undefined) {
    this.inputs['availability_zone'] = value;
  }
  public get backupRetentionPeriod(): number | undefined {
    return this.inputs['backup_retention_period'] as number | undefined;
  }
  public set backupRetentionPeriod(value: number | undefined) {
    this.inputs['backup_retention_period'] = value;
  }
  public get backupWindow(): string | undefined {
    return this.inputs['backup_window'] as string | undefined;
  }
  public set backupWindow(value: string | undefined) {
    this.inputs['backup_window'] = value;
  }
  public get blueGreenUpdate(): { [key: string]: string } | undefined {
    return this.inputs['blue_green_update'] as { [key: string]: string } | undefined;
  }
  public set blueGreenUpdate(value: { [key: string]: string } | undefined) {
    this.inputs['blue_green_update'] = value;
  }
  public get caCertIdentifier(): string | undefined {
    return this.inputs['ca_cert_identifier'] as string | undefined;
  }
  public set caCertIdentifier(value: string | undefined) {
    this.inputs['ca_cert_identifier'] = value;
  }
  public get characterSetName(): string | undefined {
    return this.inputs['character_set_name'] as string | undefined;
  }
  public set characterSetName(value: string | undefined) {
    this.inputs['character_set_name'] = value;
  }
  public get cloudwatchLogGroupKmsKeyId(): string | undefined {
    return this.inputs['cloudwatch_log_group_kms_key_id'] as string | undefined;
  }
  public set cloudwatchLogGroupKmsKeyId(value: string | undefined) {
    this.inputs['cloudwatch_log_group_kms_key_id'] = value;
  }
  public get cloudwatchLogGroupRetentionInDays(): number | undefined {
    return this.inputs['cloudwatch_log_group_retention_in_days'] as number | undefined;
  }
  public set cloudwatchLogGroupRetentionInDays(value: number | undefined) {
    this.inputs['cloudwatch_log_group_retention_in_days'] = value;
  }
  public get copyTagsToSnapshot(): boolean | undefined {
    return this.inputs['copy_tags_to_snapshot'] as boolean | undefined;
  }
  public set copyTagsToSnapshot(value: boolean | undefined) {
    this.inputs['copy_tags_to_snapshot'] = value;
  }
  public get createCloudwatchLogGroup(): boolean | undefined {
    return this.inputs['create_cloudwatch_log_group'] as boolean | undefined;
  }
  public set createCloudwatchLogGroup(value: boolean | undefined) {
    this.inputs['create_cloudwatch_log_group'] = value;
  }
  public get createDbInstance(): boolean | undefined {
    return this.inputs['create_db_instance'] as boolean | undefined;
  }
  public set createDbInstance(value: boolean | undefined) {
    this.inputs['create_db_instance'] = value;
  }
  public get createDbOptionGroup(): boolean | undefined {
    return this.inputs['create_db_option_group'] as boolean | undefined;
  }
  public set createDbOptionGroup(value: boolean | undefined) {
    this.inputs['create_db_option_group'] = value;
  }
  public get createDbParameterGroup(): boolean | undefined {
    return this.inputs['create_db_parameter_group'] as boolean | undefined;
  }
  public set createDbParameterGroup(value: boolean | undefined) {
    this.inputs['create_db_parameter_group'] = value;
  }
  public get createDbSubnetGroup(): boolean | undefined {
    return this.inputs['create_db_subnet_group'] as boolean | undefined;
  }
  public set createDbSubnetGroup(value: boolean | undefined) {
    this.inputs['create_db_subnet_group'] = value;
  }
  public get createMonitoringRole(): boolean | undefined {
    return this.inputs['create_monitoring_role'] as boolean | undefined;
  }
  public set createMonitoringRole(value: boolean | undefined) {
    this.inputs['create_monitoring_role'] = value;
  }
  public get createRandomPassword(): boolean | undefined {
    return this.inputs['create_random_password'] as boolean | undefined;
  }
  public set createRandomPassword(value: boolean | undefined) {
    this.inputs['create_random_password'] = value;
  }
  public get customIamInstanceProfile(): string | undefined {
    return this.inputs['custom_iam_instance_profile'] as string | undefined;
  }
  public set customIamInstanceProfile(value: string | undefined) {
    this.inputs['custom_iam_instance_profile'] = value;
  }
  public get dbInstanceTags(): { [key: string]: string } | undefined {
    return this.inputs['db_instance_tags'] as { [key: string]: string } | undefined;
  }
  public set dbInstanceTags(value: { [key: string]: string } | undefined) {
    this.inputs['db_instance_tags'] = value;
  }
  public get dbName(): string | undefined {
    return this.inputs['db_name'] as string | undefined;
  }
  public set dbName(value: string | undefined) {
    this.inputs['db_name'] = value;
  }
  public get dbOptionGroupTags(): { [key: string]: string } | undefined {
    return this.inputs['db_option_group_tags'] as { [key: string]: string } | undefined;
  }
  public set dbOptionGroupTags(value: { [key: string]: string } | undefined) {
    this.inputs['db_option_group_tags'] = value;
  }
  public get dbParameterGroupTags(): { [key: string]: string } | undefined {
    return this.inputs['db_parameter_group_tags'] as { [key: string]: string } | undefined;
  }
  public set dbParameterGroupTags(value: { [key: string]: string } | undefined) {
    this.inputs['db_parameter_group_tags'] = value;
  }
  public get dbSubnetGroupDescription(): string | undefined {
    return this.inputs['db_subnet_group_description'] as string | undefined;
  }
  public set dbSubnetGroupDescription(value: string | undefined) {
    this.inputs['db_subnet_group_description'] = value;
  }
  public get dbSubnetGroupName(): string | undefined {
    return this.inputs['db_subnet_group_name'] as string | undefined;
  }
  public set dbSubnetGroupName(value: string | undefined) {
    this.inputs['db_subnet_group_name'] = value;
  }
  public get dbSubnetGroupTags(): { [key: string]: string } | undefined {
    return this.inputs['db_subnet_group_tags'] as { [key: string]: string } | undefined;
  }
  public set dbSubnetGroupTags(value: { [key: string]: string } | undefined) {
    this.inputs['db_subnet_group_tags'] = value;
  }
  public get dbSubnetGroupUseNamePrefix(): boolean | undefined {
    return this.inputs['db_subnet_group_use_name_prefix'] as boolean | undefined;
  }
  public set dbSubnetGroupUseNamePrefix(value: boolean | undefined) {
    this.inputs['db_subnet_group_use_name_prefix'] = value;
  }
  public get deleteAutomatedBackups(): boolean | undefined {
    return this.inputs['delete_automated_backups'] as boolean | undefined;
  }
  public set deleteAutomatedBackups(value: boolean | undefined) {
    this.inputs['delete_automated_backups'] = value;
  }
  public get deletionProtection(): boolean | undefined {
    return this.inputs['deletion_protection'] as boolean | undefined;
  }
  public set deletionProtection(value: boolean | undefined) {
    this.inputs['deletion_protection'] = value;
  }
  public get domain(): string | undefined {
    return this.inputs['domain'] as string | undefined;
  }
  public set domain(value: string | undefined) {
    this.inputs['domain'] = value;
  }
  public get domainIamRoleName(): string | undefined {
    return this.inputs['domain_iam_role_name'] as string | undefined;
  }
  public set domainIamRoleName(value: string | undefined) {
    this.inputs['domain_iam_role_name'] = value;
  }
  public get enabledCloudwatchLogsExports(): string[] | undefined {
    return this.inputs['enabled_cloudwatch_logs_exports'] as string[] | undefined;
  }
  public set enabledCloudwatchLogsExports(value: string[] | undefined) {
    this.inputs['enabled_cloudwatch_logs_exports'] = value;
  }
  public get engine(): string | undefined {
    return this.inputs['engine'] as string | undefined;
  }
  public set engine(value: string | undefined) {
    this.inputs['engine'] = value;
  }
  public get engineVersion(): string | undefined {
    return this.inputs['engine_version'] as string | undefined;
  }
  public set engineVersion(value: string | undefined) {
    this.inputs['engine_version'] = value;
  }
  public get family(): string | undefined {
    return this.inputs['family'] as string | undefined;
  }
  public set family(value: string | undefined) {
    this.inputs['family'] = value;
  }
  public get finalSnapshotIdentifierPrefix(): string | undefined {
    return this.inputs['final_snapshot_identifier_prefix'] as string | undefined;
  }
  public set finalSnapshotIdentifierPrefix(value: string | undefined) {
    this.inputs['final_snapshot_identifier_prefix'] = value;
  }
  public get iamDatabaseAuthenticationEnabled(): boolean | undefined {
    return this.inputs['iam_database_authentication_enabled'] as boolean | undefined;
  }
  public set iamDatabaseAuthenticationEnabled(value: boolean | undefined) {
    this.inputs['iam_database_authentication_enabled'] = value;
  }
  public get identifier(): string {
    return this.inputs['identifier'] as string;
  }
  public set identifier(value: string) {
    this.inputs['identifier'] = value;
  }
  public get instanceClass(): string | undefined {
    return this.inputs['instance_class'] as string | undefined;
  }
  public set instanceClass(value: string | undefined) {
    this.inputs['instance_class'] = value;
  }
  public get instanceUseIdentifierPrefix(): boolean | undefined {
    return this.inputs['instance_use_identifier_prefix'] as boolean | undefined;
  }
  public set instanceUseIdentifierPrefix(value: boolean | undefined) {
    this.inputs['instance_use_identifier_prefix'] = value;
  }
  public get iops(): number | undefined {
    return this.inputs['iops'] as number | undefined;
  }
  public set iops(value: number | undefined) {
    this.inputs['iops'] = value;
  }
  public get kmsKeyId(): string | undefined {
    return this.inputs['kms_key_id'] as string | undefined;
  }
  public set kmsKeyId(value: string | undefined) {
    this.inputs['kms_key_id'] = value;
  }
  public get licenseModel(): string | undefined {
    return this.inputs['license_model'] as string | undefined;
  }
  public set licenseModel(value: string | undefined) {
    this.inputs['license_model'] = value;
  }
  public get maintenanceWindow(): string | undefined {
    return this.inputs['maintenance_window'] as string | undefined;
  }
  public set maintenanceWindow(value: string | undefined) {
    this.inputs['maintenance_window'] = value;
  }
  public get majorEngineVersion(): string | undefined {
    return this.inputs['major_engine_version'] as string | undefined;
  }
  public set majorEngineVersion(value: string | undefined) {
    this.inputs['major_engine_version'] = value;
  }
  public get maxAllocatedStorage(): number | undefined {
    return this.inputs['max_allocated_storage'] as number | undefined;
  }
  public set maxAllocatedStorage(value: number | undefined) {
    this.inputs['max_allocated_storage'] = value;
  }
  public get monitoringInterval(): number | undefined {
    return this.inputs['monitoring_interval'] as number | undefined;
  }
  public set monitoringInterval(value: number | undefined) {
    this.inputs['monitoring_interval'] = value;
  }
  public get monitoringRoleArn(): string | undefined {
    return this.inputs['monitoring_role_arn'] as string | undefined;
  }
  public set monitoringRoleArn(value: string | undefined) {
    this.inputs['monitoring_role_arn'] = value;
  }
  public get monitoringRoleDescription(): string | undefined {
    return this.inputs['monitoring_role_description'] as string | undefined;
  }
  public set monitoringRoleDescription(value: string | undefined) {
    this.inputs['monitoring_role_description'] = value;
  }
  public get monitoringRoleName(): string | undefined {
    return this.inputs['monitoring_role_name'] as string | undefined;
  }
  public set monitoringRoleName(value: string | undefined) {
    this.inputs['monitoring_role_name'] = value;
  }
  public get monitoringRolePermissionsBoundary(): string | undefined {
    return this.inputs['monitoring_role_permissions_boundary'] as string | undefined;
  }
  public set monitoringRolePermissionsBoundary(value: string | undefined) {
    this.inputs['monitoring_role_permissions_boundary'] = value;
  }
  public get monitoringRoleUseNamePrefix(): boolean | undefined {
    return this.inputs['monitoring_role_use_name_prefix'] as boolean | undefined;
  }
  public set monitoringRoleUseNamePrefix(value: boolean | undefined) {
    this.inputs['monitoring_role_use_name_prefix'] = value;
  }
  public get multiAz(): boolean | undefined {
    return this.inputs['multi_az'] as boolean | undefined;
  }
  public set multiAz(value: boolean | undefined) {
    this.inputs['multi_az'] = value;
  }
  public get networkType(): string | undefined {
    return this.inputs['network_type'] as string | undefined;
  }
  public set networkType(value: string | undefined) {
    this.inputs['network_type'] = value;
  }
  public get optionGroupDescription(): string | undefined {
    return this.inputs['option_group_description'] as string | undefined;
  }
  public set optionGroupDescription(value: string | undefined) {
    this.inputs['option_group_description'] = value;
  }
  public get optionGroupName(): string | undefined {
    return this.inputs['option_group_name'] as string | undefined;
  }
  public set optionGroupName(value: string | undefined) {
    this.inputs['option_group_name'] = value;
  }
  public get optionGroupTimeouts(): { [key: string]: string } | undefined {
    return this.inputs['option_group_timeouts'] as { [key: string]: string } | undefined;
  }
  public set optionGroupTimeouts(value: { [key: string]: string } | undefined) {
    this.inputs['option_group_timeouts'] = value;
  }
  public get optionGroupUseNamePrefix(): boolean | undefined {
    return this.inputs['option_group_use_name_prefix'] as boolean | undefined;
  }
  public set optionGroupUseNamePrefix(value: boolean | undefined) {
    this.inputs['option_group_use_name_prefix'] = value;
  }
  public get options(): any | undefined {
    return this.inputs['options'] as any | undefined;
  }
  public set options(value: any | undefined) {
    this.inputs['options'] = value;
  }
  public get parameterGroupDescription(): string | undefined {
    return this.inputs['parameter_group_description'] as string | undefined;
  }
  public set parameterGroupDescription(value: string | undefined) {
    this.inputs['parameter_group_description'] = value;
  }
  public get parameterGroupName(): string | undefined {
    return this.inputs['parameter_group_name'] as string | undefined;
  }
  public set parameterGroupName(value: string | undefined) {
    this.inputs['parameter_group_name'] = value;
  }
  public get parameterGroupUseNamePrefix(): boolean | undefined {
    return this.inputs['parameter_group_use_name_prefix'] as boolean | undefined;
  }
  public set parameterGroupUseNamePrefix(value: boolean | undefined) {
    this.inputs['parameter_group_use_name_prefix'] = value;
  }
  public get parameters(): { [key: string]: string }[] | undefined {
    return this.inputs['parameters'] as { [key: string]: string }[] | undefined;
  }
  public set parameters(value: { [key: string]: string }[] | undefined) {
    this.inputs['parameters'] = value;
  }
  public get password(): string | undefined {
    return this.inputs['password'] as string | undefined;
  }
  public set password(value: string | undefined) {
    this.inputs['password'] = value;
  }
  public get performanceInsightsEnabled(): boolean | undefined {
    return this.inputs['performance_insights_enabled'] as boolean | undefined;
  }
  public set performanceInsightsEnabled(value: boolean | undefined) {
    this.inputs['performance_insights_enabled'] = value;
  }
  public get performanceInsightsKmsKeyId(): string | undefined {
    return this.inputs['performance_insights_kms_key_id'] as string | undefined;
  }
  public set performanceInsightsKmsKeyId(value: string | undefined) {
    this.inputs['performance_insights_kms_key_id'] = value;
  }
  public get performanceInsightsRetentionPeriod(): number | undefined {
    return this.inputs['performance_insights_retention_period'] as number | undefined;
  }
  public set performanceInsightsRetentionPeriod(value: number | undefined) {
    this.inputs['performance_insights_retention_period'] = value;
  }
  public get port(): string | undefined {
    return this.inputs['port'] as string | undefined;
  }
  public set port(value: string | undefined) {
    this.inputs['port'] = value;
  }
  public get publiclyAccessible(): boolean | undefined {
    return this.inputs['publicly_accessible'] as boolean | undefined;
  }
  public set publiclyAccessible(value: boolean | undefined) {
    this.inputs['publicly_accessible'] = value;
  }
  public get putinKhuylo(): boolean | undefined {
    return this.inputs['putin_khuylo'] as boolean | undefined;
  }
  public set putinKhuylo(value: boolean | undefined) {
    this.inputs['putin_khuylo'] = value;
  }
  public get randomPasswordLength(): number | undefined {
    return this.inputs['random_password_length'] as number | undefined;
  }
  public set randomPasswordLength(value: number | undefined) {
    this.inputs['random_password_length'] = value;
  }
  public get replicaMode(): string | undefined {
    return this.inputs['replica_mode'] as string | undefined;
  }
  public set replicaMode(value: string | undefined) {
    this.inputs['replica_mode'] = value;
  }
  public get replicateSourceDb(): string | undefined {
    return this.inputs['replicate_source_db'] as string | undefined;
  }
  public set replicateSourceDb(value: string | undefined) {
    this.inputs['replicate_source_db'] = value;
  }
  public get restoreToPointInTime(): { [key: string]: string } | undefined {
    return this.inputs['restore_to_point_in_time'] as { [key: string]: string } | undefined;
  }
  public set restoreToPointInTime(value: { [key: string]: string } | undefined) {
    this.inputs['restore_to_point_in_time'] = value;
  }
  public get s3Import(): { [key: string]: string } | undefined {
    return this.inputs['s3_import'] as { [key: string]: string } | undefined;
  }
  public set s3Import(value: { [key: string]: string } | undefined) {
    this.inputs['s3_import'] = value;
  }
  public get skipFinalSnapshot(): boolean | undefined {
    return this.inputs['skip_final_snapshot'] as boolean | undefined;
  }
  public set skipFinalSnapshot(value: boolean | undefined) {
    this.inputs['skip_final_snapshot'] = value;
  }
  public get snapshotIdentifier(): string | undefined {
    return this.inputs['snapshot_identifier'] as string | undefined;
  }
  public set snapshotIdentifier(value: string | undefined) {
    this.inputs['snapshot_identifier'] = value;
  }
  public get storageEncrypted(): boolean | undefined {
    return this.inputs['storage_encrypted'] as boolean | undefined;
  }
  public set storageEncrypted(value: boolean | undefined) {
    this.inputs['storage_encrypted'] = value;
  }
  public get storageThroughput(): number | undefined {
    return this.inputs['storage_throughput'] as number | undefined;
  }
  public set storageThroughput(value: number | undefined) {
    this.inputs['storage_throughput'] = value;
  }
  public get storageType(): string | undefined {
    return this.inputs['storage_type'] as string | undefined;
  }
  public set storageType(value: string | undefined) {
    this.inputs['storage_type'] = value;
  }
  public get subnetIds(): string[] | undefined {
    return this.inputs['subnet_ids'] as string[] | undefined;
  }
  public set subnetIds(value: string[] | undefined) {
    this.inputs['subnet_ids'] = value;
  }
  public get tags(): { [key: string]: string } | undefined {
    return this.inputs['tags'] as { [key: string]: string } | undefined;
  }
  public set tags(value: { [key: string]: string } | undefined) {
    this.inputs['tags'] = value;
  }
  public get timeouts(): { [key: string]: string } | undefined {
    return this.inputs['timeouts'] as { [key: string]: string } | undefined;
  }
  public set timeouts(value: { [key: string]: string } | undefined) {
    this.inputs['timeouts'] = value;
  }
  public get timezone(): string | undefined {
    return this.inputs['timezone'] as string | undefined;
  }
  public set timezone(value: string | undefined) {
    this.inputs['timezone'] = value;
  }
  public get username(): string | undefined {
    return this.inputs['username'] as string | undefined;
  }
  public set username(value: string | undefined) {
    this.inputs['username'] = value;
  }
  public get vpcSecurityGroupIds(): string[] | undefined {
    return this.inputs['vpc_security_group_ids'] as string[] | undefined;
  }
  public set vpcSecurityGroupIds(value: string[] | undefined) {
    this.inputs['vpc_security_group_ids'] = value;
  }
  public get dbInstanceAddressOutput() {
    return this.getString('db_instance_address')
  }
  public get dbInstanceArnOutput() {
    return this.getString('db_instance_arn')
  }
  public get dbInstanceAvailabilityZoneOutput() {
    return this.getString('db_instance_availability_zone')
  }
  public get dbInstanceCaCertIdentifierOutput() {
    return this.getString('db_instance_ca_cert_identifier')
  }
  public get dbInstanceCloudwatchLogGroupsOutput() {
    return this.getString('db_instance_cloudwatch_log_groups')
  }
  public get dbInstanceDomainOutput() {
    return this.getString('db_instance_domain')
  }
  public get dbInstanceDomainIamRoleNameOutput() {
    return this.getString('db_instance_domain_iam_role_name')
  }
  public get dbInstanceEndpointOutput() {
    return this.getString('db_instance_endpoint')
  }
  public get dbInstanceEngineOutput() {
    return this.getString('db_instance_engine')
  }
  public get dbInstanceEngineVersionActualOutput() {
    return this.getString('db_instance_engine_version_actual')
  }
  public get dbInstanceHostedZoneIdOutput() {
    return this.getString('db_instance_hosted_zone_id')
  }
  public get dbInstanceIdOutput() {
    return this.getString('db_instance_id')
  }
  public get dbInstanceNameOutput() {
    return this.getString('db_instance_name')
  }
  public get dbInstancePasswordOutput() {
    return this.getString('db_instance_password')
  }
  public get dbInstancePortOutput() {
    return this.getString('db_instance_port')
  }
  public get dbInstanceResourceIdOutput() {
    return this.getString('db_instance_resource_id')
  }
  public get dbInstanceStatusOutput() {
    return this.getString('db_instance_status')
  }
  public get dbInstanceUsernameOutput() {
    return this.getString('db_instance_username')
  }
  public get dbOptionGroupArnOutput() {
    return this.getString('db_option_group_arn')
  }
  public get dbOptionGroupIdOutput() {
    return this.getString('db_option_group_id')
  }
  public get dbParameterGroupArnOutput() {
    return this.getString('db_parameter_group_arn')
  }
  public get dbParameterGroupIdOutput() {
    return this.getString('db_parameter_group_id')
  }
  public get dbSubnetGroupArnOutput() {
    return this.getString('db_subnet_group_arn')
  }
  public get dbSubnetGroupIdOutput() {
    return this.getString('db_subnet_group_id')
  }
  public get enhancedMonitoringIamRoleArnOutput() {
    return this.getString('enhanced_monitoring_iam_role_arn')
  }
  public get enhancedMonitoringIamRoleNameOutput() {
    return this.getString('enhanced_monitoring_iam_role_name')
  }
  protected synthesizeAttributes() {
    return this.inputs;
  }
}
