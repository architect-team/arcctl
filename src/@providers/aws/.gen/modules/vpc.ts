// generated by cdktf get
// terraform-aws-modules/vpc/aws
import { TerraformModule, TerraformModuleUserConfig } from 'cdktf';
import { Construct } from 'constructs';
export interface VpcConfig extends TerraformModuleUserConfig {
  /**
   * The Autonomous System Number (ASN) for the Amazon side of the gateway. By default the virtual private gateway is created with the current default Amazon ASN.
   * @default 64512
   */
  readonly amazonSideAsn?: string;
  /**
   * Assign IPv6 address on subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch
   */
  readonly assignIpv6AddressOnCreation?: boolean;
  /**
   * A list of availability zones names or ids in the region
   * @default 
   */
  readonly azs?: string[];
  /**
   * (Optional) The IPv4 CIDR block for the VPC. CIDR can be explicitly set or it can be derived from IPAM using `ipv4_netmask_length` & `ipv4_ipam_pool_id`
   * @default 0.0.0.0/0
   */
  readonly cidr?: string;
  /**
   * Controls if an internet gateway route for public database access should be created
   */
  readonly createDatabaseInternetGatewayRoute?: boolean;
  /**
   * Controls if a nat gateway route should be created to give internet access to the database subnets
   */
  readonly createDatabaseNatGatewayRoute?: boolean;
  /**
   * Controls if database subnet group should be created (n.b. database_subnets must also be set)
   * @default true
   */
  readonly createDatabaseSubnetGroup?: boolean;
  /**
   * Controls if separate route table for database should be created
   */
  readonly createDatabaseSubnetRouteTable?: boolean;
  /**
   * Controls if an Egress Only Internet Gateway is created and its related routes.
   * @default true
   */
  readonly createEgressOnlyIgw?: boolean;
  /**
   * Controls if elasticache subnet group should be created
   * @default true
   */
  readonly createElasticacheSubnetGroup?: boolean;
  /**
   * Controls if separate route table for elasticache should be created
   */
  readonly createElasticacheSubnetRouteTable?: boolean;
  /**
   * Whether to create IAM role for VPC Flow Logs
   */
  readonly createFlowLogCloudwatchIamRole?: boolean;
  /**
   * Whether to create CloudWatch log group for VPC Flow Logs
   */
  readonly createFlowLogCloudwatchLogGroup?: boolean;
  /**
   * Controls if an Internet Gateway is created for public subnets and the related routes that connect them.
   * @default true
   */
  readonly createIgw?: boolean;
  /**
   * Controls if redshift subnet group should be created
   * @default true
   */
  readonly createRedshiftSubnetGroup?: boolean;
  /**
   * Controls if separate route table for redshift should be created
   */
  readonly createRedshiftSubnetRouteTable?: boolean;
  /**
   * Controls if VPC should be created (it affects almost all resources)
   * @default true
   */
  readonly createVpc?: boolean;
  /**
   * Additional tags for the Customer Gateway
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly customerGatewayTags?: { [key: string]: string };
  /**
   * Maps of Customer Gateway's attributes (BGP ASN and Gateway's Internet-routable external IP address)
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly customerGateways?: { [key: string]: { [key: string]: any } };
  /**
   * Additional tags for the database subnets network ACL
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly databaseAclTags?: { [key: string]: string };
  /**
   * Whether to use dedicated network ACL (not default) and custom rules for database subnets
   */
  readonly databaseDedicatedNetworkAcl?: boolean;
  /**
   * Database subnets inbound network ACL rules
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly databaseInboundAclRules?: { [key: string]: string }[];
  /**
   * Database subnets outbound network ACL rules
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly databaseOutboundAclRules?: { [key: string]: string }[];
  /**
   * Additional tags for the database route tables
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly databaseRouteTableTags?: { [key: string]: string };
  /**
   * Assign IPv6 address on database subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch
   */
  readonly databaseSubnetAssignIpv6AddressOnCreation?: boolean;
  /**
   * Name of database subnet group
   */
  readonly databaseSubnetGroupName?: string;
  /**
   * Additional tags for the database subnet group
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly databaseSubnetGroupTags?: { [key: string]: string };
  /**
   * Assigns IPv6 database subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
   * @default 
   */
  readonly databaseSubnetIpv6Prefixes?: string[];
  /**
   * Explicit values to use in the Name tag on database subnets. If empty, Name tags are generated.
   * @default 
   */
  readonly databaseSubnetNames?: string[];
  /**
   * Suffix to append to database subnets name
   * @default db
   */
  readonly databaseSubnetSuffix?: string;
  /**
   * Additional tags for the database subnets
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly databaseSubnetTags?: { [key: string]: string };
  /**
   * A list of database subnets
   * @default 
   */
  readonly databaseSubnets?: string[];
  /**
   * List of maps of egress rules to set on the Default Network ACL
   * @default [object Object],[object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly defaultNetworkAclEgress?: { [key: string]: string }[];
  /**
   * List of maps of ingress rules to set on the Default Network ACL
   * @default [object Object],[object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly defaultNetworkAclIngress?: { [key: string]: string }[];
  /**
   * Name to be used on the Default Network ACL
   */
  readonly defaultNetworkAclName?: string;
  /**
   * Additional tags for the Default Network ACL
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly defaultNetworkAclTags?: { [key: string]: string };
  /**
   * Name to be used on the default route table
   */
  readonly defaultRouteTableName?: string;
  /**
   * List of virtual gateways for propagation
   * @default 
   */
  readonly defaultRouteTablePropagatingVgws?: string[];
  /**
   * Configuration block of routes. See https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_route_table#route
   * @default 
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly defaultRouteTableRoutes?: { [key: string]: string }[];
  /**
   * Additional tags for the default route table
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly defaultRouteTableTags?: { [key: string]: string };
  /**
   * List of maps of egress rules to set on the default security group
   * @default 
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly defaultSecurityGroupEgress?: { [key: string]: string }[];
  /**
   * List of maps of ingress rules to set on the default security group
   * @default 
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly defaultSecurityGroupIngress?: { [key: string]: string }[];
  /**
   * Name to be used on the default security group
   */
  readonly defaultSecurityGroupName?: string;
  /**
   * Additional tags for the default security group
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly defaultSecurityGroupTags?: { [key: string]: string };
  /**
   * [DEPRECATED](https://github.com/hashicorp/terraform/issues/31730) Should be true to enable ClassicLink in the Default VPC
   */
  readonly defaultVpcEnableClassiclink?: boolean;
  /**
   * Should be true to enable DNS hostnames in the Default VPC
   */
  readonly defaultVpcEnableDnsHostnames?: boolean;
  /**
   * Should be true to enable DNS support in the Default VPC
   * @default true
   */
  readonly defaultVpcEnableDnsSupport?: boolean;
  /**
   * Name to be used on the Default VPC
   */
  readonly defaultVpcName?: string;
  /**
   * Additional tags for the Default VPC
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly defaultVpcTags?: { [key: string]: string };
  /**
   * Specifies DNS name for DHCP options set (requires enable_dhcp_options set to true)
   */
  readonly dhcpOptionsDomainName?: string;
  /**
   * Specify a list of DNS server addresses for DHCP options set, default to AWS provided (requires enable_dhcp_options set to true)
   * @default AmazonProvidedDNS
   */
  readonly dhcpOptionsDomainNameServers?: string[];
  /**
   * Specify a list of netbios servers for DHCP options set (requires enable_dhcp_options set to true)
   * @default 
   */
  readonly dhcpOptionsNetbiosNameServers?: string[];
  /**
   * Specify netbios node_type for DHCP options set (requires enable_dhcp_options set to true)
   */
  readonly dhcpOptionsNetbiosNodeType?: string;
  /**
   * Specify a list of NTP servers for DHCP options set (requires enable_dhcp_options set to true)
   * @default 
   */
  readonly dhcpOptionsNtpServers?: string[];
  /**
   * Additional tags for the DHCP option set (requires enable_dhcp_options set to true)
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly dhcpOptionsTags?: { [key: string]: string };
  /**
   * Additional tags for the elasticache subnets network ACL
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly elasticacheAclTags?: { [key: string]: string };
  /**
   * Whether to use dedicated network ACL (not default) and custom rules for elasticache subnets
   */
  readonly elasticacheDedicatedNetworkAcl?: boolean;
  /**
   * Elasticache subnets inbound network ACL rules
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly elasticacheInboundAclRules?: { [key: string]: string }[];
  /**
   * Elasticache subnets outbound network ACL rules
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly elasticacheOutboundAclRules?: { [key: string]: string }[];
  /**
   * Additional tags for the elasticache route tables
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly elasticacheRouteTableTags?: { [key: string]: string };
  /**
   * Assign IPv6 address on elasticache subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch
   */
  readonly elasticacheSubnetAssignIpv6AddressOnCreation?: boolean;
  /**
   * Name of elasticache subnet group
   */
  readonly elasticacheSubnetGroupName?: string;
  /**
   * Additional tags for the elasticache subnet group
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly elasticacheSubnetGroupTags?: { [key: string]: string };
  /**
   * Assigns IPv6 elasticache subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
   * @default 
   */
  readonly elasticacheSubnetIpv6Prefixes?: string[];
  /**
   * Explicit values to use in the Name tag on elasticache subnets. If empty, Name tags are generated.
   * @default 
   */
  readonly elasticacheSubnetNames?: string[];
  /**
   * Suffix to append to elasticache subnets name
   * @default elasticache
   */
  readonly elasticacheSubnetSuffix?: string;
  /**
   * Additional tags for the elasticache subnets
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly elasticacheSubnetTags?: { [key: string]: string };
  /**
   * A list of elasticache subnets
   * @default 
   */
  readonly elasticacheSubnets?: string[];
  /**
   * [DEPRECATED](https://github.com/hashicorp/terraform/issues/31730) Should be true to enable ClassicLink for the VPC. Only valid in regions and accounts that support EC2 Classic.
   */
  readonly enableClassiclink?: boolean;
  /**
   * [DEPRECATED](https://github.com/hashicorp/terraform/issues/31730) Should be true to enable ClassicLink DNS Support for the VPC. Only valid in regions and accounts that support EC2 Classic.
   */
  readonly enableClassiclinkDnsSupport?: boolean;
  /**
   * Should be true if you want to specify a DHCP options set with a custom domain name, DNS servers, NTP servers, netbios servers, and/or netbios server type
   */
  readonly enableDhcpOptions?: boolean;
  /**
   * Should be true to enable DNS hostnames in the VPC
   */
  readonly enableDnsHostnames?: boolean;
  /**
   * Should be true to enable DNS support in the VPC
   * @default true
   */
  readonly enableDnsSupport?: boolean;
  /**
   * Whether or not to enable VPC Flow Logs
   */
  readonly enableFlowLog?: boolean;
  /**
   * Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block.
   */
  readonly enableIpv6?: boolean;
  /**
   * Should be true if you want to provision NAT Gateways for each of your private networks
   */
  readonly enableNatGateway?: boolean;
  /**
   * Controls if redshift should have public routing table
   */
  readonly enablePublicRedshift?: boolean;
  /**
   * Should be true if you want to create a new VPN Gateway resource and attach it to the VPC
   */
  readonly enableVpnGateway?: boolean;
  /**
   * List of EIP IDs to be assigned to the NAT Gateways (used in combination with reuse_nat_ips)
   * @default 
   */
  readonly externalNatIpIds?: string[];
  /**
   * List of EIPs to be used for `nat_public_ips` output (used in combination with reuse_nat_ips and external_nat_ip_ids)
   * @default 
   */
  readonly externalNatIps?: string[];
  /**
   * The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group. When flow_log_destination_arn is set to ARN of Cloudwatch Logs, this argument needs to be provided.
   */
  readonly flowLogCloudwatchIamRoleArn?: string;
  /**
   * The ARN of the KMS Key to use when encrypting log data for VPC flow logs.
   */
  readonly flowLogCloudwatchLogGroupKmsKeyId?: string;
  /**
   * Specifies the name prefix of CloudWatch Log Group for VPC flow logs.
   * @default /aws/vpc-flow-log/
   */
  readonly flowLogCloudwatchLogGroupNamePrefix?: string;
  /**
   * Specifies the name suffix of CloudWatch Log Group for VPC flow logs.
   */
  readonly flowLogCloudwatchLogGroupNameSuffix?: string;
  /**
   * Specifies the number of days you want to retain log events in the specified log group for VPC flow logs.
   */
  readonly flowLogCloudwatchLogGroupRetentionInDays?: number;
  /**
   * The ARN of the CloudWatch log group or S3 bucket where VPC Flow Logs will be pushed. If this ARN is a S3 bucket the appropriate permissions need to be set on that bucket's policy. When create_flow_log_cloudwatch_log_group is set to false this argument must be provided.
   */
  readonly flowLogDestinationArn?: string;
  /**
   * Type of flow log destination. Can be s3 or cloud-watch-logs.
   * @default cloud-watch-logs
   */
  readonly flowLogDestinationType?: string;
  /**
   * (Optional) The format for the flow log. Valid values: `plain-text`, `parquet`.
   * @default plain-text
   */
  readonly flowLogFileFormat?: string;
  /**
   * (Optional) Indicates whether to use Hive-compatible prefixes for flow logs stored in Amazon S3.
   */
  readonly flowLogHiveCompatiblePartitions?: boolean;
  /**
   * The fields to include in the flow log record, in the order in which they should appear.
   */
  readonly flowLogLogFormat?: string;
  /**
   * The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. Valid Values: `60` seconds or `600` seconds.
   * @default 600
   */
  readonly flowLogMaxAggregationInterval?: number;
  /**
   * (Optional) Indicates whether to partition the flow log per hour. This reduces the cost and response time for queries.
   */
  readonly flowLogPerHourPartition?: boolean;
  /**
   * The type of traffic to capture. Valid values: ACCEPT, REJECT, ALL.
   * @default ALL
   */
  readonly flowLogTrafficType?: string;
  /**
   * Additional tags for the internet gateway
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly igwTags?: { [key: string]: string };
  /**
   * A tenancy option for instances launched into the VPC
   * @default default
   */
  readonly instanceTenancy?: string;
  /**
   * Additional tags for the intra subnets network ACL
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly intraAclTags?: { [key: string]: string };
  /**
   * Whether to use dedicated network ACL (not default) and custom rules for intra subnets
   */
  readonly intraDedicatedNetworkAcl?: boolean;
  /**
   * Intra subnets inbound network ACLs
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly intraInboundAclRules?: { [key: string]: string }[];
  /**
   * Intra subnets outbound network ACLs
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly intraOutboundAclRules?: { [key: string]: string }[];
  /**
   * Additional tags for the intra route tables
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly intraRouteTableTags?: { [key: string]: string };
  /**
   * Assign IPv6 address on intra subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch
   */
  readonly intraSubnetAssignIpv6AddressOnCreation?: boolean;
  /**
   * Assigns IPv6 intra subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
   * @default 
   */
  readonly intraSubnetIpv6Prefixes?: string[];
  /**
   * Explicit values to use in the Name tag on intra subnets. If empty, Name tags are generated.
   * @default 
   */
  readonly intraSubnetNames?: string[];
  /**
   * Suffix to append to intra subnets name
   * @default intra
   */
  readonly intraSubnetSuffix?: string;
  /**
   * Additional tags for the intra subnets
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly intraSubnetTags?: { [key: string]: string };
  /**
   * A list of intra subnets
   * @default 
   */
  readonly intraSubnets?: string[];
  /**
   * (Optional) The ID of an IPv4 IPAM pool you want to use for allocating this VPC's CIDR.
   */
  readonly ipv4IpamPoolId?: string;
  /**
   * (Optional) The netmask length of the IPv4 CIDR you want to allocate to this VPC. Requires specifying a ipv4_ipam_pool_id.
   */
  readonly ipv4NetmaskLength?: number;
  /**
   * (Optional) IPv6 CIDR block to request from an IPAM Pool. Can be set explicitly or derived from IPAM using `ipv6_netmask_length`.
   */
  readonly ipv6Cidr?: string;
  /**
   * (Optional) IPAM Pool ID for a IPv6 pool. Conflicts with `assign_generated_ipv6_cidr_block`.
   */
  readonly ipv6IpamPoolId?: string;
  /**
   * (Optional) Netmask length to request from IPAM Pool. Conflicts with `ipv6_cidr_block`. This can be omitted if IPAM pool as a `allocation_default_netmask_length` set. Valid values: `56`.
   */
  readonly ipv6NetmaskLength?: number;
  /**
   * Should be true to adopt and manage Default Network ACL
   */
  readonly manageDefaultNetworkAcl?: boolean;
  /**
   * Should be true to manage default route table
   */
  readonly manageDefaultRouteTable?: boolean;
  /**
   * Should be true to adopt and manage default security group
   */
  readonly manageDefaultSecurityGroup?: boolean;
  /**
   * Should be true to adopt and manage Default VPC
   */
  readonly manageDefaultVpc?: boolean;
  /**
   * Should be false if you do not want to auto-assign public IP on launch
   * @default true
   */
  readonly mapPublicIpOnLaunch?: boolean;
  /**
   * Name to be used on all the resources as identifier
   */
  readonly name?: string;
  /**
   * Additional tags for the NAT EIP
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly natEipTags?: { [key: string]: string };
  /**
   * Used to pass a custom destination route for private NAT Gateway. If not specified, the default 0.0.0.0/0 is used as a destination route.
   * @default 0.0.0.0/0
   */
  readonly natGatewayDestinationCidrBlock?: string;
  /**
   * Additional tags for the NAT gateways
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly natGatewayTags?: { [key: string]: string };
  /**
   * Should be true if you want only one NAT Gateway per availability zone. Requires `var.azs` to be set, and the number of `public_subnets` created to be greater than or equal to the number of availability zones specified in `var.azs`.
   */
  readonly oneNatGatewayPerAz?: boolean;
  /**
   * Additional tags for the outpost subnets network ACL
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly outpostAclTags?: { [key: string]: string };
  /**
   * ARN of Outpost you want to create a subnet in.
   */
  readonly outpostArn?: string;
  /**
   * AZ where Outpost is anchored.
   */
  readonly outpostAz?: string;
  /**
   * Whether to use dedicated network ACL (not default) and custom rules for outpost subnets
   */
  readonly outpostDedicatedNetworkAcl?: boolean;
  /**
   * Outpost subnets inbound network ACLs
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly outpostInboundAclRules?: { [key: string]: string }[];
  /**
   * Outpost subnets outbound network ACLs
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly outpostOutboundAclRules?: { [key: string]: string }[];
  /**
   * Assign IPv6 address on outpost subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch
   */
  readonly outpostSubnetAssignIpv6AddressOnCreation?: boolean;
  /**
   * Assigns IPv6 outpost subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
   * @default 
   */
  readonly outpostSubnetIpv6Prefixes?: string[];
  /**
   * Explicit values to use in the Name tag on outpost subnets. If empty, Name tags are generated.
   * @default 
   */
  readonly outpostSubnetNames?: string[];
  /**
   * Suffix to append to outpost subnets name
   * @default outpost
   */
  readonly outpostSubnetSuffix?: string;
  /**
   * Additional tags for the outpost subnets
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly outpostSubnetTags?: { [key: string]: string };
  /**
   * A list of outpost subnets inside the VPC
   * @default 
   */
  readonly outpostSubnets?: string[];
  /**
   * Additional tags for the private subnets network ACL
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly privateAclTags?: { [key: string]: string };
  /**
   * Whether to use dedicated network ACL (not default) and custom rules for private subnets
   */
  readonly privateDedicatedNetworkAcl?: boolean;
  /**
   * Private subnets inbound network ACLs
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly privateInboundAclRules?: { [key: string]: string }[];
  /**
   * Private subnets outbound network ACLs
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly privateOutboundAclRules?: { [key: string]: string }[];
  /**
   * Additional tags for the private route tables
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly privateRouteTableTags?: { [key: string]: string };
  /**
   * Assign IPv6 address on private subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch
   */
  readonly privateSubnetAssignIpv6AddressOnCreation?: boolean;
  /**
   * Assigns IPv6 private subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
   * @default 
   */
  readonly privateSubnetIpv6Prefixes?: string[];
  /**
   * Explicit values to use in the Name tag on private subnets. If empty, Name tags are generated.
   * @default 
   */
  readonly privateSubnetNames?: string[];
  /**
   * Suffix to append to private subnets name
   * @default private
   */
  readonly privateSubnetSuffix?: string;
  /**
   * Additional tags for the private subnets
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly privateSubnetTags?: { [key: string]: string };
  /**
   * Additional tags for the private subnets where the primary key is the AZ
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly privateSubnetTagsPerAz?: { [key: string]: { [key: string]: string } };
  /**
   * A list of private subnets inside the VPC
   * @default 
   */
  readonly privateSubnets?: string[];
  /**
   * Should be true if you want route table propagation
   */
  readonly propagateIntraRouteTablesVgw?: boolean;
  /**
   * Should be true if you want route table propagation
   */
  readonly propagatePrivateRouteTablesVgw?: boolean;
  /**
   * Should be true if you want route table propagation
   */
  readonly propagatePublicRouteTablesVgw?: boolean;
  /**
   * Additional tags for the public subnets network ACL
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly publicAclTags?: { [key: string]: string };
  /**
   * Whether to use dedicated network ACL (not default) and custom rules for public subnets
   */
  readonly publicDedicatedNetworkAcl?: boolean;
  /**
   * Public subnets inbound network ACLs
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly publicInboundAclRules?: { [key: string]: string }[];
  /**
   * Public subnets outbound network ACLs
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly publicOutboundAclRules?: { [key: string]: string }[];
  /**
   * Additional tags for the public route tables
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly publicRouteTableTags?: { [key: string]: string };
  /**
   * Assign IPv6 address on public subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch
   */
  readonly publicSubnetAssignIpv6AddressOnCreation?: boolean;
  /**
   * Assigns IPv6 public subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
   * @default 
   */
  readonly publicSubnetIpv6Prefixes?: string[];
  /**
   * Explicit values to use in the Name tag on public subnets. If empty, Name tags are generated.
   * @default 
   */
  readonly publicSubnetNames?: string[];
  /**
   * Suffix to append to public subnets name
   * @default public
   */
  readonly publicSubnetSuffix?: string;
  /**
   * Additional tags for the public subnets
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly publicSubnetTags?: { [key: string]: string };
  /**
   * Additional tags for the public subnets where the primary key is the AZ
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly publicSubnetTagsPerAz?: { [key: string]: { [key: string]: string } };
  /**
   * A list of public subnets inside the VPC
   * @default 
   */
  readonly publicSubnets?: string[];
  /**
   * Do you agree that Putin doesn't respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!
   * @default true
   */
  readonly putinKhuylo?: boolean;
  /**
   * Additional tags for the redshift subnets network ACL
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly redshiftAclTags?: { [key: string]: string };
  /**
   * Whether to use dedicated network ACL (not default) and custom rules for redshift subnets
   */
  readonly redshiftDedicatedNetworkAcl?: boolean;
  /**
   * Redshift subnets inbound network ACL rules
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly redshiftInboundAclRules?: { [key: string]: string }[];
  /**
   * Redshift subnets outbound network ACL rules
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly redshiftOutboundAclRules?: { [key: string]: string }[];
  /**
   * Additional tags for the redshift route tables
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly redshiftRouteTableTags?: { [key: string]: string };
  /**
   * Assign IPv6 address on redshift subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch
   */
  readonly redshiftSubnetAssignIpv6AddressOnCreation?: boolean;
  /**
   * Name of redshift subnet group
   */
  readonly redshiftSubnetGroupName?: string;
  /**
   * Additional tags for the redshift subnet group
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly redshiftSubnetGroupTags?: { [key: string]: string };
  /**
   * Assigns IPv6 redshift subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
   * @default 
   */
  readonly redshiftSubnetIpv6Prefixes?: string[];
  /**
   * Explicit values to use in the Name tag on redshift subnets. If empty, Name tags are generated.
   * @default 
   */
  readonly redshiftSubnetNames?: string[];
  /**
   * Suffix to append to redshift subnets name
   * @default redshift
   */
  readonly redshiftSubnetSuffix?: string;
  /**
   * Additional tags for the redshift subnets
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly redshiftSubnetTags?: { [key: string]: string };
  /**
   * A list of redshift subnets
   * @default 
   */
  readonly redshiftSubnets?: string[];
  /**
   * Should be true if you don't want EIPs to be created for your NAT Gateways and will instead pass them in via the 'external_nat_ip_ids' variable
   */
  readonly reuseNatIps?: boolean;
  /**
   * List of secondary CIDR blocks to associate with the VPC to extend the IP Address pool
   * @default 
   */
  readonly secondaryCidrBlocks?: string[];
  /**
   * Should be true if you want to provision a single shared NAT Gateway across all of your private networks
   */
  readonly singleNatGateway?: boolean;
  /**
   * A map of tags to add to all resources
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly tags?: { [key: string]: string };
  /**
   * Determines whether IPAM pool is used for CIDR allocation
   */
  readonly useIpamPool?: boolean;
  /**
   * The ARN of the Permissions Boundary for the VPC Flow Log IAM Role
   */
  readonly vpcFlowLogPermissionsBoundary?: string;
  /**
   * Additional tags for the VPC Flow Logs
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly vpcFlowLogTags?: { [key: string]: string };
  /**
   * Additional tags for the VPC
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly vpcTags?: { [key: string]: string };
  /**
   * The Availability Zone for the VPN Gateway
   */
  readonly vpnGatewayAz?: string;
  /**
   * ID of VPN Gateway to attach to the VPC
   */
  readonly vpnGatewayId?: string;
  /**
   * Additional tags for the VPN gateway
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly vpnGatewayTags?: { [key: string]: string };
}
export class Vpc extends TerraformModule {
  private readonly inputs: { [name: string]: any } = { }
  public constructor(scope: Construct, id: string, config: VpcConfig = {}) {
    super(scope, id, {
      ...config,
      source: 'terraform-aws-modules/vpc/aws',
      version: '3.19.0',
    });
    this.amazonSideAsn = config.amazonSideAsn;
    this.assignIpv6AddressOnCreation = config.assignIpv6AddressOnCreation;
    this.azs = config.azs;
    this.cidr = config.cidr;
    this.createDatabaseInternetGatewayRoute = config.createDatabaseInternetGatewayRoute;
    this.createDatabaseNatGatewayRoute = config.createDatabaseNatGatewayRoute;
    this.createDatabaseSubnetGroup = config.createDatabaseSubnetGroup;
    this.createDatabaseSubnetRouteTable = config.createDatabaseSubnetRouteTable;
    this.createEgressOnlyIgw = config.createEgressOnlyIgw;
    this.createElasticacheSubnetGroup = config.createElasticacheSubnetGroup;
    this.createElasticacheSubnetRouteTable = config.createElasticacheSubnetRouteTable;
    this.createFlowLogCloudwatchIamRole = config.createFlowLogCloudwatchIamRole;
    this.createFlowLogCloudwatchLogGroup = config.createFlowLogCloudwatchLogGroup;
    this.createIgw = config.createIgw;
    this.createRedshiftSubnetGroup = config.createRedshiftSubnetGroup;
    this.createRedshiftSubnetRouteTable = config.createRedshiftSubnetRouteTable;
    this.createVpc = config.createVpc;
    this.customerGatewayTags = config.customerGatewayTags;
    this.customerGateways = config.customerGateways;
    this.databaseAclTags = config.databaseAclTags;
    this.databaseDedicatedNetworkAcl = config.databaseDedicatedNetworkAcl;
    this.databaseInboundAclRules = config.databaseInboundAclRules;
    this.databaseOutboundAclRules = config.databaseOutboundAclRules;
    this.databaseRouteTableTags = config.databaseRouteTableTags;
    this.databaseSubnetAssignIpv6AddressOnCreation = config.databaseSubnetAssignIpv6AddressOnCreation;
    this.databaseSubnetGroupName = config.databaseSubnetGroupName;
    this.databaseSubnetGroupTags = config.databaseSubnetGroupTags;
    this.databaseSubnetIpv6Prefixes = config.databaseSubnetIpv6Prefixes;
    this.databaseSubnetNames = config.databaseSubnetNames;
    this.databaseSubnetSuffix = config.databaseSubnetSuffix;
    this.databaseSubnetTags = config.databaseSubnetTags;
    this.databaseSubnets = config.databaseSubnets;
    this.defaultNetworkAclEgress = config.defaultNetworkAclEgress;
    this.defaultNetworkAclIngress = config.defaultNetworkAclIngress;
    this.defaultNetworkAclName = config.defaultNetworkAclName;
    this.defaultNetworkAclTags = config.defaultNetworkAclTags;
    this.defaultRouteTableName = config.defaultRouteTableName;
    this.defaultRouteTablePropagatingVgws = config.defaultRouteTablePropagatingVgws;
    this.defaultRouteTableRoutes = config.defaultRouteTableRoutes;
    this.defaultRouteTableTags = config.defaultRouteTableTags;
    this.defaultSecurityGroupEgress = config.defaultSecurityGroupEgress;
    this.defaultSecurityGroupIngress = config.defaultSecurityGroupIngress;
    this.defaultSecurityGroupName = config.defaultSecurityGroupName;
    this.defaultSecurityGroupTags = config.defaultSecurityGroupTags;
    this.defaultVpcEnableClassiclink = config.defaultVpcEnableClassiclink;
    this.defaultVpcEnableDnsHostnames = config.defaultVpcEnableDnsHostnames;
    this.defaultVpcEnableDnsSupport = config.defaultVpcEnableDnsSupport;
    this.defaultVpcName = config.defaultVpcName;
    this.defaultVpcTags = config.defaultVpcTags;
    this.dhcpOptionsDomainName = config.dhcpOptionsDomainName;
    this.dhcpOptionsDomainNameServers = config.dhcpOptionsDomainNameServers;
    this.dhcpOptionsNetbiosNameServers = config.dhcpOptionsNetbiosNameServers;
    this.dhcpOptionsNetbiosNodeType = config.dhcpOptionsNetbiosNodeType;
    this.dhcpOptionsNtpServers = config.dhcpOptionsNtpServers;
    this.dhcpOptionsTags = config.dhcpOptionsTags;
    this.elasticacheAclTags = config.elasticacheAclTags;
    this.elasticacheDedicatedNetworkAcl = config.elasticacheDedicatedNetworkAcl;
    this.elasticacheInboundAclRules = config.elasticacheInboundAclRules;
    this.elasticacheOutboundAclRules = config.elasticacheOutboundAclRules;
    this.elasticacheRouteTableTags = config.elasticacheRouteTableTags;
    this.elasticacheSubnetAssignIpv6AddressOnCreation = config.elasticacheSubnetAssignIpv6AddressOnCreation;
    this.elasticacheSubnetGroupName = config.elasticacheSubnetGroupName;
    this.elasticacheSubnetGroupTags = config.elasticacheSubnetGroupTags;
    this.elasticacheSubnetIpv6Prefixes = config.elasticacheSubnetIpv6Prefixes;
    this.elasticacheSubnetNames = config.elasticacheSubnetNames;
    this.elasticacheSubnetSuffix = config.elasticacheSubnetSuffix;
    this.elasticacheSubnetTags = config.elasticacheSubnetTags;
    this.elasticacheSubnets = config.elasticacheSubnets;
    this.enableClassiclink = config.enableClassiclink;
    this.enableClassiclinkDnsSupport = config.enableClassiclinkDnsSupport;
    this.enableDhcpOptions = config.enableDhcpOptions;
    this.enableDnsHostnames = config.enableDnsHostnames;
    this.enableDnsSupport = config.enableDnsSupport;
    this.enableFlowLog = config.enableFlowLog;
    this.enableIpv6 = config.enableIpv6;
    this.enableNatGateway = config.enableNatGateway;
    this.enablePublicRedshift = config.enablePublicRedshift;
    this.enableVpnGateway = config.enableVpnGateway;
    this.externalNatIpIds = config.externalNatIpIds;
    this.externalNatIps = config.externalNatIps;
    this.flowLogCloudwatchIamRoleArn = config.flowLogCloudwatchIamRoleArn;
    this.flowLogCloudwatchLogGroupKmsKeyId = config.flowLogCloudwatchLogGroupKmsKeyId;
    this.flowLogCloudwatchLogGroupNamePrefix = config.flowLogCloudwatchLogGroupNamePrefix;
    this.flowLogCloudwatchLogGroupNameSuffix = config.flowLogCloudwatchLogGroupNameSuffix;
    this.flowLogCloudwatchLogGroupRetentionInDays = config.flowLogCloudwatchLogGroupRetentionInDays;
    this.flowLogDestinationArn = config.flowLogDestinationArn;
    this.flowLogDestinationType = config.flowLogDestinationType;
    this.flowLogFileFormat = config.flowLogFileFormat;
    this.flowLogHiveCompatiblePartitions = config.flowLogHiveCompatiblePartitions;
    this.flowLogLogFormat = config.flowLogLogFormat;
    this.flowLogMaxAggregationInterval = config.flowLogMaxAggregationInterval;
    this.flowLogPerHourPartition = config.flowLogPerHourPartition;
    this.flowLogTrafficType = config.flowLogTrafficType;
    this.igwTags = config.igwTags;
    this.instanceTenancy = config.instanceTenancy;
    this.intraAclTags = config.intraAclTags;
    this.intraDedicatedNetworkAcl = config.intraDedicatedNetworkAcl;
    this.intraInboundAclRules = config.intraInboundAclRules;
    this.intraOutboundAclRules = config.intraOutboundAclRules;
    this.intraRouteTableTags = config.intraRouteTableTags;
    this.intraSubnetAssignIpv6AddressOnCreation = config.intraSubnetAssignIpv6AddressOnCreation;
    this.intraSubnetIpv6Prefixes = config.intraSubnetIpv6Prefixes;
    this.intraSubnetNames = config.intraSubnetNames;
    this.intraSubnetSuffix = config.intraSubnetSuffix;
    this.intraSubnetTags = config.intraSubnetTags;
    this.intraSubnets = config.intraSubnets;
    this.ipv4IpamPoolId = config.ipv4IpamPoolId;
    this.ipv4NetmaskLength = config.ipv4NetmaskLength;
    this.ipv6Cidr = config.ipv6Cidr;
    this.ipv6IpamPoolId = config.ipv6IpamPoolId;
    this.ipv6NetmaskLength = config.ipv6NetmaskLength;
    this.manageDefaultNetworkAcl = config.manageDefaultNetworkAcl;
    this.manageDefaultRouteTable = config.manageDefaultRouteTable;
    this.manageDefaultSecurityGroup = config.manageDefaultSecurityGroup;
    this.manageDefaultVpc = config.manageDefaultVpc;
    this.mapPublicIpOnLaunch = config.mapPublicIpOnLaunch;
    this.name = config.name;
    this.natEipTags = config.natEipTags;
    this.natGatewayDestinationCidrBlock = config.natGatewayDestinationCidrBlock;
    this.natGatewayTags = config.natGatewayTags;
    this.oneNatGatewayPerAz = config.oneNatGatewayPerAz;
    this.outpostAclTags = config.outpostAclTags;
    this.outpostArn = config.outpostArn;
    this.outpostAz = config.outpostAz;
    this.outpostDedicatedNetworkAcl = config.outpostDedicatedNetworkAcl;
    this.outpostInboundAclRules = config.outpostInboundAclRules;
    this.outpostOutboundAclRules = config.outpostOutboundAclRules;
    this.outpostSubnetAssignIpv6AddressOnCreation = config.outpostSubnetAssignIpv6AddressOnCreation;
    this.outpostSubnetIpv6Prefixes = config.outpostSubnetIpv6Prefixes;
    this.outpostSubnetNames = config.outpostSubnetNames;
    this.outpostSubnetSuffix = config.outpostSubnetSuffix;
    this.outpostSubnetTags = config.outpostSubnetTags;
    this.outpostSubnets = config.outpostSubnets;
    this.privateAclTags = config.privateAclTags;
    this.privateDedicatedNetworkAcl = config.privateDedicatedNetworkAcl;
    this.privateInboundAclRules = config.privateInboundAclRules;
    this.privateOutboundAclRules = config.privateOutboundAclRules;
    this.privateRouteTableTags = config.privateRouteTableTags;
    this.privateSubnetAssignIpv6AddressOnCreation = config.privateSubnetAssignIpv6AddressOnCreation;
    this.privateSubnetIpv6Prefixes = config.privateSubnetIpv6Prefixes;
    this.privateSubnetNames = config.privateSubnetNames;
    this.privateSubnetSuffix = config.privateSubnetSuffix;
    this.privateSubnetTags = config.privateSubnetTags;
    this.privateSubnetTagsPerAz = config.privateSubnetTagsPerAz;
    this.privateSubnets = config.privateSubnets;
    this.propagateIntraRouteTablesVgw = config.propagateIntraRouteTablesVgw;
    this.propagatePrivateRouteTablesVgw = config.propagatePrivateRouteTablesVgw;
    this.propagatePublicRouteTablesVgw = config.propagatePublicRouteTablesVgw;
    this.publicAclTags = config.publicAclTags;
    this.publicDedicatedNetworkAcl = config.publicDedicatedNetworkAcl;
    this.publicInboundAclRules = config.publicInboundAclRules;
    this.publicOutboundAclRules = config.publicOutboundAclRules;
    this.publicRouteTableTags = config.publicRouteTableTags;
    this.publicSubnetAssignIpv6AddressOnCreation = config.publicSubnetAssignIpv6AddressOnCreation;
    this.publicSubnetIpv6Prefixes = config.publicSubnetIpv6Prefixes;
    this.publicSubnetNames = config.publicSubnetNames;
    this.publicSubnetSuffix = config.publicSubnetSuffix;
    this.publicSubnetTags = config.publicSubnetTags;
    this.publicSubnetTagsPerAz = config.publicSubnetTagsPerAz;
    this.publicSubnets = config.publicSubnets;
    this.putinKhuylo = config.putinKhuylo;
    this.redshiftAclTags = config.redshiftAclTags;
    this.redshiftDedicatedNetworkAcl = config.redshiftDedicatedNetworkAcl;
    this.redshiftInboundAclRules = config.redshiftInboundAclRules;
    this.redshiftOutboundAclRules = config.redshiftOutboundAclRules;
    this.redshiftRouteTableTags = config.redshiftRouteTableTags;
    this.redshiftSubnetAssignIpv6AddressOnCreation = config.redshiftSubnetAssignIpv6AddressOnCreation;
    this.redshiftSubnetGroupName = config.redshiftSubnetGroupName;
    this.redshiftSubnetGroupTags = config.redshiftSubnetGroupTags;
    this.redshiftSubnetIpv6Prefixes = config.redshiftSubnetIpv6Prefixes;
    this.redshiftSubnetNames = config.redshiftSubnetNames;
    this.redshiftSubnetSuffix = config.redshiftSubnetSuffix;
    this.redshiftSubnetTags = config.redshiftSubnetTags;
    this.redshiftSubnets = config.redshiftSubnets;
    this.reuseNatIps = config.reuseNatIps;
    this.secondaryCidrBlocks = config.secondaryCidrBlocks;
    this.singleNatGateway = config.singleNatGateway;
    this.tags = config.tags;
    this.useIpamPool = config.useIpamPool;
    this.vpcFlowLogPermissionsBoundary = config.vpcFlowLogPermissionsBoundary;
    this.vpcFlowLogTags = config.vpcFlowLogTags;
    this.vpcTags = config.vpcTags;
    this.vpnGatewayAz = config.vpnGatewayAz;
    this.vpnGatewayId = config.vpnGatewayId;
    this.vpnGatewayTags = config.vpnGatewayTags;
  }
  public get amazonSideAsn(): string | undefined {
    return this.inputs['amazon_side_asn'] as string | undefined;
  }
  public set amazonSideAsn(value: string | undefined) {
    this.inputs['amazon_side_asn'] = value;
  }
  public get assignIpv6AddressOnCreation(): boolean | undefined {
    return this.inputs['assign_ipv6_address_on_creation'] as boolean | undefined;
  }
  public set assignIpv6AddressOnCreation(value: boolean | undefined) {
    this.inputs['assign_ipv6_address_on_creation'] = value;
  }
  public get azs(): string[] | undefined {
    return this.inputs['azs'] as string[] | undefined;
  }
  public set azs(value: string[] | undefined) {
    this.inputs['azs'] = value;
  }
  public get cidr(): string | undefined {
    return this.inputs['cidr'] as string | undefined;
  }
  public set cidr(value: string | undefined) {
    this.inputs['cidr'] = value;
  }
  public get createDatabaseInternetGatewayRoute(): boolean | undefined {
    return this.inputs['create_database_internet_gateway_route'] as boolean | undefined;
  }
  public set createDatabaseInternetGatewayRoute(value: boolean | undefined) {
    this.inputs['create_database_internet_gateway_route'] = value;
  }
  public get createDatabaseNatGatewayRoute(): boolean | undefined {
    return this.inputs['create_database_nat_gateway_route'] as boolean | undefined;
  }
  public set createDatabaseNatGatewayRoute(value: boolean | undefined) {
    this.inputs['create_database_nat_gateway_route'] = value;
  }
  public get createDatabaseSubnetGroup(): boolean | undefined {
    return this.inputs['create_database_subnet_group'] as boolean | undefined;
  }
  public set createDatabaseSubnetGroup(value: boolean | undefined) {
    this.inputs['create_database_subnet_group'] = value;
  }
  public get createDatabaseSubnetRouteTable(): boolean | undefined {
    return this.inputs['create_database_subnet_route_table'] as boolean | undefined;
  }
  public set createDatabaseSubnetRouteTable(value: boolean | undefined) {
    this.inputs['create_database_subnet_route_table'] = value;
  }
  public get createEgressOnlyIgw(): boolean | undefined {
    return this.inputs['create_egress_only_igw'] as boolean | undefined;
  }
  public set createEgressOnlyIgw(value: boolean | undefined) {
    this.inputs['create_egress_only_igw'] = value;
  }
  public get createElasticacheSubnetGroup(): boolean | undefined {
    return this.inputs['create_elasticache_subnet_group'] as boolean | undefined;
  }
  public set createElasticacheSubnetGroup(value: boolean | undefined) {
    this.inputs['create_elasticache_subnet_group'] = value;
  }
  public get createElasticacheSubnetRouteTable(): boolean | undefined {
    return this.inputs['create_elasticache_subnet_route_table'] as boolean | undefined;
  }
  public set createElasticacheSubnetRouteTable(value: boolean | undefined) {
    this.inputs['create_elasticache_subnet_route_table'] = value;
  }
  public get createFlowLogCloudwatchIamRole(): boolean | undefined {
    return this.inputs['create_flow_log_cloudwatch_iam_role'] as boolean | undefined;
  }
  public set createFlowLogCloudwatchIamRole(value: boolean | undefined) {
    this.inputs['create_flow_log_cloudwatch_iam_role'] = value;
  }
  public get createFlowLogCloudwatchLogGroup(): boolean | undefined {
    return this.inputs['create_flow_log_cloudwatch_log_group'] as boolean | undefined;
  }
  public set createFlowLogCloudwatchLogGroup(value: boolean | undefined) {
    this.inputs['create_flow_log_cloudwatch_log_group'] = value;
  }
  public get createIgw(): boolean | undefined {
    return this.inputs['create_igw'] as boolean | undefined;
  }
  public set createIgw(value: boolean | undefined) {
    this.inputs['create_igw'] = value;
  }
  public get createRedshiftSubnetGroup(): boolean | undefined {
    return this.inputs['create_redshift_subnet_group'] as boolean | undefined;
  }
  public set createRedshiftSubnetGroup(value: boolean | undefined) {
    this.inputs['create_redshift_subnet_group'] = value;
  }
  public get createRedshiftSubnetRouteTable(): boolean | undefined {
    return this.inputs['create_redshift_subnet_route_table'] as boolean | undefined;
  }
  public set createRedshiftSubnetRouteTable(value: boolean | undefined) {
    this.inputs['create_redshift_subnet_route_table'] = value;
  }
  public get createVpc(): boolean | undefined {
    return this.inputs['create_vpc'] as boolean | undefined;
  }
  public set createVpc(value: boolean | undefined) {
    this.inputs['create_vpc'] = value;
  }
  public get customerGatewayTags(): { [key: string]: string } | undefined {
    return this.inputs['customer_gateway_tags'] as { [key: string]: string } | undefined;
  }
  public set customerGatewayTags(value: { [key: string]: string } | undefined) {
    this.inputs['customer_gateway_tags'] = value;
  }
  public get customerGateways(): { [key: string]: { [key: string]: any } } | undefined {
    return this.inputs['customer_gateways'] as { [key: string]: { [key: string]: any } } | undefined;
  }
  public set customerGateways(value: { [key: string]: { [key: string]: any } } | undefined) {
    this.inputs['customer_gateways'] = value;
  }
  public get databaseAclTags(): { [key: string]: string } | undefined {
    return this.inputs['database_acl_tags'] as { [key: string]: string } | undefined;
  }
  public set databaseAclTags(value: { [key: string]: string } | undefined) {
    this.inputs['database_acl_tags'] = value;
  }
  public get databaseDedicatedNetworkAcl(): boolean | undefined {
    return this.inputs['database_dedicated_network_acl'] as boolean | undefined;
  }
  public set databaseDedicatedNetworkAcl(value: boolean | undefined) {
    this.inputs['database_dedicated_network_acl'] = value;
  }
  public get databaseInboundAclRules(): { [key: string]: string }[] | undefined {
    return this.inputs['database_inbound_acl_rules'] as { [key: string]: string }[] | undefined;
  }
  public set databaseInboundAclRules(value: { [key: string]: string }[] | undefined) {
    this.inputs['database_inbound_acl_rules'] = value;
  }
  public get databaseOutboundAclRules(): { [key: string]: string }[] | undefined {
    return this.inputs['database_outbound_acl_rules'] as { [key: string]: string }[] | undefined;
  }
  public set databaseOutboundAclRules(value: { [key: string]: string }[] | undefined) {
    this.inputs['database_outbound_acl_rules'] = value;
  }
  public get databaseRouteTableTags(): { [key: string]: string } | undefined {
    return this.inputs['database_route_table_tags'] as { [key: string]: string } | undefined;
  }
  public set databaseRouteTableTags(value: { [key: string]: string } | undefined) {
    this.inputs['database_route_table_tags'] = value;
  }
  public get databaseSubnetAssignIpv6AddressOnCreation(): boolean | undefined {
    return this.inputs['database_subnet_assign_ipv6_address_on_creation'] as boolean | undefined;
  }
  public set databaseSubnetAssignIpv6AddressOnCreation(value: boolean | undefined) {
    this.inputs['database_subnet_assign_ipv6_address_on_creation'] = value;
  }
  public get databaseSubnetGroupName(): string | undefined {
    return this.inputs['database_subnet_group_name'] as string | undefined;
  }
  public set databaseSubnetGroupName(value: string | undefined) {
    this.inputs['database_subnet_group_name'] = value;
  }
  public get databaseSubnetGroupTags(): { [key: string]: string } | undefined {
    return this.inputs['database_subnet_group_tags'] as { [key: string]: string } | undefined;
  }
  public set databaseSubnetGroupTags(value: { [key: string]: string } | undefined) {
    this.inputs['database_subnet_group_tags'] = value;
  }
  public get databaseSubnetIpv6Prefixes(): string[] | undefined {
    return this.inputs['database_subnet_ipv6_prefixes'] as string[] | undefined;
  }
  public set databaseSubnetIpv6Prefixes(value: string[] | undefined) {
    this.inputs['database_subnet_ipv6_prefixes'] = value;
  }
  public get databaseSubnetNames(): string[] | undefined {
    return this.inputs['database_subnet_names'] as string[] | undefined;
  }
  public set databaseSubnetNames(value: string[] | undefined) {
    this.inputs['database_subnet_names'] = value;
  }
  public get databaseSubnetSuffix(): string | undefined {
    return this.inputs['database_subnet_suffix'] as string | undefined;
  }
  public set databaseSubnetSuffix(value: string | undefined) {
    this.inputs['database_subnet_suffix'] = value;
  }
  public get databaseSubnetTags(): { [key: string]: string } | undefined {
    return this.inputs['database_subnet_tags'] as { [key: string]: string } | undefined;
  }
  public set databaseSubnetTags(value: { [key: string]: string } | undefined) {
    this.inputs['database_subnet_tags'] = value;
  }
  public get databaseSubnets(): string[] | undefined {
    return this.inputs['database_subnets'] as string[] | undefined;
  }
  public set databaseSubnets(value: string[] | undefined) {
    this.inputs['database_subnets'] = value;
  }
  public get defaultNetworkAclEgress(): { [key: string]: string }[] | undefined {
    return this.inputs['default_network_acl_egress'] as { [key: string]: string }[] | undefined;
  }
  public set defaultNetworkAclEgress(value: { [key: string]: string }[] | undefined) {
    this.inputs['default_network_acl_egress'] = value;
  }
  public get defaultNetworkAclIngress(): { [key: string]: string }[] | undefined {
    return this.inputs['default_network_acl_ingress'] as { [key: string]: string }[] | undefined;
  }
  public set defaultNetworkAclIngress(value: { [key: string]: string }[] | undefined) {
    this.inputs['default_network_acl_ingress'] = value;
  }
  public get defaultNetworkAclName(): string | undefined {
    return this.inputs['default_network_acl_name'] as string | undefined;
  }
  public set defaultNetworkAclName(value: string | undefined) {
    this.inputs['default_network_acl_name'] = value;
  }
  public get defaultNetworkAclTags(): { [key: string]: string } | undefined {
    return this.inputs['default_network_acl_tags'] as { [key: string]: string } | undefined;
  }
  public set defaultNetworkAclTags(value: { [key: string]: string } | undefined) {
    this.inputs['default_network_acl_tags'] = value;
  }
  public get defaultRouteTableName(): string | undefined {
    return this.inputs['default_route_table_name'] as string | undefined;
  }
  public set defaultRouteTableName(value: string | undefined) {
    this.inputs['default_route_table_name'] = value;
  }
  public get defaultRouteTablePropagatingVgws(): string[] | undefined {
    return this.inputs['default_route_table_propagating_vgws'] as string[] | undefined;
  }
  public set defaultRouteTablePropagatingVgws(value: string[] | undefined) {
    this.inputs['default_route_table_propagating_vgws'] = value;
  }
  public get defaultRouteTableRoutes(): { [key: string]: string }[] | undefined {
    return this.inputs['default_route_table_routes'] as { [key: string]: string }[] | undefined;
  }
  public set defaultRouteTableRoutes(value: { [key: string]: string }[] | undefined) {
    this.inputs['default_route_table_routes'] = value;
  }
  public get defaultRouteTableTags(): { [key: string]: string } | undefined {
    return this.inputs['default_route_table_tags'] as { [key: string]: string } | undefined;
  }
  public set defaultRouteTableTags(value: { [key: string]: string } | undefined) {
    this.inputs['default_route_table_tags'] = value;
  }
  public get defaultSecurityGroupEgress(): { [key: string]: string }[] | undefined {
    return this.inputs['default_security_group_egress'] as { [key: string]: string }[] | undefined;
  }
  public set defaultSecurityGroupEgress(value: { [key: string]: string }[] | undefined) {
    this.inputs['default_security_group_egress'] = value;
  }
  public get defaultSecurityGroupIngress(): { [key: string]: string }[] | undefined {
    return this.inputs['default_security_group_ingress'] as { [key: string]: string }[] | undefined;
  }
  public set defaultSecurityGroupIngress(value: { [key: string]: string }[] | undefined) {
    this.inputs['default_security_group_ingress'] = value;
  }
  public get defaultSecurityGroupName(): string | undefined {
    return this.inputs['default_security_group_name'] as string | undefined;
  }
  public set defaultSecurityGroupName(value: string | undefined) {
    this.inputs['default_security_group_name'] = value;
  }
  public get defaultSecurityGroupTags(): { [key: string]: string } | undefined {
    return this.inputs['default_security_group_tags'] as { [key: string]: string } | undefined;
  }
  public set defaultSecurityGroupTags(value: { [key: string]: string } | undefined) {
    this.inputs['default_security_group_tags'] = value;
  }
  public get defaultVpcEnableClassiclink(): boolean | undefined {
    return this.inputs['default_vpc_enable_classiclink'] as boolean | undefined;
  }
  public set defaultVpcEnableClassiclink(value: boolean | undefined) {
    this.inputs['default_vpc_enable_classiclink'] = value;
  }
  public get defaultVpcEnableDnsHostnames(): boolean | undefined {
    return this.inputs['default_vpc_enable_dns_hostnames'] as boolean | undefined;
  }
  public set defaultVpcEnableDnsHostnames(value: boolean | undefined) {
    this.inputs['default_vpc_enable_dns_hostnames'] = value;
  }
  public get defaultVpcEnableDnsSupport(): boolean | undefined {
    return this.inputs['default_vpc_enable_dns_support'] as boolean | undefined;
  }
  public set defaultVpcEnableDnsSupport(value: boolean | undefined) {
    this.inputs['default_vpc_enable_dns_support'] = value;
  }
  public get defaultVpcName(): string | undefined {
    return this.inputs['default_vpc_name'] as string | undefined;
  }
  public set defaultVpcName(value: string | undefined) {
    this.inputs['default_vpc_name'] = value;
  }
  public get defaultVpcTags(): { [key: string]: string } | undefined {
    return this.inputs['default_vpc_tags'] as { [key: string]: string } | undefined;
  }
  public set defaultVpcTags(value: { [key: string]: string } | undefined) {
    this.inputs['default_vpc_tags'] = value;
  }
  public get dhcpOptionsDomainName(): string | undefined {
    return this.inputs['dhcp_options_domain_name'] as string | undefined;
  }
  public set dhcpOptionsDomainName(value: string | undefined) {
    this.inputs['dhcp_options_domain_name'] = value;
  }
  public get dhcpOptionsDomainNameServers(): string[] | undefined {
    return this.inputs['dhcp_options_domain_name_servers'] as string[] | undefined;
  }
  public set dhcpOptionsDomainNameServers(value: string[] | undefined) {
    this.inputs['dhcp_options_domain_name_servers'] = value;
  }
  public get dhcpOptionsNetbiosNameServers(): string[] | undefined {
    return this.inputs['dhcp_options_netbios_name_servers'] as string[] | undefined;
  }
  public set dhcpOptionsNetbiosNameServers(value: string[] | undefined) {
    this.inputs['dhcp_options_netbios_name_servers'] = value;
  }
  public get dhcpOptionsNetbiosNodeType(): string | undefined {
    return this.inputs['dhcp_options_netbios_node_type'] as string | undefined;
  }
  public set dhcpOptionsNetbiosNodeType(value: string | undefined) {
    this.inputs['dhcp_options_netbios_node_type'] = value;
  }
  public get dhcpOptionsNtpServers(): string[] | undefined {
    return this.inputs['dhcp_options_ntp_servers'] as string[] | undefined;
  }
  public set dhcpOptionsNtpServers(value: string[] | undefined) {
    this.inputs['dhcp_options_ntp_servers'] = value;
  }
  public get dhcpOptionsTags(): { [key: string]: string } | undefined {
    return this.inputs['dhcp_options_tags'] as { [key: string]: string } | undefined;
  }
  public set dhcpOptionsTags(value: { [key: string]: string } | undefined) {
    this.inputs['dhcp_options_tags'] = value;
  }
  public get elasticacheAclTags(): { [key: string]: string } | undefined {
    return this.inputs['elasticache_acl_tags'] as { [key: string]: string } | undefined;
  }
  public set elasticacheAclTags(value: { [key: string]: string } | undefined) {
    this.inputs['elasticache_acl_tags'] = value;
  }
  public get elasticacheDedicatedNetworkAcl(): boolean | undefined {
    return this.inputs['elasticache_dedicated_network_acl'] as boolean | undefined;
  }
  public set elasticacheDedicatedNetworkAcl(value: boolean | undefined) {
    this.inputs['elasticache_dedicated_network_acl'] = value;
  }
  public get elasticacheInboundAclRules(): { [key: string]: string }[] | undefined {
    return this.inputs['elasticache_inbound_acl_rules'] as { [key: string]: string }[] | undefined;
  }
  public set elasticacheInboundAclRules(value: { [key: string]: string }[] | undefined) {
    this.inputs['elasticache_inbound_acl_rules'] = value;
  }
  public get elasticacheOutboundAclRules(): { [key: string]: string }[] | undefined {
    return this.inputs['elasticache_outbound_acl_rules'] as { [key: string]: string }[] | undefined;
  }
  public set elasticacheOutboundAclRules(value: { [key: string]: string }[] | undefined) {
    this.inputs['elasticache_outbound_acl_rules'] = value;
  }
  public get elasticacheRouteTableTags(): { [key: string]: string } | undefined {
    return this.inputs['elasticache_route_table_tags'] as { [key: string]: string } | undefined;
  }
  public set elasticacheRouteTableTags(value: { [key: string]: string } | undefined) {
    this.inputs['elasticache_route_table_tags'] = value;
  }
  public get elasticacheSubnetAssignIpv6AddressOnCreation(): boolean | undefined {
    return this.inputs['elasticache_subnet_assign_ipv6_address_on_creation'] as boolean | undefined;
  }
  public set elasticacheSubnetAssignIpv6AddressOnCreation(value: boolean | undefined) {
    this.inputs['elasticache_subnet_assign_ipv6_address_on_creation'] = value;
  }
  public get elasticacheSubnetGroupName(): string | undefined {
    return this.inputs['elasticache_subnet_group_name'] as string | undefined;
  }
  public set elasticacheSubnetGroupName(value: string | undefined) {
    this.inputs['elasticache_subnet_group_name'] = value;
  }
  public get elasticacheSubnetGroupTags(): { [key: string]: string } | undefined {
    return this.inputs['elasticache_subnet_group_tags'] as { [key: string]: string } | undefined;
  }
  public set elasticacheSubnetGroupTags(value: { [key: string]: string } | undefined) {
    this.inputs['elasticache_subnet_group_tags'] = value;
  }
  public get elasticacheSubnetIpv6Prefixes(): string[] | undefined {
    return this.inputs['elasticache_subnet_ipv6_prefixes'] as string[] | undefined;
  }
  public set elasticacheSubnetIpv6Prefixes(value: string[] | undefined) {
    this.inputs['elasticache_subnet_ipv6_prefixes'] = value;
  }
  public get elasticacheSubnetNames(): string[] | undefined {
    return this.inputs['elasticache_subnet_names'] as string[] | undefined;
  }
  public set elasticacheSubnetNames(value: string[] | undefined) {
    this.inputs['elasticache_subnet_names'] = value;
  }
  public get elasticacheSubnetSuffix(): string | undefined {
    return this.inputs['elasticache_subnet_suffix'] as string | undefined;
  }
  public set elasticacheSubnetSuffix(value: string | undefined) {
    this.inputs['elasticache_subnet_suffix'] = value;
  }
  public get elasticacheSubnetTags(): { [key: string]: string } | undefined {
    return this.inputs['elasticache_subnet_tags'] as { [key: string]: string } | undefined;
  }
  public set elasticacheSubnetTags(value: { [key: string]: string } | undefined) {
    this.inputs['elasticache_subnet_tags'] = value;
  }
  public get elasticacheSubnets(): string[] | undefined {
    return this.inputs['elasticache_subnets'] as string[] | undefined;
  }
  public set elasticacheSubnets(value: string[] | undefined) {
    this.inputs['elasticache_subnets'] = value;
  }
  public get enableClassiclink(): boolean | undefined {
    return this.inputs['enable_classiclink'] as boolean | undefined;
  }
  public set enableClassiclink(value: boolean | undefined) {
    this.inputs['enable_classiclink'] = value;
  }
  public get enableClassiclinkDnsSupport(): boolean | undefined {
    return this.inputs['enable_classiclink_dns_support'] as boolean | undefined;
  }
  public set enableClassiclinkDnsSupport(value: boolean | undefined) {
    this.inputs['enable_classiclink_dns_support'] = value;
  }
  public get enableDhcpOptions(): boolean | undefined {
    return this.inputs['enable_dhcp_options'] as boolean | undefined;
  }
  public set enableDhcpOptions(value: boolean | undefined) {
    this.inputs['enable_dhcp_options'] = value;
  }
  public get enableDnsHostnames(): boolean | undefined {
    return this.inputs['enable_dns_hostnames'] as boolean | undefined;
  }
  public set enableDnsHostnames(value: boolean | undefined) {
    this.inputs['enable_dns_hostnames'] = value;
  }
  public get enableDnsSupport(): boolean | undefined {
    return this.inputs['enable_dns_support'] as boolean | undefined;
  }
  public set enableDnsSupport(value: boolean | undefined) {
    this.inputs['enable_dns_support'] = value;
  }
  public get enableFlowLog(): boolean | undefined {
    return this.inputs['enable_flow_log'] as boolean | undefined;
  }
  public set enableFlowLog(value: boolean | undefined) {
    this.inputs['enable_flow_log'] = value;
  }
  public get enableIpv6(): boolean | undefined {
    return this.inputs['enable_ipv6'] as boolean | undefined;
  }
  public set enableIpv6(value: boolean | undefined) {
    this.inputs['enable_ipv6'] = value;
  }
  public get enableNatGateway(): boolean | undefined {
    return this.inputs['enable_nat_gateway'] as boolean | undefined;
  }
  public set enableNatGateway(value: boolean | undefined) {
    this.inputs['enable_nat_gateway'] = value;
  }
  public get enablePublicRedshift(): boolean | undefined {
    return this.inputs['enable_public_redshift'] as boolean | undefined;
  }
  public set enablePublicRedshift(value: boolean | undefined) {
    this.inputs['enable_public_redshift'] = value;
  }
  public get enableVpnGateway(): boolean | undefined {
    return this.inputs['enable_vpn_gateway'] as boolean | undefined;
  }
  public set enableVpnGateway(value: boolean | undefined) {
    this.inputs['enable_vpn_gateway'] = value;
  }
  public get externalNatIpIds(): string[] | undefined {
    return this.inputs['external_nat_ip_ids'] as string[] | undefined;
  }
  public set externalNatIpIds(value: string[] | undefined) {
    this.inputs['external_nat_ip_ids'] = value;
  }
  public get externalNatIps(): string[] | undefined {
    return this.inputs['external_nat_ips'] as string[] | undefined;
  }
  public set externalNatIps(value: string[] | undefined) {
    this.inputs['external_nat_ips'] = value;
  }
  public get flowLogCloudwatchIamRoleArn(): string | undefined {
    return this.inputs['flow_log_cloudwatch_iam_role_arn'] as string | undefined;
  }
  public set flowLogCloudwatchIamRoleArn(value: string | undefined) {
    this.inputs['flow_log_cloudwatch_iam_role_arn'] = value;
  }
  public get flowLogCloudwatchLogGroupKmsKeyId(): string | undefined {
    return this.inputs['flow_log_cloudwatch_log_group_kms_key_id'] as string | undefined;
  }
  public set flowLogCloudwatchLogGroupKmsKeyId(value: string | undefined) {
    this.inputs['flow_log_cloudwatch_log_group_kms_key_id'] = value;
  }
  public get flowLogCloudwatchLogGroupNamePrefix(): string | undefined {
    return this.inputs['flow_log_cloudwatch_log_group_name_prefix'] as string | undefined;
  }
  public set flowLogCloudwatchLogGroupNamePrefix(value: string | undefined) {
    this.inputs['flow_log_cloudwatch_log_group_name_prefix'] = value;
  }
  public get flowLogCloudwatchLogGroupNameSuffix(): string | undefined {
    return this.inputs['flow_log_cloudwatch_log_group_name_suffix'] as string | undefined;
  }
  public set flowLogCloudwatchLogGroupNameSuffix(value: string | undefined) {
    this.inputs['flow_log_cloudwatch_log_group_name_suffix'] = value;
  }
  public get flowLogCloudwatchLogGroupRetentionInDays(): number | undefined {
    return this.inputs['flow_log_cloudwatch_log_group_retention_in_days'] as number | undefined;
  }
  public set flowLogCloudwatchLogGroupRetentionInDays(value: number | undefined) {
    this.inputs['flow_log_cloudwatch_log_group_retention_in_days'] = value;
  }
  public get flowLogDestinationArn(): string | undefined {
    return this.inputs['flow_log_destination_arn'] as string | undefined;
  }
  public set flowLogDestinationArn(value: string | undefined) {
    this.inputs['flow_log_destination_arn'] = value;
  }
  public get flowLogDestinationType(): string | undefined {
    return this.inputs['flow_log_destination_type'] as string | undefined;
  }
  public set flowLogDestinationType(value: string | undefined) {
    this.inputs['flow_log_destination_type'] = value;
  }
  public get flowLogFileFormat(): string | undefined {
    return this.inputs['flow_log_file_format'] as string | undefined;
  }
  public set flowLogFileFormat(value: string | undefined) {
    this.inputs['flow_log_file_format'] = value;
  }
  public get flowLogHiveCompatiblePartitions(): boolean | undefined {
    return this.inputs['flow_log_hive_compatible_partitions'] as boolean | undefined;
  }
  public set flowLogHiveCompatiblePartitions(value: boolean | undefined) {
    this.inputs['flow_log_hive_compatible_partitions'] = value;
  }
  public get flowLogLogFormat(): string | undefined {
    return this.inputs['flow_log_log_format'] as string | undefined;
  }
  public set flowLogLogFormat(value: string | undefined) {
    this.inputs['flow_log_log_format'] = value;
  }
  public get flowLogMaxAggregationInterval(): number | undefined {
    return this.inputs['flow_log_max_aggregation_interval'] as number | undefined;
  }
  public set flowLogMaxAggregationInterval(value: number | undefined) {
    this.inputs['flow_log_max_aggregation_interval'] = value;
  }
  public get flowLogPerHourPartition(): boolean | undefined {
    return this.inputs['flow_log_per_hour_partition'] as boolean | undefined;
  }
  public set flowLogPerHourPartition(value: boolean | undefined) {
    this.inputs['flow_log_per_hour_partition'] = value;
  }
  public get flowLogTrafficType(): string | undefined {
    return this.inputs['flow_log_traffic_type'] as string | undefined;
  }
  public set flowLogTrafficType(value: string | undefined) {
    this.inputs['flow_log_traffic_type'] = value;
  }
  public get igwTags(): { [key: string]: string } | undefined {
    return this.inputs['igw_tags'] as { [key: string]: string } | undefined;
  }
  public set igwTags(value: { [key: string]: string } | undefined) {
    this.inputs['igw_tags'] = value;
  }
  public get instanceTenancy(): string | undefined {
    return this.inputs['instance_tenancy'] as string | undefined;
  }
  public set instanceTenancy(value: string | undefined) {
    this.inputs['instance_tenancy'] = value;
  }
  public get intraAclTags(): { [key: string]: string } | undefined {
    return this.inputs['intra_acl_tags'] as { [key: string]: string } | undefined;
  }
  public set intraAclTags(value: { [key: string]: string } | undefined) {
    this.inputs['intra_acl_tags'] = value;
  }
  public get intraDedicatedNetworkAcl(): boolean | undefined {
    return this.inputs['intra_dedicated_network_acl'] as boolean | undefined;
  }
  public set intraDedicatedNetworkAcl(value: boolean | undefined) {
    this.inputs['intra_dedicated_network_acl'] = value;
  }
  public get intraInboundAclRules(): { [key: string]: string }[] | undefined {
    return this.inputs['intra_inbound_acl_rules'] as { [key: string]: string }[] | undefined;
  }
  public set intraInboundAclRules(value: { [key: string]: string }[] | undefined) {
    this.inputs['intra_inbound_acl_rules'] = value;
  }
  public get intraOutboundAclRules(): { [key: string]: string }[] | undefined {
    return this.inputs['intra_outbound_acl_rules'] as { [key: string]: string }[] | undefined;
  }
  public set intraOutboundAclRules(value: { [key: string]: string }[] | undefined) {
    this.inputs['intra_outbound_acl_rules'] = value;
  }
  public get intraRouteTableTags(): { [key: string]: string } | undefined {
    return this.inputs['intra_route_table_tags'] as { [key: string]: string } | undefined;
  }
  public set intraRouteTableTags(value: { [key: string]: string } | undefined) {
    this.inputs['intra_route_table_tags'] = value;
  }
  public get intraSubnetAssignIpv6AddressOnCreation(): boolean | undefined {
    return this.inputs['intra_subnet_assign_ipv6_address_on_creation'] as boolean | undefined;
  }
  public set intraSubnetAssignIpv6AddressOnCreation(value: boolean | undefined) {
    this.inputs['intra_subnet_assign_ipv6_address_on_creation'] = value;
  }
  public get intraSubnetIpv6Prefixes(): string[] | undefined {
    return this.inputs['intra_subnet_ipv6_prefixes'] as string[] | undefined;
  }
  public set intraSubnetIpv6Prefixes(value: string[] | undefined) {
    this.inputs['intra_subnet_ipv6_prefixes'] = value;
  }
  public get intraSubnetNames(): string[] | undefined {
    return this.inputs['intra_subnet_names'] as string[] | undefined;
  }
  public set intraSubnetNames(value: string[] | undefined) {
    this.inputs['intra_subnet_names'] = value;
  }
  public get intraSubnetSuffix(): string | undefined {
    return this.inputs['intra_subnet_suffix'] as string | undefined;
  }
  public set intraSubnetSuffix(value: string | undefined) {
    this.inputs['intra_subnet_suffix'] = value;
  }
  public get intraSubnetTags(): { [key: string]: string } | undefined {
    return this.inputs['intra_subnet_tags'] as { [key: string]: string } | undefined;
  }
  public set intraSubnetTags(value: { [key: string]: string } | undefined) {
    this.inputs['intra_subnet_tags'] = value;
  }
  public get intraSubnets(): string[] | undefined {
    return this.inputs['intra_subnets'] as string[] | undefined;
  }
  public set intraSubnets(value: string[] | undefined) {
    this.inputs['intra_subnets'] = value;
  }
  public get ipv4IpamPoolId(): string | undefined {
    return this.inputs['ipv4_ipam_pool_id'] as string | undefined;
  }
  public set ipv4IpamPoolId(value: string | undefined) {
    this.inputs['ipv4_ipam_pool_id'] = value;
  }
  public get ipv4NetmaskLength(): number | undefined {
    return this.inputs['ipv4_netmask_length'] as number | undefined;
  }
  public set ipv4NetmaskLength(value: number | undefined) {
    this.inputs['ipv4_netmask_length'] = value;
  }
  public get ipv6Cidr(): string | undefined {
    return this.inputs['ipv6_cidr'] as string | undefined;
  }
  public set ipv6Cidr(value: string | undefined) {
    this.inputs['ipv6_cidr'] = value;
  }
  public get ipv6IpamPoolId(): string | undefined {
    return this.inputs['ipv6_ipam_pool_id'] as string | undefined;
  }
  public set ipv6IpamPoolId(value: string | undefined) {
    this.inputs['ipv6_ipam_pool_id'] = value;
  }
  public get ipv6NetmaskLength(): number | undefined {
    return this.inputs['ipv6_netmask_length'] as number | undefined;
  }
  public set ipv6NetmaskLength(value: number | undefined) {
    this.inputs['ipv6_netmask_length'] = value;
  }
  public get manageDefaultNetworkAcl(): boolean | undefined {
    return this.inputs['manage_default_network_acl'] as boolean | undefined;
  }
  public set manageDefaultNetworkAcl(value: boolean | undefined) {
    this.inputs['manage_default_network_acl'] = value;
  }
  public get manageDefaultRouteTable(): boolean | undefined {
    return this.inputs['manage_default_route_table'] as boolean | undefined;
  }
  public set manageDefaultRouteTable(value: boolean | undefined) {
    this.inputs['manage_default_route_table'] = value;
  }
  public get manageDefaultSecurityGroup(): boolean | undefined {
    return this.inputs['manage_default_security_group'] as boolean | undefined;
  }
  public set manageDefaultSecurityGroup(value: boolean | undefined) {
    this.inputs['manage_default_security_group'] = value;
  }
  public get manageDefaultVpc(): boolean | undefined {
    return this.inputs['manage_default_vpc'] as boolean | undefined;
  }
  public set manageDefaultVpc(value: boolean | undefined) {
    this.inputs['manage_default_vpc'] = value;
  }
  public get mapPublicIpOnLaunch(): boolean | undefined {
    return this.inputs['map_public_ip_on_launch'] as boolean | undefined;
  }
  public set mapPublicIpOnLaunch(value: boolean | undefined) {
    this.inputs['map_public_ip_on_launch'] = value;
  }
  public get name(): string | undefined {
    return this.inputs['name'] as string | undefined;
  }
  public set name(value: string | undefined) {
    this.inputs['name'] = value;
  }
  public get natEipTags(): { [key: string]: string } | undefined {
    return this.inputs['nat_eip_tags'] as { [key: string]: string } | undefined;
  }
  public set natEipTags(value: { [key: string]: string } | undefined) {
    this.inputs['nat_eip_tags'] = value;
  }
  public get natGatewayDestinationCidrBlock(): string | undefined {
    return this.inputs['nat_gateway_destination_cidr_block'] as string | undefined;
  }
  public set natGatewayDestinationCidrBlock(value: string | undefined) {
    this.inputs['nat_gateway_destination_cidr_block'] = value;
  }
  public get natGatewayTags(): { [key: string]: string } | undefined {
    return this.inputs['nat_gateway_tags'] as { [key: string]: string } | undefined;
  }
  public set natGatewayTags(value: { [key: string]: string } | undefined) {
    this.inputs['nat_gateway_tags'] = value;
  }
  public get oneNatGatewayPerAz(): boolean | undefined {
    return this.inputs['one_nat_gateway_per_az'] as boolean | undefined;
  }
  public set oneNatGatewayPerAz(value: boolean | undefined) {
    this.inputs['one_nat_gateway_per_az'] = value;
  }
  public get outpostAclTags(): { [key: string]: string } | undefined {
    return this.inputs['outpost_acl_tags'] as { [key: string]: string } | undefined;
  }
  public set outpostAclTags(value: { [key: string]: string } | undefined) {
    this.inputs['outpost_acl_tags'] = value;
  }
  public get outpostArn(): string | undefined {
    return this.inputs['outpost_arn'] as string | undefined;
  }
  public set outpostArn(value: string | undefined) {
    this.inputs['outpost_arn'] = value;
  }
  public get outpostAz(): string | undefined {
    return this.inputs['outpost_az'] as string | undefined;
  }
  public set outpostAz(value: string | undefined) {
    this.inputs['outpost_az'] = value;
  }
  public get outpostDedicatedNetworkAcl(): boolean | undefined {
    return this.inputs['outpost_dedicated_network_acl'] as boolean | undefined;
  }
  public set outpostDedicatedNetworkAcl(value: boolean | undefined) {
    this.inputs['outpost_dedicated_network_acl'] = value;
  }
  public get outpostInboundAclRules(): { [key: string]: string }[] | undefined {
    return this.inputs['outpost_inbound_acl_rules'] as { [key: string]: string }[] | undefined;
  }
  public set outpostInboundAclRules(value: { [key: string]: string }[] | undefined) {
    this.inputs['outpost_inbound_acl_rules'] = value;
  }
  public get outpostOutboundAclRules(): { [key: string]: string }[] | undefined {
    return this.inputs['outpost_outbound_acl_rules'] as { [key: string]: string }[] | undefined;
  }
  public set outpostOutboundAclRules(value: { [key: string]: string }[] | undefined) {
    this.inputs['outpost_outbound_acl_rules'] = value;
  }
  public get outpostSubnetAssignIpv6AddressOnCreation(): boolean | undefined {
    return this.inputs['outpost_subnet_assign_ipv6_address_on_creation'] as boolean | undefined;
  }
  public set outpostSubnetAssignIpv6AddressOnCreation(value: boolean | undefined) {
    this.inputs['outpost_subnet_assign_ipv6_address_on_creation'] = value;
  }
  public get outpostSubnetIpv6Prefixes(): string[] | undefined {
    return this.inputs['outpost_subnet_ipv6_prefixes'] as string[] | undefined;
  }
  public set outpostSubnetIpv6Prefixes(value: string[] | undefined) {
    this.inputs['outpost_subnet_ipv6_prefixes'] = value;
  }
  public get outpostSubnetNames(): string[] | undefined {
    return this.inputs['outpost_subnet_names'] as string[] | undefined;
  }
  public set outpostSubnetNames(value: string[] | undefined) {
    this.inputs['outpost_subnet_names'] = value;
  }
  public get outpostSubnetSuffix(): string | undefined {
    return this.inputs['outpost_subnet_suffix'] as string | undefined;
  }
  public set outpostSubnetSuffix(value: string | undefined) {
    this.inputs['outpost_subnet_suffix'] = value;
  }
  public get outpostSubnetTags(): { [key: string]: string } | undefined {
    return this.inputs['outpost_subnet_tags'] as { [key: string]: string } | undefined;
  }
  public set outpostSubnetTags(value: { [key: string]: string } | undefined) {
    this.inputs['outpost_subnet_tags'] = value;
  }
  public get outpostSubnets(): string[] | undefined {
    return this.inputs['outpost_subnets'] as string[] | undefined;
  }
  public set outpostSubnets(value: string[] | undefined) {
    this.inputs['outpost_subnets'] = value;
  }
  public get privateAclTags(): { [key: string]: string } | undefined {
    return this.inputs['private_acl_tags'] as { [key: string]: string } | undefined;
  }
  public set privateAclTags(value: { [key: string]: string } | undefined) {
    this.inputs['private_acl_tags'] = value;
  }
  public get privateDedicatedNetworkAcl(): boolean | undefined {
    return this.inputs['private_dedicated_network_acl'] as boolean | undefined;
  }
  public set privateDedicatedNetworkAcl(value: boolean | undefined) {
    this.inputs['private_dedicated_network_acl'] = value;
  }
  public get privateInboundAclRules(): { [key: string]: string }[] | undefined {
    return this.inputs['private_inbound_acl_rules'] as { [key: string]: string }[] | undefined;
  }
  public set privateInboundAclRules(value: { [key: string]: string }[] | undefined) {
    this.inputs['private_inbound_acl_rules'] = value;
  }
  public get privateOutboundAclRules(): { [key: string]: string }[] | undefined {
    return this.inputs['private_outbound_acl_rules'] as { [key: string]: string }[] | undefined;
  }
  public set privateOutboundAclRules(value: { [key: string]: string }[] | undefined) {
    this.inputs['private_outbound_acl_rules'] = value;
  }
  public get privateRouteTableTags(): { [key: string]: string } | undefined {
    return this.inputs['private_route_table_tags'] as { [key: string]: string } | undefined;
  }
  public set privateRouteTableTags(value: { [key: string]: string } | undefined) {
    this.inputs['private_route_table_tags'] = value;
  }
  public get privateSubnetAssignIpv6AddressOnCreation(): boolean | undefined {
    return this.inputs['private_subnet_assign_ipv6_address_on_creation'] as boolean | undefined;
  }
  public set privateSubnetAssignIpv6AddressOnCreation(value: boolean | undefined) {
    this.inputs['private_subnet_assign_ipv6_address_on_creation'] = value;
  }
  public get privateSubnetIpv6Prefixes(): string[] | undefined {
    return this.inputs['private_subnet_ipv6_prefixes'] as string[] | undefined;
  }
  public set privateSubnetIpv6Prefixes(value: string[] | undefined) {
    this.inputs['private_subnet_ipv6_prefixes'] = value;
  }
  public get privateSubnetNames(): string[] | undefined {
    return this.inputs['private_subnet_names'] as string[] | undefined;
  }
  public set privateSubnetNames(value: string[] | undefined) {
    this.inputs['private_subnet_names'] = value;
  }
  public get privateSubnetSuffix(): string | undefined {
    return this.inputs['private_subnet_suffix'] as string | undefined;
  }
  public set privateSubnetSuffix(value: string | undefined) {
    this.inputs['private_subnet_suffix'] = value;
  }
  public get privateSubnetTags(): { [key: string]: string } | undefined {
    return this.inputs['private_subnet_tags'] as { [key: string]: string } | undefined;
  }
  public set privateSubnetTags(value: { [key: string]: string } | undefined) {
    this.inputs['private_subnet_tags'] = value;
  }
  public get privateSubnetTagsPerAz(): { [key: string]: { [key: string]: string } } | undefined {
    return this.inputs['private_subnet_tags_per_az'] as { [key: string]: { [key: string]: string } } | undefined;
  }
  public set privateSubnetTagsPerAz(value: { [key: string]: { [key: string]: string } } | undefined) {
    this.inputs['private_subnet_tags_per_az'] = value;
  }
  public get privateSubnets(): string[] | undefined {
    return this.inputs['private_subnets'] as string[] | undefined;
  }
  public set privateSubnets(value: string[] | undefined) {
    this.inputs['private_subnets'] = value;
  }
  public get propagateIntraRouteTablesVgw(): boolean | undefined {
    return this.inputs['propagate_intra_route_tables_vgw'] as boolean | undefined;
  }
  public set propagateIntraRouteTablesVgw(value: boolean | undefined) {
    this.inputs['propagate_intra_route_tables_vgw'] = value;
  }
  public get propagatePrivateRouteTablesVgw(): boolean | undefined {
    return this.inputs['propagate_private_route_tables_vgw'] as boolean | undefined;
  }
  public set propagatePrivateRouteTablesVgw(value: boolean | undefined) {
    this.inputs['propagate_private_route_tables_vgw'] = value;
  }
  public get propagatePublicRouteTablesVgw(): boolean | undefined {
    return this.inputs['propagate_public_route_tables_vgw'] as boolean | undefined;
  }
  public set propagatePublicRouteTablesVgw(value: boolean | undefined) {
    this.inputs['propagate_public_route_tables_vgw'] = value;
  }
  public get publicAclTags(): { [key: string]: string } | undefined {
    return this.inputs['public_acl_tags'] as { [key: string]: string } | undefined;
  }
  public set publicAclTags(value: { [key: string]: string } | undefined) {
    this.inputs['public_acl_tags'] = value;
  }
  public get publicDedicatedNetworkAcl(): boolean | undefined {
    return this.inputs['public_dedicated_network_acl'] as boolean | undefined;
  }
  public set publicDedicatedNetworkAcl(value: boolean | undefined) {
    this.inputs['public_dedicated_network_acl'] = value;
  }
  public get publicInboundAclRules(): { [key: string]: string }[] | undefined {
    return this.inputs['public_inbound_acl_rules'] as { [key: string]: string }[] | undefined;
  }
  public set publicInboundAclRules(value: { [key: string]: string }[] | undefined) {
    this.inputs['public_inbound_acl_rules'] = value;
  }
  public get publicOutboundAclRules(): { [key: string]: string }[] | undefined {
    return this.inputs['public_outbound_acl_rules'] as { [key: string]: string }[] | undefined;
  }
  public set publicOutboundAclRules(value: { [key: string]: string }[] | undefined) {
    this.inputs['public_outbound_acl_rules'] = value;
  }
  public get publicRouteTableTags(): { [key: string]: string } | undefined {
    return this.inputs['public_route_table_tags'] as { [key: string]: string } | undefined;
  }
  public set publicRouteTableTags(value: { [key: string]: string } | undefined) {
    this.inputs['public_route_table_tags'] = value;
  }
  public get publicSubnetAssignIpv6AddressOnCreation(): boolean | undefined {
    return this.inputs['public_subnet_assign_ipv6_address_on_creation'] as boolean | undefined;
  }
  public set publicSubnetAssignIpv6AddressOnCreation(value: boolean | undefined) {
    this.inputs['public_subnet_assign_ipv6_address_on_creation'] = value;
  }
  public get publicSubnetIpv6Prefixes(): string[] | undefined {
    return this.inputs['public_subnet_ipv6_prefixes'] as string[] | undefined;
  }
  public set publicSubnetIpv6Prefixes(value: string[] | undefined) {
    this.inputs['public_subnet_ipv6_prefixes'] = value;
  }
  public get publicSubnetNames(): string[] | undefined {
    return this.inputs['public_subnet_names'] as string[] | undefined;
  }
  public set publicSubnetNames(value: string[] | undefined) {
    this.inputs['public_subnet_names'] = value;
  }
  public get publicSubnetSuffix(): string | undefined {
    return this.inputs['public_subnet_suffix'] as string | undefined;
  }
  public set publicSubnetSuffix(value: string | undefined) {
    this.inputs['public_subnet_suffix'] = value;
  }
  public get publicSubnetTags(): { [key: string]: string } | undefined {
    return this.inputs['public_subnet_tags'] as { [key: string]: string } | undefined;
  }
  public set publicSubnetTags(value: { [key: string]: string } | undefined) {
    this.inputs['public_subnet_tags'] = value;
  }
  public get publicSubnetTagsPerAz(): { [key: string]: { [key: string]: string } } | undefined {
    return this.inputs['public_subnet_tags_per_az'] as { [key: string]: { [key: string]: string } } | undefined;
  }
  public set publicSubnetTagsPerAz(value: { [key: string]: { [key: string]: string } } | undefined) {
    this.inputs['public_subnet_tags_per_az'] = value;
  }
  public get publicSubnets(): string[] | undefined {
    return this.inputs['public_subnets'] as string[] | undefined;
  }
  public set publicSubnets(value: string[] | undefined) {
    this.inputs['public_subnets'] = value;
  }
  public get putinKhuylo(): boolean | undefined {
    return this.inputs['putin_khuylo'] as boolean | undefined;
  }
  public set putinKhuylo(value: boolean | undefined) {
    this.inputs['putin_khuylo'] = value;
  }
  public get redshiftAclTags(): { [key: string]: string } | undefined {
    return this.inputs['redshift_acl_tags'] as { [key: string]: string } | undefined;
  }
  public set redshiftAclTags(value: { [key: string]: string } | undefined) {
    this.inputs['redshift_acl_tags'] = value;
  }
  public get redshiftDedicatedNetworkAcl(): boolean | undefined {
    return this.inputs['redshift_dedicated_network_acl'] as boolean | undefined;
  }
  public set redshiftDedicatedNetworkAcl(value: boolean | undefined) {
    this.inputs['redshift_dedicated_network_acl'] = value;
  }
  public get redshiftInboundAclRules(): { [key: string]: string }[] | undefined {
    return this.inputs['redshift_inbound_acl_rules'] as { [key: string]: string }[] | undefined;
  }
  public set redshiftInboundAclRules(value: { [key: string]: string }[] | undefined) {
    this.inputs['redshift_inbound_acl_rules'] = value;
  }
  public get redshiftOutboundAclRules(): { [key: string]: string }[] | undefined {
    return this.inputs['redshift_outbound_acl_rules'] as { [key: string]: string }[] | undefined;
  }
  public set redshiftOutboundAclRules(value: { [key: string]: string }[] | undefined) {
    this.inputs['redshift_outbound_acl_rules'] = value;
  }
  public get redshiftRouteTableTags(): { [key: string]: string } | undefined {
    return this.inputs['redshift_route_table_tags'] as { [key: string]: string } | undefined;
  }
  public set redshiftRouteTableTags(value: { [key: string]: string } | undefined) {
    this.inputs['redshift_route_table_tags'] = value;
  }
  public get redshiftSubnetAssignIpv6AddressOnCreation(): boolean | undefined {
    return this.inputs['redshift_subnet_assign_ipv6_address_on_creation'] as boolean | undefined;
  }
  public set redshiftSubnetAssignIpv6AddressOnCreation(value: boolean | undefined) {
    this.inputs['redshift_subnet_assign_ipv6_address_on_creation'] = value;
  }
  public get redshiftSubnetGroupName(): string | undefined {
    return this.inputs['redshift_subnet_group_name'] as string | undefined;
  }
  public set redshiftSubnetGroupName(value: string | undefined) {
    this.inputs['redshift_subnet_group_name'] = value;
  }
  public get redshiftSubnetGroupTags(): { [key: string]: string } | undefined {
    return this.inputs['redshift_subnet_group_tags'] as { [key: string]: string } | undefined;
  }
  public set redshiftSubnetGroupTags(value: { [key: string]: string } | undefined) {
    this.inputs['redshift_subnet_group_tags'] = value;
  }
  public get redshiftSubnetIpv6Prefixes(): string[] | undefined {
    return this.inputs['redshift_subnet_ipv6_prefixes'] as string[] | undefined;
  }
  public set redshiftSubnetIpv6Prefixes(value: string[] | undefined) {
    this.inputs['redshift_subnet_ipv6_prefixes'] = value;
  }
  public get redshiftSubnetNames(): string[] | undefined {
    return this.inputs['redshift_subnet_names'] as string[] | undefined;
  }
  public set redshiftSubnetNames(value: string[] | undefined) {
    this.inputs['redshift_subnet_names'] = value;
  }
  public get redshiftSubnetSuffix(): string | undefined {
    return this.inputs['redshift_subnet_suffix'] as string | undefined;
  }
  public set redshiftSubnetSuffix(value: string | undefined) {
    this.inputs['redshift_subnet_suffix'] = value;
  }
  public get redshiftSubnetTags(): { [key: string]: string } | undefined {
    return this.inputs['redshift_subnet_tags'] as { [key: string]: string } | undefined;
  }
  public set redshiftSubnetTags(value: { [key: string]: string } | undefined) {
    this.inputs['redshift_subnet_tags'] = value;
  }
  public get redshiftSubnets(): string[] | undefined {
    return this.inputs['redshift_subnets'] as string[] | undefined;
  }
  public set redshiftSubnets(value: string[] | undefined) {
    this.inputs['redshift_subnets'] = value;
  }
  public get reuseNatIps(): boolean | undefined {
    return this.inputs['reuse_nat_ips'] as boolean | undefined;
  }
  public set reuseNatIps(value: boolean | undefined) {
    this.inputs['reuse_nat_ips'] = value;
  }
  public get secondaryCidrBlocks(): string[] | undefined {
    return this.inputs['secondary_cidr_blocks'] as string[] | undefined;
  }
  public set secondaryCidrBlocks(value: string[] | undefined) {
    this.inputs['secondary_cidr_blocks'] = value;
  }
  public get singleNatGateway(): boolean | undefined {
    return this.inputs['single_nat_gateway'] as boolean | undefined;
  }
  public set singleNatGateway(value: boolean | undefined) {
    this.inputs['single_nat_gateway'] = value;
  }
  public get tags(): { [key: string]: string } | undefined {
    return this.inputs['tags'] as { [key: string]: string } | undefined;
  }
  public set tags(value: { [key: string]: string } | undefined) {
    this.inputs['tags'] = value;
  }
  public get useIpamPool(): boolean | undefined {
    return this.inputs['use_ipam_pool'] as boolean | undefined;
  }
  public set useIpamPool(value: boolean | undefined) {
    this.inputs['use_ipam_pool'] = value;
  }
  public get vpcFlowLogPermissionsBoundary(): string | undefined {
    return this.inputs['vpc_flow_log_permissions_boundary'] as string | undefined;
  }
  public set vpcFlowLogPermissionsBoundary(value: string | undefined) {
    this.inputs['vpc_flow_log_permissions_boundary'] = value;
  }
  public get vpcFlowLogTags(): { [key: string]: string } | undefined {
    return this.inputs['vpc_flow_log_tags'] as { [key: string]: string } | undefined;
  }
  public set vpcFlowLogTags(value: { [key: string]: string } | undefined) {
    this.inputs['vpc_flow_log_tags'] = value;
  }
  public get vpcTags(): { [key: string]: string } | undefined {
    return this.inputs['vpc_tags'] as { [key: string]: string } | undefined;
  }
  public set vpcTags(value: { [key: string]: string } | undefined) {
    this.inputs['vpc_tags'] = value;
  }
  public get vpnGatewayAz(): string | undefined {
    return this.inputs['vpn_gateway_az'] as string | undefined;
  }
  public set vpnGatewayAz(value: string | undefined) {
    this.inputs['vpn_gateway_az'] = value;
  }
  public get vpnGatewayId(): string | undefined {
    return this.inputs['vpn_gateway_id'] as string | undefined;
  }
  public set vpnGatewayId(value: string | undefined) {
    this.inputs['vpn_gateway_id'] = value;
  }
  public get vpnGatewayTags(): { [key: string]: string } | undefined {
    return this.inputs['vpn_gateway_tags'] as { [key: string]: string } | undefined;
  }
  public set vpnGatewayTags(value: { [key: string]: string } | undefined) {
    this.inputs['vpn_gateway_tags'] = value;
  }
  public get azsOutput() {
    return this.getString('azs')
  }
  public get cgwArnsOutput() {
    return this.getString('cgw_arns')
  }
  public get cgwIdsOutput() {
    return this.getString('cgw_ids')
  }
  public get databaseInternetGatewayRouteIdOutput() {
    return this.getString('database_internet_gateway_route_id')
  }
  public get databaseIpv6EgressRouteIdOutput() {
    return this.getString('database_ipv6_egress_route_id')
  }
  public get databaseNatGatewayRouteIdsOutput() {
    return this.getString('database_nat_gateway_route_ids')
  }
  public get databaseNetworkAclArnOutput() {
    return this.getString('database_network_acl_arn')
  }
  public get databaseNetworkAclIdOutput() {
    return this.getString('database_network_acl_id')
  }
  public get databaseRouteTableAssociationIdsOutput() {
    return this.getString('database_route_table_association_ids')
  }
  public get databaseRouteTableIdsOutput() {
    return this.getString('database_route_table_ids')
  }
  public get databaseSubnetArnsOutput() {
    return this.getString('database_subnet_arns')
  }
  public get databaseSubnetGroupOutput() {
    return this.getString('database_subnet_group')
  }
  public get databaseSubnetGroupNameOutput() {
    return this.getString('database_subnet_group_name')
  }
  public get databaseSubnetsOutput() {
    return this.getString('database_subnets')
  }
  public get databaseSubnetsCidrBlocksOutput() {
    return this.getString('database_subnets_cidr_blocks')
  }
  public get databaseSubnetsIpv6CidrBlocksOutput() {
    return this.getString('database_subnets_ipv6_cidr_blocks')
  }
  public get defaultNetworkAclIdOutput() {
    return this.getString('default_network_acl_id')
  }
  public get defaultRouteTableIdOutput() {
    return this.getString('default_route_table_id')
  }
  public get defaultSecurityGroupIdOutput() {
    return this.getString('default_security_group_id')
  }
  public get defaultVpcArnOutput() {
    return this.getString('default_vpc_arn')
  }
  public get defaultVpcCidrBlockOutput() {
    return this.getString('default_vpc_cidr_block')
  }
  public get defaultVpcDefaultNetworkAclIdOutput() {
    return this.getString('default_vpc_default_network_acl_id')
  }
  public get defaultVpcDefaultRouteTableIdOutput() {
    return this.getString('default_vpc_default_route_table_id')
  }
  public get defaultVpcDefaultSecurityGroupIdOutput() {
    return this.getString('default_vpc_default_security_group_id')
  }
  public get defaultVpcEnableDnsHostnamesOutput() {
    return this.getString('default_vpc_enable_dns_hostnames')
  }
  public get defaultVpcEnableDnsSupportOutput() {
    return this.getString('default_vpc_enable_dns_support')
  }
  public get defaultVpcIdOutput() {
    return this.getString('default_vpc_id')
  }
  public get defaultVpcInstanceTenancyOutput() {
    return this.getString('default_vpc_instance_tenancy')
  }
  public get defaultVpcMainRouteTableIdOutput() {
    return this.getString('default_vpc_main_route_table_id')
  }
  public get dhcpOptionsIdOutput() {
    return this.getString('dhcp_options_id')
  }
  public get egressOnlyInternetGatewayIdOutput() {
    return this.getString('egress_only_internet_gateway_id')
  }
  public get elasticacheNetworkAclArnOutput() {
    return this.getString('elasticache_network_acl_arn')
  }
  public get elasticacheNetworkAclIdOutput() {
    return this.getString('elasticache_network_acl_id')
  }
  public get elasticacheRouteTableAssociationIdsOutput() {
    return this.getString('elasticache_route_table_association_ids')
  }
  public get elasticacheRouteTableIdsOutput() {
    return this.getString('elasticache_route_table_ids')
  }
  public get elasticacheSubnetArnsOutput() {
    return this.getString('elasticache_subnet_arns')
  }
  public get elasticacheSubnetGroupOutput() {
    return this.getString('elasticache_subnet_group')
  }
  public get elasticacheSubnetGroupNameOutput() {
    return this.getString('elasticache_subnet_group_name')
  }
  public get elasticacheSubnetsOutput() {
    return this.getString('elasticache_subnets')
  }
  public get elasticacheSubnetsCidrBlocksOutput() {
    return this.getString('elasticache_subnets_cidr_blocks')
  }
  public get elasticacheSubnetsIpv6CidrBlocksOutput() {
    return this.getString('elasticache_subnets_ipv6_cidr_blocks')
  }
  public get igwArnOutput() {
    return this.getString('igw_arn')
  }
  public get igwIdOutput() {
    return this.getString('igw_id')
  }
  public get intraNetworkAclArnOutput() {
    return this.getString('intra_network_acl_arn')
  }
  public get intraNetworkAclIdOutput() {
    return this.getString('intra_network_acl_id')
  }
  public get intraRouteTableAssociationIdsOutput() {
    return this.getString('intra_route_table_association_ids')
  }
  public get intraRouteTableIdsOutput() {
    return this.getString('intra_route_table_ids')
  }
  public get intraSubnetArnsOutput() {
    return this.getString('intra_subnet_arns')
  }
  public get intraSubnetsOutput() {
    return this.getString('intra_subnets')
  }
  public get intraSubnetsCidrBlocksOutput() {
    return this.getString('intra_subnets_cidr_blocks')
  }
  public get intraSubnetsIpv6CidrBlocksOutput() {
    return this.getString('intra_subnets_ipv6_cidr_blocks')
  }
  public get nameOutput() {
    return this.getString('name')
  }
  public get natIdsOutput() {
    return this.getString('nat_ids')
  }
  public get natPublicIpsOutput() {
    return this.getString('nat_public_ips')
  }
  public get natgwIdsOutput() {
    return this.getString('natgw_ids')
  }
  public get outpostNetworkAclArnOutput() {
    return this.getString('outpost_network_acl_arn')
  }
  public get outpostNetworkAclIdOutput() {
    return this.getString('outpost_network_acl_id')
  }
  public get outpostSubnetArnsOutput() {
    return this.getString('outpost_subnet_arns')
  }
  public get outpostSubnetsOutput() {
    return this.getString('outpost_subnets')
  }
  public get outpostSubnetsCidrBlocksOutput() {
    return this.getString('outpost_subnets_cidr_blocks')
  }
  public get outpostSubnetsIpv6CidrBlocksOutput() {
    return this.getString('outpost_subnets_ipv6_cidr_blocks')
  }
  public get privateIpv6EgressRouteIdsOutput() {
    return this.getString('private_ipv6_egress_route_ids')
  }
  public get privateNatGatewayRouteIdsOutput() {
    return this.getString('private_nat_gateway_route_ids')
  }
  public get privateNetworkAclArnOutput() {
    return this.getString('private_network_acl_arn')
  }
  public get privateNetworkAclIdOutput() {
    return this.getString('private_network_acl_id')
  }
  public get privateRouteTableAssociationIdsOutput() {
    return this.getString('private_route_table_association_ids')
  }
  public get privateRouteTableIdsOutput() {
    return this.getString('private_route_table_ids')
  }
  public get privateSubnetArnsOutput() {
    return this.getString('private_subnet_arns')
  }
  public get privateSubnetsOutput() {
    return this.getString('private_subnets')
  }
  public get privateSubnetsCidrBlocksOutput() {
    return this.getString('private_subnets_cidr_blocks')
  }
  public get privateSubnetsIpv6CidrBlocksOutput() {
    return this.getString('private_subnets_ipv6_cidr_blocks')
  }
  public get publicInternetGatewayIpv6RouteIdOutput() {
    return this.getString('public_internet_gateway_ipv6_route_id')
  }
  public get publicInternetGatewayRouteIdOutput() {
    return this.getString('public_internet_gateway_route_id')
  }
  public get publicNetworkAclArnOutput() {
    return this.getString('public_network_acl_arn')
  }
  public get publicNetworkAclIdOutput() {
    return this.getString('public_network_acl_id')
  }
  public get publicRouteTableAssociationIdsOutput() {
    return this.getString('public_route_table_association_ids')
  }
  public get publicRouteTableIdsOutput() {
    return this.getString('public_route_table_ids')
  }
  public get publicSubnetArnsOutput() {
    return this.getString('public_subnet_arns')
  }
  public get publicSubnetsOutput() {
    return this.getString('public_subnets')
  }
  public get publicSubnetsCidrBlocksOutput() {
    return this.getString('public_subnets_cidr_blocks')
  }
  public get publicSubnetsIpv6CidrBlocksOutput() {
    return this.getString('public_subnets_ipv6_cidr_blocks')
  }
  public get redshiftNetworkAclArnOutput() {
    return this.getString('redshift_network_acl_arn')
  }
  public get redshiftNetworkAclIdOutput() {
    return this.getString('redshift_network_acl_id')
  }
  public get redshiftPublicRouteTableAssociationIdsOutput() {
    return this.getString('redshift_public_route_table_association_ids')
  }
  public get redshiftRouteTableAssociationIdsOutput() {
    return this.getString('redshift_route_table_association_ids')
  }
  public get redshiftRouteTableIdsOutput() {
    return this.getString('redshift_route_table_ids')
  }
  public get redshiftSubnetArnsOutput() {
    return this.getString('redshift_subnet_arns')
  }
  public get redshiftSubnetGroupOutput() {
    return this.getString('redshift_subnet_group')
  }
  public get redshiftSubnetsOutput() {
    return this.getString('redshift_subnets')
  }
  public get redshiftSubnetsCidrBlocksOutput() {
    return this.getString('redshift_subnets_cidr_blocks')
  }
  public get redshiftSubnetsIpv6CidrBlocksOutput() {
    return this.getString('redshift_subnets_ipv6_cidr_blocks')
  }
  public get thisCustomerGatewayOutput() {
    return this.getString('this_customer_gateway')
  }
  public get vgwArnOutput() {
    return this.getString('vgw_arn')
  }
  public get vgwIdOutput() {
    return this.getString('vgw_id')
  }
  public get vpcArnOutput() {
    return this.getString('vpc_arn')
  }
  public get vpcCidrBlockOutput() {
    return this.getString('vpc_cidr_block')
  }
  public get vpcEnableDnsHostnamesOutput() {
    return this.getString('vpc_enable_dns_hostnames')
  }
  public get vpcEnableDnsSupportOutput() {
    return this.getString('vpc_enable_dns_support')
  }
  public get vpcFlowLogCloudwatchIamRoleArnOutput() {
    return this.getString('vpc_flow_log_cloudwatch_iam_role_arn')
  }
  public get vpcFlowLogDestinationArnOutput() {
    return this.getString('vpc_flow_log_destination_arn')
  }
  public get vpcFlowLogDestinationTypeOutput() {
    return this.getString('vpc_flow_log_destination_type')
  }
  public get vpcFlowLogIdOutput() {
    return this.getString('vpc_flow_log_id')
  }
  public get vpcIdOutput() {
    return this.getString('vpc_id')
  }
  public get vpcInstanceTenancyOutput() {
    return this.getString('vpc_instance_tenancy')
  }
  public get vpcIpv6AssociationIdOutput() {
    return this.getString('vpc_ipv6_association_id')
  }
  public get vpcIpv6CidrBlockOutput() {
    return this.getString('vpc_ipv6_cidr_block')
  }
  public get vpcMainRouteTableIdOutput() {
    return this.getString('vpc_main_route_table_id')
  }
  public get vpcOwnerIdOutput() {
    return this.getString('vpc_owner_id')
  }
  public get vpcSecondaryCidrBlocksOutput() {
    return this.getString('vpc_secondary_cidr_blocks')
  }
  protected synthesizeAttributes() {
    return this.inputs;
  }
}
