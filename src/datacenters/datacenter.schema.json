{
  "$ref": "#/definitions/DatacenterSchema",
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "definitions": {
    "DatacenterSchema": {
      "additionalProperties": false,
      "properties": {
        "hooks": {
          "description": "Configure rules for how application resources should behave in the environment",
          "items": {
            "additionalProperties": false,
            "properties": {
              "account": {
                "type": "string"
              },
              "args": {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              "autoscaling": {
                "additionalProperties": false,
                "properties": {
                  "max_replicas": {
                    "type": "number"
                  },
                  "min_replicas": {
                    "type": "number"
                  }
                },
                "type": "object"
              },
              "chart": {
                "type": "string"
              },
              "command": {
                "anyOf": [
                  {
                    "additionalProperties": false,
                    "type": "object"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "component_source": {
                "type": "string"
              },
              "content": {
                "type": "string"
              },
              "context": {
                "type": "string"
              },
              "cpu": {
                "anyOf": [
                  {
                    "type": "number"
                  },
                  {
                    "description": "Number of CPUs to allocate to the container",
                    "minimum": 0.1,
                    "type": "number"
                  }
                ]
              },
              "data": {
                "type": "string"
              },
              "database": {
                "type": "string"
              },
              "databaseSchema": {
                "type": "string"
              },
              "databaseSize": {
                "type": "string"
              },
              "databaseType": {
                "type": "string"
              },
              "databaseVersion": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "dnsZone": {
                "type": "string"
              },
              "dockerfile": {
                "type": "string"
              },
              "entrypoint": {
                "anyOf": [
                  {
                    "additionalProperties": false,
                    "type": "object"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "environment": {
                "additionalProperties": false,
                "type": "object"
              },
              "external_name": {
                "type": "string"
              },
              "hostPath": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "internal": {
                "anyOf": [
                  {
                    "default": false,
                    "description": "Whether or not this should be fulfilled by an internal load balancer (e.g. no public IP)",
                    "type": "boolean"
                  },
                  {
                    "default": false,
                    "description": "Whether or not this should be an internal load balancer (e.g. no public IP)",
                    "type": "boolean"
                  }
                ]
              },
              "kubernetesVersion": {
                "type": "string"
              },
              "labels": {
                "additionalProperties": false,
                "type": "object"
              },
              "listener": {
                "additionalProperties": false,
                "properties": {
                  "hostZone": {
                    "type": "string"
                  },
                  "path": {
                    "type": "string"
                  },
                  "protocol": {
                    "type": "string"
                  },
                  "subdomain": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "listener_port": {
                "type": "number"
              },
              "loadBalancer": {
                "type": "string"
              },
              "loadBalancerType": {
                "type": "string"
              },
              "memory": {
                "type": "string"
              },
              "modules": {
                "additionalProperties": {
                  "additionalProperties": {},
                  "properties": {
                    "source": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "source"
                  ],
                  "type": "object"
                },
                "type": "object"
              },
              "mountPath": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "namespace": {
                "type": "string"
              },
              "nodePools": {
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "count": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "nodeSize": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "port": {
                "type": [
                  "string",
                  "number"
                ]
              },
              "probes": {
                "additionalProperties": false,
                "properties": {
                  "liveness": {
                    "additionalProperties": false,
                    "properties": {
                      "command": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "failure_threshold": {
                        "type": "number"
                      },
                      "headers": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "initial_delay": {
                        "type": "number"
                      },
                      "interval": {
                        "type": "number"
                      },
                      "path": {
                        "type": "string"
                      },
                      "port": {
                        "type": "number"
                      },
                      "scheme": {
                        "type": "string"
                      },
                      "success_threshold": {
                        "type": "number"
                      },
                      "timeout": {
                        "type": "number"
                      },
                      "type": {
                        "enum": [
                          "exec",
                          "http"
                        ],
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "protocol": {
                "type": "string"
              },
              "recordType": {
                "type": "string"
              },
              "region": {
                "type": "string"
              },
              "registry": {
                "type": "string"
              },
              "replicas": {
                "type": "number"
              },
              "repository": {
                "type": "string"
              },
              "resources": {
                "additionalProperties": {
                  "allOf": [
                    {
                      "if": {
                        "properties": {
                          "type": {
                            "const": "cronjob",
                            "type": "string"
                          }
                        }
                      },
                      "then": {
                        "additionalProperties": false,
                        "properties": {
                          "account": {
                            "type": "string"
                          },
                          "command": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              }
                            ]
                          },
                          "cpu": {
                            "type": "number"
                          },
                          "entrypoint": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              }
                            ]
                          },
                          "environment": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Construct a type with a set of properties K of type T",
                            "type": "object"
                          },
                          "image": {
                            "type": "string"
                          },
                          "labels": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Construct a type with a set of properties K of type T",
                            "type": "object"
                          },
                          "memory": {
                            "type": "string"
                          },
                          "namespace": {
                            "type": "string"
                          },
                          "provider": {
                            "type": "string"
                          },
                          "schedule": {
                            "type": "string"
                          },
                          "sidecars": {
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "command": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array"
                                    }
                                  ]
                                },
                                "cpu": {
                                  "type": "number"
                                },
                                "entrypoint": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array"
                                    }
                                  ]
                                },
                                "environment": {
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "Construct a type with a set of properties K of type T",
                                  "type": "object"
                                },
                                "image": {
                                  "type": "string"
                                },
                                "memory": {
                                  "type": "string"
                                },
                                "volume_mounts": {
                                  "items": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "mount_path": {
                                        "type": "string"
                                      },
                                      "readonly": {
                                        "type": "boolean"
                                      },
                                      "volume": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "volume",
                                      "mount_path"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "required": [
                                "image"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "type": {
                            "const": "cronjob",
                            "type": "string"
                          },
                          "volume_mounts": {
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "mount_path": {
                                  "type": "string"
                                },
                                "readonly": {
                                  "type": "boolean"
                                },
                                "volume": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "volume",
                                "mount_path"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "image",
                          "provider",
                          "schedule",
                          "type"
                        ],
                        "type": "object"
                      }
                    },
                    {
                      "if": {
                        "properties": {
                          "type": {
                            "const": "database",
                            "type": "string"
                          }
                        }
                      },
                      "then": {
                        "additionalProperties": false,
                        "properties": {
                          "account": {
                            "type": "string"
                          },
                          "databaseSize": {
                            "description": "Size of the database instance to create",
                            "type": "string"
                          },
                          "databaseType": {
                            "description": "The type of database engine to use",
                            "type": "string"
                          },
                          "databaseVersion": {
                            "description": "Refers to the unique ID of a `databaseVersion` response",
                            "type": "string"
                          },
                          "description": {
                            "description": "Human-readable description of the database",
                            "type": "string"
                          },
                          "name": {
                            "description": "Unique name for the database",
                            "type": "string"
                          },
                          "provider": {
                            "type": "string"
                          },
                          "region": {
                            "description": "Unique ID of the region to run the database in",
                            "type": "string"
                          },
                          "type": {
                            "const": "database",
                            "type": "string"
                          },
                          "vpc": {
                            "description": "Unique ID of the VPC to run the database in",
                            "type": "string"
                          }
                        },
                        "required": [
                          "databaseSize",
                          "databaseType",
                          "databaseVersion",
                          "name",
                          "provider",
                          "region",
                          "type",
                          "vpc"
                        ],
                        "type": "object"
                      }
                    },
                    {
                      "if": {
                        "properties": {
                          "type": {
                            "const": "databaseSchema",
                            "type": "string"
                          }
                        }
                      },
                      "then": {
                        "additionalProperties": false,
                        "properties": {
                          "account": {
                            "type": "string"
                          },
                          "database": {
                            "description": "Unique ID of the database backing this schema",
                            "type": "string"
                          },
                          "databaseType": {
                            "description": "Type of database required by the schema",
                            "type": "string"
                          },
                          "databaseVersion": {
                            "description": "Version of the database type the schema creation process expects",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name to give to the new schema",
                            "type": "string"
                          },
                          "provider": {
                            "type": "string"
                          },
                          "type": {
                            "const": "databaseSchema",
                            "type": "string"
                          }
                        },
                        "required": [
                          "database",
                          "databaseType",
                          "databaseVersion",
                          "name",
                          "provider",
                          "type"
                        ],
                        "type": "object"
                      }
                    },
                    {
                      "if": {
                        "properties": {
                          "type": {
                            "const": "databaseSize",
                            "type": "string"
                          }
                        }
                      },
                      "then": {
                        "additionalProperties": false,
                        "properties": {
                          "account": {
                            "type": "string"
                          },
                          "provider": {
                            "type": "string"
                          },
                          "type": {
                            "const": "databaseSize",
                            "type": "string"
                          }
                        },
                        "required": [
                          "provider",
                          "type"
                        ],
                        "type": "object"
                      }
                    },
                    {
                      "if": {
                        "properties": {
                          "type": {
                            "const": "databaseType",
                            "type": "string"
                          }
                        }
                      },
                      "then": {
                        "additionalProperties": false,
                        "properties": {
                          "account": {
                            "type": "string"
                          },
                          "provider": {
                            "type": "string"
                          },
                          "type": {
                            "const": "databaseType",
                            "type": "string"
                          }
                        },
                        "required": [
                          "provider",
                          "type"
                        ],
                        "type": "object"
                      }
                    },
                    {
                      "if": {
                        "properties": {
                          "type": {
                            "const": "databaseUser",
                            "type": "string"
                          }
                        }
                      },
                      "then": {
                        "additionalProperties": false,
                        "properties": {
                          "account": {
                            "type": "string"
                          },
                          "databaseSchema": {
                            "description": "The schema the user should have access to",
                            "type": "string"
                          },
                          "provider": {
                            "type": "string"
                          },
                          "type": {
                            "const": "databaseUser",
                            "type": "string"
                          },
                          "username": {
                            "description": "Username of the user to create",
                            "type": "string"
                          }
                        },
                        "required": [
                          "databaseSchema",
                          "provider",
                          "type",
                          "username"
                        ],
                        "type": "object"
                      }
                    },
                    {
                      "if": {
                        "properties": {
                          "type": {
                            "const": "databaseVersion",
                            "type": "string"
                          }
                        }
                      },
                      "then": {
                        "additionalProperties": false,
                        "properties": {
                          "account": {
                            "type": "string"
                          },
                          "databaseType": {
                            "type": "string"
                          },
                          "provider": {
                            "type": "string"
                          },
                          "type": {
                            "const": "databaseVersion",
                            "type": "string"
                          }
                        },
                        "required": [
                          "databaseType",
                          "provider",
                          "type"
                        ],
                        "type": "object"
                      }
                    },
                    {
                      "if": {
                        "properties": {
                          "type": {
                            "const": "deployment",
                            "type": "string"
                          }
                        }
                      },
                      "then": {
                        "additionalProperties": false,
                        "properties": {
                          "account": {
                            "type": "string"
                          },
                          "autoscaling": {
                            "additionalProperties": false,
                            "description": "Autoscaling rules for the deployment",
                            "properties": {
                              "max_replicas": {
                                "description": "Maximum number of replicas of the deployment to run",
                                "type": "number"
                              },
                              "min_replicas": {
                                "description": "Minimum number of replicas of the deployment to run",
                                "minimum": 0,
                                "type": "number"
                              }
                            },
                            "required": [
                              "min_replicas",
                              "max_replicas"
                            ],
                            "type": "object"
                          },
                          "command": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              }
                            ],
                            "description": "Command to execute in the container"
                          },
                          "cpu": {
                            "description": "Number of CPUs to allocate to the container",
                            "minimum": 0.1,
                            "type": "number"
                          },
                          "entrypoint": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              }
                            ],
                            "description": "Entrypoint of the container"
                          },
                          "environment": {
                            "additionalProperties": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "null"
                                },
                                {
                                  "not": {}
                                }
                              ]
                            },
                            "description": "Environment variables to pass to the container",
                            "type": "object"
                          },
                          "image": {
                            "description": "Image the container runs from",
                            "type": "string"
                          },
                          "labels": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Labels for the deployment",
                            "type": "object"
                          },
                          "memory": {
                            "description": "Amount of memory to allocate to the container",
                            "type": "string"
                          },
                          "name": {
                            "description": "Deployment name",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace the deployment should be in",
                            "type": "string"
                          },
                          "probes": {
                            "additionalProperties": false,
                            "properties": {
                              "liveness": {
                                "anyOf": [
                                  {
                                    "additionalProperties": false,
                                    "properties": {
                                      "command": {
                                        "description": "Command to run inside the container to determine if its healthy",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "failure_threshold": {
                                        "default": 3,
                                        "description": "Number of times the probe will tolerate failure before giving up. Giving up in the case of liveness probe means restarting the container.",
                                        "minimum": 1,
                                        "type": "number"
                                      },
                                      "initial_delay": {
                                        "default": 0,
                                        "description": "Number of seconds after the container starts before the probe is initiated.",
                                        "minimum": 0,
                                        "type": "number"
                                      },
                                      "interval": {
                                        "default": 10,
                                        "description": "How often (in seconds) to perform the probe.",
                                        "minimum": 1,
                                        "type": "number"
                                      },
                                      "success_threshold": {
                                        "default": 1,
                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                        "minimum": 1,
                                        "type": "number"
                                      },
                                      "timeout": {
                                        "default": 1,
                                        "description": "Number of seconds after which the probe times out",
                                        "minimum": 1,
                                        "type": "number"
                                      },
                                      "type": {
                                        "const": "exec",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "command",
                                      "type"
                                    ],
                                    "type": "object"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "properties": {
                                      "failure_threshold": {
                                        "default": 3,
                                        "description": "Number of times the probe will tolerate failure before giving up. Giving up in the case of liveness probe means restarting the container.",
                                        "minimum": 1,
                                        "type": "number"
                                      },
                                      "headers": {
                                        "description": "Custom headers to set in the request.",
                                        "items": {
                                          "additionalProperties": false,
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "name",
                                            "value"
                                          ],
                                          "type": "object"
                                        },
                                        "type": "array"
                                      },
                                      "initial_delay": {
                                        "default": 0,
                                        "description": "Number of seconds after the container starts before the probe is initiated.",
                                        "minimum": 0,
                                        "type": "number"
                                      },
                                      "interval": {
                                        "default": 10,
                                        "description": "How often (in seconds) to perform the probe.",
                                        "minimum": 1,
                                        "type": "number"
                                      },
                                      "path": {
                                        "default": "/",
                                        "description": "Path to access on the http server",
                                        "type": "string"
                                      },
                                      "port": {
                                        "description": "Port to access on the container",
                                        "type": "number"
                                      },
                                      "scheme": {
                                        "default": "http",
                                        "description": "Scheme to use for connecting to the host (http or https).",
                                        "type": "string"
                                      },
                                      "success_threshold": {
                                        "default": 1,
                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                        "minimum": 1,
                                        "type": "number"
                                      },
                                      "timeout": {
                                        "default": 1,
                                        "description": "Number of seconds after which the probe times out",
                                        "minimum": 1,
                                        "type": "number"
                                      },
                                      "type": {
                                        "const": "http",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ],
                                    "type": "object"
                                  }
                                ]
                              }
                            },
                            "type": "object"
                          },
                          "provider": {
                            "type": "string"
                          },
                          "replicas": {
                            "description": "Number of replicas of the deployment to run",
                            "type": "number"
                          },
                          "sidecars": {
                            "description": "A set of additional containers to run as part of each replica",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "command": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array"
                                    }
                                  ],
                                  "description": "Command to execute in the container"
                                },
                                "cpu": {
                                  "description": "Number of CPUs to allocate to the container",
                                  "minimum": 0.1,
                                  "type": "number"
                                },
                                "entrypoint": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array"
                                    }
                                  ],
                                  "description": "Entrypoint of the container"
                                },
                                "environment": {
                                  "additionalProperties": {
                                    "anyOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "boolean"
                                      },
                                      {
                                        "type": "null"
                                      },
                                      {
                                        "not": {}
                                      }
                                    ]
                                  },
                                  "description": "Environment variables to pass to the container",
                                  "type": "object"
                                },
                                "image": {
                                  "description": "Image the container runs from",
                                  "type": "string"
                                },
                                "memory": {
                                  "description": "Amount of memory to allocate to the container",
                                  "type": "string"
                                },
                                "probes": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "liveness": {
                                      "anyOf": [
                                        {
                                          "additionalProperties": false,
                                          "properties": {
                                            "command": {
                                              "description": "Command to run inside the container to determine if its healthy",
                                              "items": {
                                                "type": "string"
                                              },
                                              "type": "array"
                                            },
                                            "failure_threshold": {
                                              "default": 3,
                                              "description": "Number of times the probe will tolerate failure before giving up. Giving up in the case of liveness probe means restarting the container.",
                                              "minimum": 1,
                                              "type": "number"
                                            },
                                            "initial_delay": {
                                              "default": 0,
                                              "description": "Number of seconds after the container starts before the probe is initiated.",
                                              "minimum": 0,
                                              "type": "number"
                                            },
                                            "interval": {
                                              "default": 10,
                                              "description": "How often (in seconds) to perform the probe.",
                                              "minimum": 1,
                                              "type": "number"
                                            },
                                            "success_threshold": {
                                              "default": 1,
                                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                              "minimum": 1,
                                              "type": "number"
                                            },
                                            "timeout": {
                                              "default": 1,
                                              "description": "Number of seconds after which the probe times out",
                                              "minimum": 1,
                                              "type": "number"
                                            },
                                            "type": {
                                              "const": "exec",
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "command",
                                            "type"
                                          ],
                                          "type": "object"
                                        },
                                        {
                                          "additionalProperties": false,
                                          "properties": {
                                            "failure_threshold": {
                                              "default": 3,
                                              "description": "Number of times the probe will tolerate failure before giving up. Giving up in the case of liveness probe means restarting the container.",
                                              "minimum": 1,
                                              "type": "number"
                                            },
                                            "headers": {
                                              "description": "Custom headers to set in the request.",
                                              "items": {
                                                "additionalProperties": false,
                                                "properties": {
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "value": {
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "name",
                                                  "value"
                                                ],
                                                "type": "object"
                                              },
                                              "type": "array"
                                            },
                                            "initial_delay": {
                                              "default": 0,
                                              "description": "Number of seconds after the container starts before the probe is initiated.",
                                              "minimum": 0,
                                              "type": "number"
                                            },
                                            "interval": {
                                              "default": 10,
                                              "description": "How often (in seconds) to perform the probe.",
                                              "minimum": 1,
                                              "type": "number"
                                            },
                                            "path": {
                                              "default": "/",
                                              "description": "Path to access on the http server",
                                              "type": "string"
                                            },
                                            "port": {
                                              "description": "Port to access on the container",
                                              "type": "number"
                                            },
                                            "scheme": {
                                              "default": "http",
                                              "description": "Scheme to use for connecting to the host (http or https).",
                                              "type": "string"
                                            },
                                            "success_threshold": {
                                              "default": 1,
                                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                              "minimum": 1,
                                              "type": "number"
                                            },
                                            "timeout": {
                                              "default": 1,
                                              "description": "Number of seconds after which the probe times out",
                                              "minimum": 1,
                                              "type": "number"
                                            },
                                            "type": {
                                              "const": "http",
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "type"
                                          ],
                                          "type": "object"
                                        }
                                      ]
                                    }
                                  },
                                  "type": "object"
                                },
                                "volume_mounts": {
                                  "description": "A set of volumes to mount to the container",
                                  "items": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "mount_path": {
                                        "type": "string"
                                      },
                                      "readonly": {
                                        "type": "boolean"
                                      },
                                      "volume": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "volume",
                                      "mount_path",
                                      "readonly"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "required": [
                                "image",
                                "volume_mounts"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "type": {
                            "const": "deployment",
                            "type": "string"
                          },
                          "volume_mounts": {
                            "description": "A set of volumes to mount to the container",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "mount_path": {
                                  "type": "string"
                                },
                                "readonly": {
                                  "type": "boolean"
                                },
                                "volume": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "volume",
                                "mount_path",
                                "readonly"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "image",
                          "name",
                          "provider",
                          "replicas",
                          "type",
                          "volume_mounts"
                        ],
                        "type": "object"
                      }
                    },
                    {
                      "if": {
                        "properties": {
                          "type": {
                            "const": "dnsRecord",
                            "type": "string"
                          }
                        }
                      },
                      "then": {
                        "additionalProperties": false,
                        "properties": {
                          "account": {
                            "type": "string"
                          },
                          "content": {
                            "type": "string"
                          },
                          "dnsZone": {
                            "type": "string"
                          },
                          "provider": {
                            "type": "string"
                          },
                          "recordType": {
                            "type": "string"
                          },
                          "subdomain": {
                            "type": "string"
                          },
                          "ttl": {
                            "type": "number"
                          },
                          "type": {
                            "const": "dnsRecord",
                            "type": "string"
                          }
                        },
                        "required": [
                          "content",
                          "dnsZone",
                          "provider",
                          "recordType",
                          "subdomain",
                          "type"
                        ],
                        "type": "object"
                      }
                    },
                    {
                      "if": {
                        "properties": {
                          "type": {
                            "const": "dnsZone",
                            "type": "string"
                          }
                        }
                      },
                      "then": {
                        "additionalProperties": false,
                        "properties": {
                          "account": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "provider": {
                            "type": "string"
                          },
                          "type": {
                            "const": "dnsZone",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "provider",
                          "type"
                        ],
                        "type": "object"
                      }
                    },
                    {
                      "if": {
                        "properties": {
                          "type": {
                            "const": "dockerBuild",
                            "type": "string"
                          }
                        }
                      },
                      "then": {
                        "additionalProperties": false,
                        "properties": {
                          "account": {
                            "type": "string"
                          },
                          "args": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "default": {},
                            "description": "Arguments to pass to the build command",
                            "type": "object"
                          },
                          "component_source": {
                            "description": "Source of the component that contains the build context",
                            "type": "string"
                          },
                          "context": {
                            "description": "Docker build context relative to the component root",
                            "type": "string"
                          },
                          "dockerfile": {
                            "default": "Dockerfile",
                            "description": "Path to the dockerfile relative to the context",
                            "type": "string"
                          },
                          "provider": {
                            "type": "string"
                          },
                          "registry": {
                            "default": "registry.architect.io",
                            "description": "Registry the artifact will be pushed to",
                            "type": "string"
                          },
                          "repository": {
                            "description": "The repository to push the artifact to",
                            "type": "string"
                          },
                          "tag": {
                            "default": "latest",
                            "description": "Tag to assign to the image",
                            "type": "string"
                          },
                          "target": {
                            "description": "Name of a intermediate build stage to target",
                            "type": "string"
                          },
                          "type": {
                            "const": "dockerBuild",
                            "type": "string"
                          }
                        },
                        "required": [
                          "component_source",
                          "context",
                          "provider",
                          "repository",
                          "type"
                        ],
                        "type": "object"
                      }
                    },
                    {
                      "if": {
                        "properties": {
                          "type": {
                            "const": "helmChart",
                            "type": "string"
                          }
                        }
                      },
                      "then": {
                        "additionalProperties": false,
                        "properties": {
                          "account": {
                            "type": "string"
                          },
                          "chart": {
                            "description": "Chart name to be installed",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the helm release",
                            "type": "string"
                          },
                          "namespace": {
                            "default": "default",
                            "description": "The namespace to install the release in",
                            "type": "string"
                          },
                          "provider": {
                            "type": "string"
                          },
                          "repository": {
                            "description": "The URL of the repository where the chart lives",
                            "type": "string"
                          },
                          "type": {
                            "const": "helmChart",
                            "type": "string"
                          },
                          "values": {
                            "description": "Values to pass to the helm chart release",
                            "type": "object"
                          },
                          "version": {
                            "description": "The exact chart version to install. Otherwise will use the latest.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "chart",
                          "name",
                          "provider",
                          "repository",
                          "type"
                        ],
                        "type": "object"
                      }
                    },
                    {
                      "if": {
                        "properties": {
                          "type": {
                            "const": "ingressRule",
                            "type": "string"
                          }
                        }
                      },
                      "then": {
                        "additionalProperties": false,
                        "properties": {
                          "account": {
                            "type": "string"
                          },
                          "internal": {
                            "default": false,
                            "description": "Whether or not this should be fulfilled by an internal load balancer (e.g. no public IP)",
                            "type": "boolean"
                          },
                          "listener": {
                            "additionalProperties": false,
                            "properties": {
                              "hostZone": {
                                "description": "The DNS zone that the ingress rule listens for traffic on (only works w/ application load balancers)",
                                "type": "string"
                              },
                              "path": {
                                "default": "/",
                                "description": "The path that the ingress rule listens for traffic on (only works w/ application load balancers)",
                                "type": "string"
                              },
                              "protocol": {
                                "default": "http",
                                "description": "Protocol that the ingress rule listens for traffic on",
                                "type": "string"
                              },
                              "subdomain": {
                                "description": "The DNS subdomain that the ingress rule listens for traffic on (only works w/ application load balancers)",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "loadBalancer": {
                            "description": "ID of the load balancer to use for this ingress rule",
                            "type": "string"
                          },
                          "namespace": {
                            "default": "default",
                            "description": "Namespace to put the ingress rule in",
                            "type": "string"
                          },
                          "port": {
                            "description": "Port that the ingress rule listens for traffic on",
                            "type": [
                              "string",
                              "number"
                            ]
                          },
                          "provider": {
                            "type": "string"
                          },
                          "service": {
                            "description": "Service the ingress forwards traffic to",
                            "type": "string"
                          },
                          "type": {
                            "const": "ingressRule",
                            "type": "string"
                          }
                        },
                        "required": [
                          "loadBalancer",
                          "port",
                          "provider",
                          "service",
                          "type"
                        ],
                        "type": "object"
                      }
                    },
                    {
                      "if": {
                        "properties": {
                          "type": {
                            "const": "kubernetesCluster",
                            "type": "string"
                          }
                        }
                      },
                      "then": {
                        "additionalProperties": false,
                        "properties": {
                          "account": {
                            "type": "string"
                          },
                          "description": {
                            "description": "Description of the cluster",
                            "type": "string"
                          },
                          "kubernetesVersion": {
                            "description": "Version of the kubernetes control plane to use",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the cluster",
                            "type": "string"
                          },
                          "nodePools": {
                            "description": "Node pools",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "count": {
                                  "description": "Number of nodes the pool should have",
                                  "minimum": 1,
                                  "type": "number"
                                },
                                "name": {
                                  "description": "Name of the node pool",
                                  "type": "string"
                                },
                                "nodeSize": {
                                  "description": "Size of each node in the pool",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name",
                                "count",
                                "nodeSize"
                              ],
                              "type": "object"
                            },
                            "minimum": 1,
                            "type": "array"
                          },
                          "provider": {
                            "type": "string"
                          },
                          "region": {
                            "description": "Region the cluster should live in",
                            "type": "string"
                          },
                          "type": {
                            "const": "kubernetesCluster",
                            "type": "string"
                          },
                          "vpc": {
                            "description": "VPC the cluster should live in",
                            "type": "string"
                          }
                        },
                        "required": [
                          "kubernetesVersion",
                          "name",
                          "nodePools",
                          "provider",
                          "region",
                          "type",
                          "vpc"
                        ],
                        "type": "object"
                      }
                    },
                    {
                      "if": {
                        "properties": {
                          "type": {
                            "const": "kubernetesNamespace",
                            "type": "string"
                          }
                        }
                      },
                      "then": {
                        "additionalProperties": false,
                        "properties": {
                          "account": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "provider": {
                            "type": "string"
                          },
                          "type": {
                            "const": "kubernetesNamespace",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "provider",
                          "type"
                        ],
                        "type": "object"
                      }
                    },
                    {
                      "if": {
                        "properties": {
                          "type": {
                            "const": "kubernetesVersion",
                            "type": "string"
                          }
                        }
                      },
                      "then": {
                        "additionalProperties": false,
                        "properties": {
                          "account": {
                            "type": "string"
                          },
                          "provider": {
                            "type": "string"
                          },
                          "type": {
                            "const": "kubernetesVersion",
                            "type": "string"
                          }
                        },
                        "required": [
                          "provider",
                          "type"
                        ],
                        "type": "object"
                      }
                    },
                    {
                      "if": {
                        "properties": {
                          "type": {
                            "const": "loadBalancer",
                            "type": "string"
                          }
                        }
                      },
                      "then": {
                        "additionalProperties": false,
                        "properties": {
                          "account": {
                            "type": "string"
                          },
                          "internal": {
                            "default": false,
                            "description": "Whether or not this should be an internal load balancer (e.g. no public IP)",
                            "type": "boolean"
                          },
                          "loadBalancerType": {
                            "description": "What type of load balancer to create",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name for the new load balancer",
                            "type": "string"
                          },
                          "provider": {
                            "type": "string"
                          },
                          "type": {
                            "const": "loadBalancer",
                            "type": "string"
                          }
                        },
                        "required": [
                          "loadBalancerType",
                          "name",
                          "provider",
                          "type"
                        ],
                        "type": "object"
                      }
                    },
                    {
                      "if": {
                        "properties": {
                          "type": {
                            "const": "loadBalancerType",
                            "type": "string"
                          }
                        }
                      },
                      "then": {
                        "additionalProperties": false,
                        "properties": {
                          "account": {
                            "type": "string"
                          },
                          "provider": {
                            "type": "string"
                          },
                          "type": {
                            "const": "loadBalancerType",
                            "type": "string"
                          }
                        },
                        "required": [
                          "provider",
                          "type"
                        ],
                        "type": "object"
                      }
                    },
                    {
                      "if": {
                        "properties": {
                          "type": {
                            "const": "node",
                            "type": "string"
                          }
                        }
                      },
                      "then": {
                        "additionalProperties": false,
                        "properties": {
                          "account": {
                            "type": "string"
                          },
                          "provider": {
                            "type": "string"
                          },
                          "type": {
                            "const": "node",
                            "type": "string"
                          }
                        },
                        "required": [
                          "provider",
                          "type"
                        ],
                        "type": "object"
                      }
                    },
                    {
                      "if": {
                        "properties": {
                          "type": {
                            "const": "nodeSize",
                            "type": "string"
                          }
                        }
                      },
                      "then": {
                        "additionalProperties": false,
                        "properties": {
                          "account": {
                            "type": "string"
                          },
                          "provider": {
                            "type": "string"
                          },
                          "type": {
                            "const": "nodeSize",
                            "type": "string"
                          }
                        },
                        "required": [
                          "provider",
                          "type"
                        ],
                        "type": "object"
                      }
                    },
                    {
                      "if": {
                        "properties": {
                          "type": {
                            "const": "region",
                            "type": "string"
                          }
                        }
                      },
                      "then": {
                        "additionalProperties": false,
                        "properties": {
                          "account": {
                            "type": "string"
                          },
                          "provider": {
                            "type": "string"
                          },
                          "type": {
                            "const": "region",
                            "type": "string"
                          }
                        },
                        "required": [
                          "provider",
                          "type"
                        ],
                        "type": "object"
                      }
                    },
                    {
                      "if": {
                        "properties": {
                          "type": {
                            "const": "secret",
                            "type": "string"
                          }
                        }
                      },
                      "then": {
                        "additionalProperties": false,
                        "properties": {
                          "account": {
                            "type": "string"
                          },
                          "data": {
                            "description": "Data to populate the secret with",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name for the secret",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace the secret should be place in",
                            "type": "string"
                          },
                          "provider": {
                            "type": "string"
                          },
                          "type": {
                            "const": "secret",
                            "type": "string"
                          }
                        },
                        "required": [
                          "data",
                          "name",
                          "namespace",
                          "provider",
                          "type"
                        ],
                        "type": "object"
                      }
                    },
                    {
                      "if": {
                        "properties": {
                          "type": {
                            "const": "service",
                            "type": "string"
                          }
                        }
                      },
                      "then": {
                        "additionalProperties": false,
                        "properties": {
                          "account": {
                            "type": "string"
                          },
                          "external_name": {
                            "description": "Map this service to the specified hostname instead of to a deployment selector",
                            "type": "string"
                          },
                          "labels": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Labels for the service resource",
                            "type": "object"
                          },
                          "listener_port": {
                            "default": 80,
                            "description": "Port to listen for requests on",
                            "type": "number"
                          },
                          "name": {
                            "description": "Name to give to the service",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace the service should be registered in. Not all providers require this.",
                            "type": "string"
                          },
                          "protocol": {
                            "description": "Protocol the service responds to",
                            "type": "string"
                          },
                          "provider": {
                            "type": "string"
                          },
                          "selector": {
                            "description": "Reference used to target a deployment",
                            "type": "string"
                          },
                          "target_port": {
                            "description": "Port to forward requests to",
                            "type": "number"
                          },
                          "type": {
                            "const": "service",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "provider",
                          "target_port",
                          "type"
                        ],
                        "type": "object"
                      }
                    },
                    {
                      "if": {
                        "properties": {
                          "type": {
                            "const": "task",
                            "type": "string"
                          }
                        }
                      },
                      "then": {
                        "additionalProperties": false,
                        "properties": {
                          "account": {
                            "type": "string"
                          },
                          "command": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              }
                            ]
                          },
                          "cpu": {
                            "type": "number"
                          },
                          "entrypoint": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              }
                            ]
                          },
                          "environment": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Construct a type with a set of properties K of type T",
                            "type": "object"
                          },
                          "image": {
                            "type": "string"
                          },
                          "labels": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Construct a type with a set of properties K of type T",
                            "type": "object"
                          },
                          "memory": {
                            "type": "string"
                          },
                          "namespace": {
                            "type": "string"
                          },
                          "provider": {
                            "type": "string"
                          },
                          "schedule": {
                            "type": "string"
                          },
                          "sidecars": {
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "command": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array"
                                    }
                                  ]
                                },
                                "cpu": {
                                  "type": "number"
                                },
                                "entrypoint": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array"
                                    }
                                  ]
                                },
                                "environment": {
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "Construct a type with a set of properties K of type T",
                                  "type": "object"
                                },
                                "image": {
                                  "type": "string"
                                },
                                "memory": {
                                  "type": "string"
                                },
                                "volume_mounts": {
                                  "items": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "mount_path": {
                                        "type": "string"
                                      },
                                      "readonly": {
                                        "type": "boolean"
                                      },
                                      "volume": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "volume",
                                      "mount_path"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "required": [
                                "image"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "type": {
                            "const": "task",
                            "type": "string"
                          },
                          "volume_mounts": {
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "mount_path": {
                                  "type": "string"
                                },
                                "readonly": {
                                  "type": "boolean"
                                },
                                "volume": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "volume",
                                "mount_path"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "image",
                          "provider",
                          "schedule",
                          "type"
                        ],
                        "type": "object"
                      }
                    },
                    {
                      "if": {
                        "properties": {
                          "type": {
                            "const": "volume",
                            "type": "string"
                          }
                        }
                      },
                      "then": {
                        "additionalProperties": false,
                        "properties": {
                          "account": {
                            "type": "string"
                          },
                          "hostPath": {
                            "description": "Path on the host machine to mount the volume to",
                            "type": "string"
                          },
                          "mountPath": {
                            "description": "Path inside the container runtime to mount the volume to",
                            "type": "string"
                          },
                          "provider": {
                            "type": "string"
                          },
                          "type": {
                            "const": "volume",
                            "type": "string"
                          }
                        },
                        "required": [
                          "mountPath",
                          "provider",
                          "type"
                        ],
                        "type": "object"
                      }
                    },
                    {
                      "if": {
                        "properties": {
                          "type": {
                            "const": "vpc",
                            "type": "string"
                          }
                        }
                      },
                      "then": {
                        "additionalProperties": false,
                        "properties": {
                          "account": {
                            "type": "string"
                          },
                          "description": {
                            "description": "Description for the VPC",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the VPC",
                            "type": "string"
                          },
                          "provider": {
                            "type": "string"
                          },
                          "region": {
                            "description": "Region the VPC exists in",
                            "type": "string"
                          },
                          "type": {
                            "const": "vpc",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "provider",
                          "region",
                          "type"
                        ],
                        "type": "object"
                      }
                    }
                  ],
                  "properties": {
                    "type": {
                      "enum": [
                        "cronjob",
                        "database",
                        "databaseSchema",
                        "databaseSize",
                        "databaseType",
                        "databaseUser",
                        "databaseVersion",
                        "deployment",
                        "dnsRecord",
                        "dnsZone",
                        "dockerBuild",
                        "helmChart",
                        "ingressRule",
                        "kubernetesCluster",
                        "kubernetesNamespace",
                        "kubernetesVersion",
                        "loadBalancer",
                        "loadBalancerType",
                        "node",
                        "nodeSize",
                        "region",
                        "secret",
                        "service",
                        "task",
                        "volume",
                        "vpc"
                      ]
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "type": "object"
                },
                "type": "object"
              },
              "schedule": {
                "type": "string"
              },
              "selector": {
                "type": "string"
              },
              "service": {
                "type": "string"
              },
              "sidecars": {
                "additionalProperties": false,
                "type": "object"
              },
              "subdomain": {
                "type": "string"
              },
              "tag": {
                "type": "string"
              },
              "target": {
                "type": "string"
              },
              "target_port": {
                "type": "number"
              },
              "ttl": {
                "type": "number"
              },
              "type": {
                "enum": [
                  "cronjob",
                  "database",
                  "databaseSchema",
                  "databaseSize",
                  "databaseType",
                  "databaseUser",
                  "databaseVersion",
                  "deployment",
                  "dnsRecord",
                  "dnsZone",
                  "dockerBuild",
                  "helmChart",
                  "ingressRule",
                  "kubernetesCluster",
                  "kubernetesNamespace",
                  "kubernetesVersion",
                  "loadBalancer",
                  "loadBalancerType",
                  "node",
                  "nodeSize",
                  "region",
                  "secret",
                  "service",
                  "task",
                  "volume",
                  "vpc"
                ],
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "values": {
                "additionalProperties": {
                  "additionalProperties": false,
                  "type": "object"
                },
                "type": "object"
              },
              "version": {
                "type": "string"
              },
              "volume_mounts": {
                "additionalProperties": false,
                "type": "object"
              },
              "vpc": {
                "type": "string"
              },
              "when": {
                "additionalProperties": false,
                "properties": {
                  "account": {
                    "type": "string"
                  },
                  "args": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "type": "object"
                  },
                  "autoscaling": {
                    "additionalProperties": false,
                    "properties": {
                      "max_replicas": {
                        "type": "number"
                      },
                      "min_replicas": {
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "chart": {
                    "type": "string"
                  },
                  "command": {
                    "anyOf": [
                      {
                        "additionalProperties": false,
                        "type": "object"
                      },
                      {
                        "type": "string"
                      }
                    ]
                  },
                  "component_source": {
                    "type": "string"
                  },
                  "content": {
                    "type": "string"
                  },
                  "context": {
                    "type": "string"
                  },
                  "cpu": {
                    "anyOf": [
                      {
                        "type": "number"
                      },
                      {
                        "description": "Number of CPUs to allocate to the container",
                        "minimum": 0.1,
                        "type": "number"
                      }
                    ]
                  },
                  "data": {
                    "type": "string"
                  },
                  "database": {
                    "type": "string"
                  },
                  "databaseSchema": {
                    "type": "string"
                  },
                  "databaseSize": {
                    "type": "string"
                  },
                  "databaseType": {
                    "type": "string"
                  },
                  "databaseVersion": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "dnsZone": {
                    "type": "string"
                  },
                  "dockerfile": {
                    "type": "string"
                  },
                  "entrypoint": {
                    "anyOf": [
                      {
                        "additionalProperties": false,
                        "type": "object"
                      },
                      {
                        "type": "string"
                      }
                    ]
                  },
                  "environment": {
                    "additionalProperties": false,
                    "type": "object"
                  },
                  "external_name": {
                    "type": "string"
                  },
                  "hostPath": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string"
                  },
                  "internal": {
                    "anyOf": [
                      {
                        "default": false,
                        "description": "Whether or not this should be fulfilled by an internal load balancer (e.g. no public IP)",
                        "type": "boolean"
                      },
                      {
                        "default": false,
                        "description": "Whether or not this should be an internal load balancer (e.g. no public IP)",
                        "type": "boolean"
                      }
                    ]
                  },
                  "kubernetesVersion": {
                    "type": "string"
                  },
                  "labels": {
                    "additionalProperties": false,
                    "type": "object"
                  },
                  "listener": {
                    "additionalProperties": false,
                    "properties": {
                      "hostZone": {
                        "type": "string"
                      },
                      "path": {
                        "type": "string"
                      },
                      "protocol": {
                        "type": "string"
                      },
                      "subdomain": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "listener_port": {
                    "type": "number"
                  },
                  "loadBalancer": {
                    "type": "string"
                  },
                  "loadBalancerType": {
                    "type": "string"
                  },
                  "memory": {
                    "type": "string"
                  },
                  "mountPath": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "namespace": {
                    "type": "string"
                  },
                  "nodePools": {
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "count": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "nodeSize": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "port": {
                    "type": [
                      "string",
                      "number"
                    ]
                  },
                  "probes": {
                    "additionalProperties": false,
                    "properties": {
                      "liveness": {
                        "additionalProperties": false,
                        "properties": {
                          "command": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "failure_threshold": {
                            "type": "number"
                          },
                          "headers": {
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "initial_delay": {
                            "type": "number"
                          },
                          "interval": {
                            "type": "number"
                          },
                          "path": {
                            "type": "string"
                          },
                          "port": {
                            "type": "number"
                          },
                          "scheme": {
                            "type": "string"
                          },
                          "success_threshold": {
                            "type": "number"
                          },
                          "timeout": {
                            "type": "number"
                          },
                          "type": {
                            "enum": [
                              "exec",
                              "http"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "protocol": {
                    "type": "string"
                  },
                  "recordType": {
                    "type": "string"
                  },
                  "region": {
                    "type": "string"
                  },
                  "registry": {
                    "type": "string"
                  },
                  "replicas": {
                    "type": "number"
                  },
                  "repository": {
                    "type": "string"
                  },
                  "schedule": {
                    "type": "string"
                  },
                  "selector": {
                    "type": "string"
                  },
                  "service": {
                    "type": "string"
                  },
                  "sidecars": {
                    "additionalProperties": false,
                    "type": "object"
                  },
                  "subdomain": {
                    "type": "string"
                  },
                  "tag": {
                    "type": "string"
                  },
                  "target": {
                    "type": "string"
                  },
                  "target_port": {
                    "type": "number"
                  },
                  "ttl": {
                    "type": "number"
                  },
                  "type": {
                    "enum": [
                      "cronjob",
                      "database",
                      "databaseSchema",
                      "databaseSize",
                      "databaseType",
                      "databaseUser",
                      "databaseVersion",
                      "deployment",
                      "dnsRecord",
                      "dnsZone",
                      "dockerBuild",
                      "helmChart",
                      "ingressRule",
                      "kubernetesCluster",
                      "kubernetesNamespace",
                      "kubernetesVersion",
                      "loadBalancer",
                      "loadBalancerType",
                      "node",
                      "nodeSize",
                      "region",
                      "secret",
                      "service",
                      "task",
                      "volume",
                      "vpc"
                    ],
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "values": {
                    "additionalProperties": {
                      "additionalProperties": false,
                      "type": "object"
                    },
                    "type": "object"
                  },
                  "version": {
                    "type": "string"
                  },
                  "volume_mounts": {
                    "additionalProperties": false,
                    "type": "object"
                  },
                  "vpc": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ],
                "type": "object"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "modules": {
          "additionalProperties": {
            "additionalProperties": {},
            "properties": {
              "source": {
                "type": "string"
              }
            },
            "required": [
              "source"
            ],
            "type": "object"
          },
          "type": "object"
        },
        "resources": {
          "additionalProperties": {
            "allOf": [
              {
                "if": {
                  "properties": {
                    "type": {
                      "const": "cronjob",
                      "type": "string"
                    }
                  }
                },
                "then": {
                  "additionalProperties": false,
                  "properties": {
                    "account": {
                      "type": "string"
                    },
                    "command": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      ]
                    },
                    "cpu": {
                      "type": "number"
                    },
                    "entrypoint": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      ]
                    },
                    "environment": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Construct a type with a set of properties K of type T",
                      "type": "object"
                    },
                    "image": {
                      "type": "string"
                    },
                    "labels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Construct a type with a set of properties K of type T",
                      "type": "object"
                    },
                    "memory": {
                      "type": "string"
                    },
                    "namespace": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "schedule": {
                      "type": "string"
                    },
                    "sidecars": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "command": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              }
                            ]
                          },
                          "cpu": {
                            "type": "number"
                          },
                          "entrypoint": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              }
                            ]
                          },
                          "environment": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Construct a type with a set of properties K of type T",
                            "type": "object"
                          },
                          "image": {
                            "type": "string"
                          },
                          "memory": {
                            "type": "string"
                          },
                          "volume_mounts": {
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "mount_path": {
                                  "type": "string"
                                },
                                "readonly": {
                                  "type": "boolean"
                                },
                                "volume": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "volume",
                                "mount_path"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "image"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "type": {
                      "const": "cronjob",
                      "type": "string"
                    },
                    "volume_mounts": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "mount_path": {
                            "type": "string"
                          },
                          "readonly": {
                            "type": "boolean"
                          },
                          "volume": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "volume",
                          "mount_path"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "image",
                    "provider",
                    "schedule",
                    "type"
                  ],
                  "type": "object"
                }
              },
              {
                "if": {
                  "properties": {
                    "type": {
                      "const": "database",
                      "type": "string"
                    }
                  }
                },
                "then": {
                  "additionalProperties": false,
                  "properties": {
                    "account": {
                      "type": "string"
                    },
                    "databaseSize": {
                      "description": "Size of the database instance to create",
                      "type": "string"
                    },
                    "databaseType": {
                      "description": "The type of database engine to use",
                      "type": "string"
                    },
                    "databaseVersion": {
                      "description": "Refers to the unique ID of a `databaseVersion` response",
                      "type": "string"
                    },
                    "description": {
                      "description": "Human-readable description of the database",
                      "type": "string"
                    },
                    "name": {
                      "description": "Unique name for the database",
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "region": {
                      "description": "Unique ID of the region to run the database in",
                      "type": "string"
                    },
                    "type": {
                      "const": "database",
                      "type": "string"
                    },
                    "vpc": {
                      "description": "Unique ID of the VPC to run the database in",
                      "type": "string"
                    }
                  },
                  "required": [
                    "databaseSize",
                    "databaseType",
                    "databaseVersion",
                    "name",
                    "provider",
                    "region",
                    "type",
                    "vpc"
                  ],
                  "type": "object"
                }
              },
              {
                "if": {
                  "properties": {
                    "type": {
                      "const": "databaseSchema",
                      "type": "string"
                    }
                  }
                },
                "then": {
                  "additionalProperties": false,
                  "properties": {
                    "account": {
                      "type": "string"
                    },
                    "database": {
                      "description": "Unique ID of the database backing this schema",
                      "type": "string"
                    },
                    "databaseType": {
                      "description": "Type of database required by the schema",
                      "type": "string"
                    },
                    "databaseVersion": {
                      "description": "Version of the database type the schema creation process expects",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name to give to the new schema",
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "type": {
                      "const": "databaseSchema",
                      "type": "string"
                    }
                  },
                  "required": [
                    "database",
                    "databaseType",
                    "databaseVersion",
                    "name",
                    "provider",
                    "type"
                  ],
                  "type": "object"
                }
              },
              {
                "if": {
                  "properties": {
                    "type": {
                      "const": "databaseSize",
                      "type": "string"
                    }
                  }
                },
                "then": {
                  "additionalProperties": false,
                  "properties": {
                    "account": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "type": {
                      "const": "databaseSize",
                      "type": "string"
                    }
                  },
                  "required": [
                    "provider",
                    "type"
                  ],
                  "type": "object"
                }
              },
              {
                "if": {
                  "properties": {
                    "type": {
                      "const": "databaseType",
                      "type": "string"
                    }
                  }
                },
                "then": {
                  "additionalProperties": false,
                  "properties": {
                    "account": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "type": {
                      "const": "databaseType",
                      "type": "string"
                    }
                  },
                  "required": [
                    "provider",
                    "type"
                  ],
                  "type": "object"
                }
              },
              {
                "if": {
                  "properties": {
                    "type": {
                      "const": "databaseUser",
                      "type": "string"
                    }
                  }
                },
                "then": {
                  "additionalProperties": false,
                  "properties": {
                    "account": {
                      "type": "string"
                    },
                    "databaseSchema": {
                      "description": "The schema the user should have access to",
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "type": {
                      "const": "databaseUser",
                      "type": "string"
                    },
                    "username": {
                      "description": "Username of the user to create",
                      "type": "string"
                    }
                  },
                  "required": [
                    "databaseSchema",
                    "provider",
                    "type",
                    "username"
                  ],
                  "type": "object"
                }
              },
              {
                "if": {
                  "properties": {
                    "type": {
                      "const": "databaseVersion",
                      "type": "string"
                    }
                  }
                },
                "then": {
                  "additionalProperties": false,
                  "properties": {
                    "account": {
                      "type": "string"
                    },
                    "databaseType": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "type": {
                      "const": "databaseVersion",
                      "type": "string"
                    }
                  },
                  "required": [
                    "databaseType",
                    "provider",
                    "type"
                  ],
                  "type": "object"
                }
              },
              {
                "if": {
                  "properties": {
                    "type": {
                      "const": "deployment",
                      "type": "string"
                    }
                  }
                },
                "then": {
                  "additionalProperties": false,
                  "properties": {
                    "account": {
                      "type": "string"
                    },
                    "autoscaling": {
                      "additionalProperties": false,
                      "description": "Autoscaling rules for the deployment",
                      "properties": {
                        "max_replicas": {
                          "description": "Maximum number of replicas of the deployment to run",
                          "type": "number"
                        },
                        "min_replicas": {
                          "description": "Minimum number of replicas of the deployment to run",
                          "minimum": 0,
                          "type": "number"
                        }
                      },
                      "required": [
                        "min_replicas",
                        "max_replicas"
                      ],
                      "type": "object"
                    },
                    "command": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      ],
                      "description": "Command to execute in the container"
                    },
                    "cpu": {
                      "description": "Number of CPUs to allocate to the container",
                      "minimum": 0.1,
                      "type": "number"
                    },
                    "entrypoint": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      ],
                      "description": "Entrypoint of the container"
                    },
                    "environment": {
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "null"
                          },
                          {
                            "not": {}
                          }
                        ]
                      },
                      "description": "Environment variables to pass to the container",
                      "type": "object"
                    },
                    "image": {
                      "description": "Image the container runs from",
                      "type": "string"
                    },
                    "labels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Labels for the deployment",
                      "type": "object"
                    },
                    "memory": {
                      "description": "Amount of memory to allocate to the container",
                      "type": "string"
                    },
                    "name": {
                      "description": "Deployment name",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace the deployment should be in",
                      "type": "string"
                    },
                    "probes": {
                      "additionalProperties": false,
                      "properties": {
                        "liveness": {
                          "anyOf": [
                            {
                              "additionalProperties": false,
                              "properties": {
                                "command": {
                                  "description": "Command to run inside the container to determine if its healthy",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "failure_threshold": {
                                  "default": 3,
                                  "description": "Number of times the probe will tolerate failure before giving up. Giving up in the case of liveness probe means restarting the container.",
                                  "minimum": 1,
                                  "type": "number"
                                },
                                "initial_delay": {
                                  "default": 0,
                                  "description": "Number of seconds after the container starts before the probe is initiated.",
                                  "minimum": 0,
                                  "type": "number"
                                },
                                "interval": {
                                  "default": 10,
                                  "description": "How often (in seconds) to perform the probe.",
                                  "minimum": 1,
                                  "type": "number"
                                },
                                "success_threshold": {
                                  "default": 1,
                                  "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                  "minimum": 1,
                                  "type": "number"
                                },
                                "timeout": {
                                  "default": 1,
                                  "description": "Number of seconds after which the probe times out",
                                  "minimum": 1,
                                  "type": "number"
                                },
                                "type": {
                                  "const": "exec",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "command",
                                "type"
                              ],
                              "type": "object"
                            },
                            {
                              "additionalProperties": false,
                              "properties": {
                                "failure_threshold": {
                                  "default": 3,
                                  "description": "Number of times the probe will tolerate failure before giving up. Giving up in the case of liveness probe means restarting the container.",
                                  "minimum": 1,
                                  "type": "number"
                                },
                                "headers": {
                                  "description": "Custom headers to set in the request.",
                                  "items": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      },
                                      "value": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "value"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "initial_delay": {
                                  "default": 0,
                                  "description": "Number of seconds after the container starts before the probe is initiated.",
                                  "minimum": 0,
                                  "type": "number"
                                },
                                "interval": {
                                  "default": 10,
                                  "description": "How often (in seconds) to perform the probe.",
                                  "minimum": 1,
                                  "type": "number"
                                },
                                "path": {
                                  "default": "/",
                                  "description": "Path to access on the http server",
                                  "type": "string"
                                },
                                "port": {
                                  "description": "Port to access on the container",
                                  "type": "number"
                                },
                                "scheme": {
                                  "default": "http",
                                  "description": "Scheme to use for connecting to the host (http or https).",
                                  "type": "string"
                                },
                                "success_threshold": {
                                  "default": 1,
                                  "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                  "minimum": 1,
                                  "type": "number"
                                },
                                "timeout": {
                                  "default": 1,
                                  "description": "Number of seconds after which the probe times out",
                                  "minimum": 1,
                                  "type": "number"
                                },
                                "type": {
                                  "const": "http",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type"
                              ],
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "replicas": {
                      "description": "Number of replicas of the deployment to run",
                      "type": "number"
                    },
                    "sidecars": {
                      "description": "A set of additional containers to run as part of each replica",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "command": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              }
                            ],
                            "description": "Command to execute in the container"
                          },
                          "cpu": {
                            "description": "Number of CPUs to allocate to the container",
                            "minimum": 0.1,
                            "type": "number"
                          },
                          "entrypoint": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              }
                            ],
                            "description": "Entrypoint of the container"
                          },
                          "environment": {
                            "additionalProperties": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "null"
                                },
                                {
                                  "not": {}
                                }
                              ]
                            },
                            "description": "Environment variables to pass to the container",
                            "type": "object"
                          },
                          "image": {
                            "description": "Image the container runs from",
                            "type": "string"
                          },
                          "memory": {
                            "description": "Amount of memory to allocate to the container",
                            "type": "string"
                          },
                          "probes": {
                            "additionalProperties": false,
                            "properties": {
                              "liveness": {
                                "anyOf": [
                                  {
                                    "additionalProperties": false,
                                    "properties": {
                                      "command": {
                                        "description": "Command to run inside the container to determine if its healthy",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "failure_threshold": {
                                        "default": 3,
                                        "description": "Number of times the probe will tolerate failure before giving up. Giving up in the case of liveness probe means restarting the container.",
                                        "minimum": 1,
                                        "type": "number"
                                      },
                                      "initial_delay": {
                                        "default": 0,
                                        "description": "Number of seconds after the container starts before the probe is initiated.",
                                        "minimum": 0,
                                        "type": "number"
                                      },
                                      "interval": {
                                        "default": 10,
                                        "description": "How often (in seconds) to perform the probe.",
                                        "minimum": 1,
                                        "type": "number"
                                      },
                                      "success_threshold": {
                                        "default": 1,
                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                        "minimum": 1,
                                        "type": "number"
                                      },
                                      "timeout": {
                                        "default": 1,
                                        "description": "Number of seconds after which the probe times out",
                                        "minimum": 1,
                                        "type": "number"
                                      },
                                      "type": {
                                        "const": "exec",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "command",
                                      "type"
                                    ],
                                    "type": "object"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "properties": {
                                      "failure_threshold": {
                                        "default": 3,
                                        "description": "Number of times the probe will tolerate failure before giving up. Giving up in the case of liveness probe means restarting the container.",
                                        "minimum": 1,
                                        "type": "number"
                                      },
                                      "headers": {
                                        "description": "Custom headers to set in the request.",
                                        "items": {
                                          "additionalProperties": false,
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "name",
                                            "value"
                                          ],
                                          "type": "object"
                                        },
                                        "type": "array"
                                      },
                                      "initial_delay": {
                                        "default": 0,
                                        "description": "Number of seconds after the container starts before the probe is initiated.",
                                        "minimum": 0,
                                        "type": "number"
                                      },
                                      "interval": {
                                        "default": 10,
                                        "description": "How often (in seconds) to perform the probe.",
                                        "minimum": 1,
                                        "type": "number"
                                      },
                                      "path": {
                                        "default": "/",
                                        "description": "Path to access on the http server",
                                        "type": "string"
                                      },
                                      "port": {
                                        "description": "Port to access on the container",
                                        "type": "number"
                                      },
                                      "scheme": {
                                        "default": "http",
                                        "description": "Scheme to use for connecting to the host (http or https).",
                                        "type": "string"
                                      },
                                      "success_threshold": {
                                        "default": 1,
                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                        "minimum": 1,
                                        "type": "number"
                                      },
                                      "timeout": {
                                        "default": 1,
                                        "description": "Number of seconds after which the probe times out",
                                        "minimum": 1,
                                        "type": "number"
                                      },
                                      "type": {
                                        "const": "http",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ],
                                    "type": "object"
                                  }
                                ]
                              }
                            },
                            "type": "object"
                          },
                          "volume_mounts": {
                            "description": "A set of volumes to mount to the container",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "mount_path": {
                                  "type": "string"
                                },
                                "readonly": {
                                  "type": "boolean"
                                },
                                "volume": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "volume",
                                "mount_path",
                                "readonly"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "image",
                          "volume_mounts"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "type": {
                      "const": "deployment",
                      "type": "string"
                    },
                    "volume_mounts": {
                      "description": "A set of volumes to mount to the container",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "mount_path": {
                            "type": "string"
                          },
                          "readonly": {
                            "type": "boolean"
                          },
                          "volume": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "volume",
                          "mount_path",
                          "readonly"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "image",
                    "name",
                    "provider",
                    "replicas",
                    "type",
                    "volume_mounts"
                  ],
                  "type": "object"
                }
              },
              {
                "if": {
                  "properties": {
                    "type": {
                      "const": "dnsRecord",
                      "type": "string"
                    }
                  }
                },
                "then": {
                  "additionalProperties": false,
                  "properties": {
                    "account": {
                      "type": "string"
                    },
                    "content": {
                      "type": "string"
                    },
                    "dnsZone": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "recordType": {
                      "type": "string"
                    },
                    "subdomain": {
                      "type": "string"
                    },
                    "ttl": {
                      "type": "number"
                    },
                    "type": {
                      "const": "dnsRecord",
                      "type": "string"
                    }
                  },
                  "required": [
                    "content",
                    "dnsZone",
                    "provider",
                    "recordType",
                    "subdomain",
                    "type"
                  ],
                  "type": "object"
                }
              },
              {
                "if": {
                  "properties": {
                    "type": {
                      "const": "dnsZone",
                      "type": "string"
                    }
                  }
                },
                "then": {
                  "additionalProperties": false,
                  "properties": {
                    "account": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "type": {
                      "const": "dnsZone",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "provider",
                    "type"
                  ],
                  "type": "object"
                }
              },
              {
                "if": {
                  "properties": {
                    "type": {
                      "const": "dockerBuild",
                      "type": "string"
                    }
                  }
                },
                "then": {
                  "additionalProperties": false,
                  "properties": {
                    "account": {
                      "type": "string"
                    },
                    "args": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "default": {},
                      "description": "Arguments to pass to the build command",
                      "type": "object"
                    },
                    "component_source": {
                      "description": "Source of the component that contains the build context",
                      "type": "string"
                    },
                    "context": {
                      "description": "Docker build context relative to the component root",
                      "type": "string"
                    },
                    "dockerfile": {
                      "default": "Dockerfile",
                      "description": "Path to the dockerfile relative to the context",
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "registry": {
                      "default": "registry.architect.io",
                      "description": "Registry the artifact will be pushed to",
                      "type": "string"
                    },
                    "repository": {
                      "description": "The repository to push the artifact to",
                      "type": "string"
                    },
                    "tag": {
                      "default": "latest",
                      "description": "Tag to assign to the image",
                      "type": "string"
                    },
                    "target": {
                      "description": "Name of a intermediate build stage to target",
                      "type": "string"
                    },
                    "type": {
                      "const": "dockerBuild",
                      "type": "string"
                    }
                  },
                  "required": [
                    "component_source",
                    "context",
                    "provider",
                    "repository",
                    "type"
                  ],
                  "type": "object"
                }
              },
              {
                "if": {
                  "properties": {
                    "type": {
                      "const": "helmChart",
                      "type": "string"
                    }
                  }
                },
                "then": {
                  "additionalProperties": false,
                  "properties": {
                    "account": {
                      "type": "string"
                    },
                    "chart": {
                      "description": "Chart name to be installed",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the helm release",
                      "type": "string"
                    },
                    "namespace": {
                      "default": "default",
                      "description": "The namespace to install the release in",
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "repository": {
                      "description": "The URL of the repository where the chart lives",
                      "type": "string"
                    },
                    "type": {
                      "const": "helmChart",
                      "type": "string"
                    },
                    "values": {
                      "description": "Values to pass to the helm chart release",
                      "type": "object"
                    },
                    "version": {
                      "description": "The exact chart version to install. Otherwise will use the latest.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "chart",
                    "name",
                    "provider",
                    "repository",
                    "type"
                  ],
                  "type": "object"
                }
              },
              {
                "if": {
                  "properties": {
                    "type": {
                      "const": "ingressRule",
                      "type": "string"
                    }
                  }
                },
                "then": {
                  "additionalProperties": false,
                  "properties": {
                    "account": {
                      "type": "string"
                    },
                    "internal": {
                      "default": false,
                      "description": "Whether or not this should be fulfilled by an internal load balancer (e.g. no public IP)",
                      "type": "boolean"
                    },
                    "listener": {
                      "additionalProperties": false,
                      "properties": {
                        "hostZone": {
                          "description": "The DNS zone that the ingress rule listens for traffic on (only works w/ application load balancers)",
                          "type": "string"
                        },
                        "path": {
                          "default": "/",
                          "description": "The path that the ingress rule listens for traffic on (only works w/ application load balancers)",
                          "type": "string"
                        },
                        "protocol": {
                          "default": "http",
                          "description": "Protocol that the ingress rule listens for traffic on",
                          "type": "string"
                        },
                        "subdomain": {
                          "description": "The DNS subdomain that the ingress rule listens for traffic on (only works w/ application load balancers)",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "loadBalancer": {
                      "description": "ID of the load balancer to use for this ingress rule",
                      "type": "string"
                    },
                    "namespace": {
                      "default": "default",
                      "description": "Namespace to put the ingress rule in",
                      "type": "string"
                    },
                    "port": {
                      "description": "Port that the ingress rule listens for traffic on",
                      "type": [
                        "string",
                        "number"
                      ]
                    },
                    "provider": {
                      "type": "string"
                    },
                    "service": {
                      "description": "Service the ingress forwards traffic to",
                      "type": "string"
                    },
                    "type": {
                      "const": "ingressRule",
                      "type": "string"
                    }
                  },
                  "required": [
                    "loadBalancer",
                    "port",
                    "provider",
                    "service",
                    "type"
                  ],
                  "type": "object"
                }
              },
              {
                "if": {
                  "properties": {
                    "type": {
                      "const": "kubernetesCluster",
                      "type": "string"
                    }
                  }
                },
                "then": {
                  "additionalProperties": false,
                  "properties": {
                    "account": {
                      "type": "string"
                    },
                    "description": {
                      "description": "Description of the cluster",
                      "type": "string"
                    },
                    "kubernetesVersion": {
                      "description": "Version of the kubernetes control plane to use",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the cluster",
                      "type": "string"
                    },
                    "nodePools": {
                      "description": "Node pools",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "count": {
                            "description": "Number of nodes the pool should have",
                            "minimum": 1,
                            "type": "number"
                          },
                          "name": {
                            "description": "Name of the node pool",
                            "type": "string"
                          },
                          "nodeSize": {
                            "description": "Size of each node in the pool",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "count",
                          "nodeSize"
                        ],
                        "type": "object"
                      },
                      "minimum": 1,
                      "type": "array"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "region": {
                      "description": "Region the cluster should live in",
                      "type": "string"
                    },
                    "type": {
                      "const": "kubernetesCluster",
                      "type": "string"
                    },
                    "vpc": {
                      "description": "VPC the cluster should live in",
                      "type": "string"
                    }
                  },
                  "required": [
                    "kubernetesVersion",
                    "name",
                    "nodePools",
                    "provider",
                    "region",
                    "type",
                    "vpc"
                  ],
                  "type": "object"
                }
              },
              {
                "if": {
                  "properties": {
                    "type": {
                      "const": "kubernetesNamespace",
                      "type": "string"
                    }
                  }
                },
                "then": {
                  "additionalProperties": false,
                  "properties": {
                    "account": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "type": {
                      "const": "kubernetesNamespace",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "provider",
                    "type"
                  ],
                  "type": "object"
                }
              },
              {
                "if": {
                  "properties": {
                    "type": {
                      "const": "kubernetesVersion",
                      "type": "string"
                    }
                  }
                },
                "then": {
                  "additionalProperties": false,
                  "properties": {
                    "account": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "type": {
                      "const": "kubernetesVersion",
                      "type": "string"
                    }
                  },
                  "required": [
                    "provider",
                    "type"
                  ],
                  "type": "object"
                }
              },
              {
                "if": {
                  "properties": {
                    "type": {
                      "const": "loadBalancer",
                      "type": "string"
                    }
                  }
                },
                "then": {
                  "additionalProperties": false,
                  "properties": {
                    "account": {
                      "type": "string"
                    },
                    "internal": {
                      "default": false,
                      "description": "Whether or not this should be an internal load balancer (e.g. no public IP)",
                      "type": "boolean"
                    },
                    "loadBalancerType": {
                      "description": "What type of load balancer to create",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name for the new load balancer",
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "type": {
                      "const": "loadBalancer",
                      "type": "string"
                    }
                  },
                  "required": [
                    "loadBalancerType",
                    "name",
                    "provider",
                    "type"
                  ],
                  "type": "object"
                }
              },
              {
                "if": {
                  "properties": {
                    "type": {
                      "const": "loadBalancerType",
                      "type": "string"
                    }
                  }
                },
                "then": {
                  "additionalProperties": false,
                  "properties": {
                    "account": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "type": {
                      "const": "loadBalancerType",
                      "type": "string"
                    }
                  },
                  "required": [
                    "provider",
                    "type"
                  ],
                  "type": "object"
                }
              },
              {
                "if": {
                  "properties": {
                    "type": {
                      "const": "node",
                      "type": "string"
                    }
                  }
                },
                "then": {
                  "additionalProperties": false,
                  "properties": {
                    "account": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "type": {
                      "const": "node",
                      "type": "string"
                    }
                  },
                  "required": [
                    "provider",
                    "type"
                  ],
                  "type": "object"
                }
              },
              {
                "if": {
                  "properties": {
                    "type": {
                      "const": "nodeSize",
                      "type": "string"
                    }
                  }
                },
                "then": {
                  "additionalProperties": false,
                  "properties": {
                    "account": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "type": {
                      "const": "nodeSize",
                      "type": "string"
                    }
                  },
                  "required": [
                    "provider",
                    "type"
                  ],
                  "type": "object"
                }
              },
              {
                "if": {
                  "properties": {
                    "type": {
                      "const": "region",
                      "type": "string"
                    }
                  }
                },
                "then": {
                  "additionalProperties": false,
                  "properties": {
                    "account": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "type": {
                      "const": "region",
                      "type": "string"
                    }
                  },
                  "required": [
                    "provider",
                    "type"
                  ],
                  "type": "object"
                }
              },
              {
                "if": {
                  "properties": {
                    "type": {
                      "const": "secret",
                      "type": "string"
                    }
                  }
                },
                "then": {
                  "additionalProperties": false,
                  "properties": {
                    "account": {
                      "type": "string"
                    },
                    "data": {
                      "description": "Data to populate the secret with",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name for the secret",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace the secret should be place in",
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "type": {
                      "const": "secret",
                      "type": "string"
                    }
                  },
                  "required": [
                    "data",
                    "name",
                    "namespace",
                    "provider",
                    "type"
                  ],
                  "type": "object"
                }
              },
              {
                "if": {
                  "properties": {
                    "type": {
                      "const": "service",
                      "type": "string"
                    }
                  }
                },
                "then": {
                  "additionalProperties": false,
                  "properties": {
                    "account": {
                      "type": "string"
                    },
                    "external_name": {
                      "description": "Map this service to the specified hostname instead of to a deployment selector",
                      "type": "string"
                    },
                    "labels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Labels for the service resource",
                      "type": "object"
                    },
                    "listener_port": {
                      "default": 80,
                      "description": "Port to listen for requests on",
                      "type": "number"
                    },
                    "name": {
                      "description": "Name to give to the service",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace the service should be registered in. Not all providers require this.",
                      "type": "string"
                    },
                    "protocol": {
                      "description": "Protocol the service responds to",
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "selector": {
                      "description": "Reference used to target a deployment",
                      "type": "string"
                    },
                    "target_port": {
                      "description": "Port to forward requests to",
                      "type": "number"
                    },
                    "type": {
                      "const": "service",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "provider",
                    "target_port",
                    "type"
                  ],
                  "type": "object"
                }
              },
              {
                "if": {
                  "properties": {
                    "type": {
                      "const": "task",
                      "type": "string"
                    }
                  }
                },
                "then": {
                  "additionalProperties": false,
                  "properties": {
                    "account": {
                      "type": "string"
                    },
                    "command": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      ]
                    },
                    "cpu": {
                      "type": "number"
                    },
                    "entrypoint": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      ]
                    },
                    "environment": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Construct a type with a set of properties K of type T",
                      "type": "object"
                    },
                    "image": {
                      "type": "string"
                    },
                    "labels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Construct a type with a set of properties K of type T",
                      "type": "object"
                    },
                    "memory": {
                      "type": "string"
                    },
                    "namespace": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "schedule": {
                      "type": "string"
                    },
                    "sidecars": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "command": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              }
                            ]
                          },
                          "cpu": {
                            "type": "number"
                          },
                          "entrypoint": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              }
                            ]
                          },
                          "environment": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Construct a type with a set of properties K of type T",
                            "type": "object"
                          },
                          "image": {
                            "type": "string"
                          },
                          "memory": {
                            "type": "string"
                          },
                          "volume_mounts": {
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "mount_path": {
                                  "type": "string"
                                },
                                "readonly": {
                                  "type": "boolean"
                                },
                                "volume": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "volume",
                                "mount_path"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "image"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "type": {
                      "const": "task",
                      "type": "string"
                    },
                    "volume_mounts": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "mount_path": {
                            "type": "string"
                          },
                          "readonly": {
                            "type": "boolean"
                          },
                          "volume": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "volume",
                          "mount_path"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "image",
                    "provider",
                    "schedule",
                    "type"
                  ],
                  "type": "object"
                }
              },
              {
                "if": {
                  "properties": {
                    "type": {
                      "const": "volume",
                      "type": "string"
                    }
                  }
                },
                "then": {
                  "additionalProperties": false,
                  "properties": {
                    "account": {
                      "type": "string"
                    },
                    "hostPath": {
                      "description": "Path on the host machine to mount the volume to",
                      "type": "string"
                    },
                    "mountPath": {
                      "description": "Path inside the container runtime to mount the volume to",
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "type": {
                      "const": "volume",
                      "type": "string"
                    }
                  },
                  "required": [
                    "mountPath",
                    "provider",
                    "type"
                  ],
                  "type": "object"
                }
              },
              {
                "if": {
                  "properties": {
                    "type": {
                      "const": "vpc",
                      "type": "string"
                    }
                  }
                },
                "then": {
                  "additionalProperties": false,
                  "properties": {
                    "account": {
                      "type": "string"
                    },
                    "description": {
                      "description": "Description for the VPC",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the VPC",
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "region": {
                      "description": "Region the VPC exists in",
                      "type": "string"
                    },
                    "type": {
                      "const": "vpc",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "provider",
                    "region",
                    "type"
                  ],
                  "type": "object"
                }
              }
            ],
            "properties": {
              "type": {
                "enum": [
                  "cronjob",
                  "database",
                  "databaseSchema",
                  "databaseSize",
                  "databaseType",
                  "databaseUser",
                  "databaseVersion",
                  "deployment",
                  "dnsRecord",
                  "dnsZone",
                  "dockerBuild",
                  "helmChart",
                  "ingressRule",
                  "kubernetesCluster",
                  "kubernetesNamespace",
                  "kubernetesVersion",
                  "loadBalancer",
                  "loadBalancerType",
                  "node",
                  "nodeSize",
                  "region",
                  "secret",
                  "service",
                  "task",
                  "volume",
                  "vpc"
                ]
              }
            },
            "required": [
              "type"
            ],
            "type": "object"
          },
          "description": "Configure what resources must exist in each environment in the datacenter",
          "type": "object"
        },
        "state": {
          "anyOf": [
            {
              "additionalProperties": false,
              "properties": {
                "path": {
                  "type": "string"
                },
                "type": {
                  "const": "local",
                  "type": "string"
                }
              },
              "required": [
                "type",
                "path"
              ],
              "type": "object"
            },
            {
              "additionalProperties": false,
              "properties": {
                "accessKey": {
                  "type": "string"
                },
                "bucket": {
                  "type": "string"
                },
                "secretKey": {
                  "type": "string"
                },
                "type": {
                  "const": "digitalocean",
                  "type": "string"
                }
              },
              "required": [
                "type",
                "bucket",
                "accessKey",
                "secretKey"
              ],
              "type": "object"
            }
          ],
          "description": "Configure where terraform state files should be stored"
        },
        "version": {
          "const": "v1",
          "type": "string"
        }
      },
      "required": [
        "state",
        "version"
      ],
      "type": "object"
    }
  },
  "$id": "https://architect.io/.schemas/datacenter.json"
}