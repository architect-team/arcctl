{
  "$ref": "#/definitions/ComponentV2",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "ComponentV2": {
      "additionalProperties": false,
      "properties": {
        "builds": {
          "additionalProperties": {
            "additionalProperties": false,
            "properties": {
              "args": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "A set of arguments to pass to the build job",
                "examples": [
                  {
                    "BUILDKIT_INLINE_CACHE": "1"
                  }
                ],
                "type": "object"
              },
              "context": {
                "description": "Path to the folder containing the code to build",
                "examples": [
                  "./"
                ],
                "type": "string"
              },
              "debug": {
                "additionalProperties": false,
                "description": "Debugging options for the build step",
                "properties": {
                  "args": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "A set of arguments to pass to the build job",
                    "examples": [
                      {
                        "BUILDKIT_INLINE_CACHE": "1"
                      }
                    ],
                    "type": "object"
                  },
                  "context": {
                    "description": "Path to the folder containing the code to build",
                    "examples": [
                      "./"
                    ],
                    "type": "string"
                  },
                  "description": {
                    "description": "Description of the build artifact",
                    "examples": [
                      "Builds the source code for the application"
                    ],
                    "type": "string"
                  },
                  "dockerfile": {
                    "default": "Dockerfile",
                    "description": "The path to the dockerfile defining this build step",
                    "type": "string"
                  },
                  "image": {
                    "description": "The resulting image that was created once the build is complete. This will change whenever the component is tagged as well.",
                    "examples": [
                      "my-registry.com/my-app:latest"
                    ],
                    "type": "string"
                  },
                  "target": {
                    "description": "The docker target to use during the build process",
                    "examples": [
                      "builder"
                    ],
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "description": {
                "description": "Description of the build artifact",
                "examples": [
                  "Builds the source code for the application"
                ],
                "type": "string"
              },
              "dockerfile": {
                "default": "Dockerfile",
                "description": "The path to the dockerfile defining this build step",
                "type": "string"
              },
              "image": {
                "description": "The resulting image that was created once the build is complete. This will change whenever the component is tagged as well.",
                "examples": [
                  "my-registry.com/my-app:latest"
                ],
                "type": "string"
              },
              "target": {
                "description": "The docker target to use during the build process",
                "examples": [
                  "builder"
                ],
                "type": "string"
              }
            },
            "required": [
              "context"
            ],
            "type": "object"
          },
          "description": "A set of build jobs to run to power other deployments or tasks",
          "type": "object"
        },
        "databases": {
          "additionalProperties": {
            "additionalProperties": false,
            "properties": {
              "description": {
                "default": "",
                "description": "A human-readable description of the use-case for the database",
                "type": "string"
              },
              "migrate": {
                "additionalProperties": false,
                "description": "Configuration details for how to run database migrations",
                "properties": {
                  "command": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    ],
                    "description": "A command to run in the container to execute the migration",
                    "examples": [
                      [
                        "npm",
                        "run",
                        "migrate"
                      ]
                    ]
                  },
                  "entrypoint": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    ],
                    "default": [
                      ""
                    ],
                    "description": "An entrypoint to use for the docker container"
                  },
                  "environment": {
                    "additionalProperties": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "null"
                        },
                        {
                          "not": {}
                        }
                      ]
                    },
                    "description": "Environment variables to set in the container",
                    "examples": [
                      {
                        "DATABASE_URL": "${{ databases.auth.url }}"
                      }
                    ],
                    "type": "object"
                  },
                  "image": {
                    "description": "The docker image containing the migration tooling and files",
                    "examples": [
                      "${{ builds.api.image }}"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "image"
                ],
                "type": "object"
              },
              "seed": {
                "additionalProperties": false,
                "description": "Configuration details for how to seed the database",
                "properties": {
                  "command": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    ],
                    "description": "A command to run in the container to execute the seeding",
                    "examples": [
                      [
                        "npm",
                        "run",
                        "seed"
                      ]
                    ]
                  },
                  "entrypoint": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    ],
                    "default": [
                      ""
                    ],
                    "description": "An entrypoint to use for the docker container"
                  },
                  "environment": {
                    "additionalProperties": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "null"
                        },
                        {
                          "not": {}
                        }
                      ]
                    },
                    "description": "Environment variables to set in the container",
                    "examples": [
                      {
                        "DATABASE_URL": "${{ databases.auth.url }}"
                      }
                    ],
                    "type": "object"
                  },
                  "image": {
                    "description": "The docker image containing the seeding tooling and files",
                    "examples": [
                      "${{ builds.api.image }}"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "image"
                ],
                "type": "object"
              },
              "type": {
                "description": "The type of database and version to use",
                "examples": [
                  "postgres:15",
                  "mysql:8",
                  "redis:5"
                ],
                "type": "string"
              }
            },
            "required": [
              "type"
            ],
            "type": "object"
          },
          "description": "A set of databases that this component requires",
          "type": "object"
        },
        "dependencies": {
          "additionalProperties": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "component": {
                    "description": "The repo the component is in",
                    "type": "string"
                  },
                  "variables": {
                    "additionalProperties": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      ]
                    },
                    "description": "Input values to provide to the component if `merge` is turned on",
                    "examples": [
                      {
                        "allowed_return_urls": [
                          "https://architect.io",
                          "${{ ingresses.frontend.url }}"
                        ]
                      }
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "component"
                ],
                "type": "object"
              }
            ]
          },
          "description": "A set of other components that this component depends on",
          "examples": [
            "architect/auth-component",
            {
              "allowed_return_urls": [
                "https://architect.io",
                "${{ ingresses.frontend.url }}"
              ]
            }
          ],
          "type": "object"
        },
        "deployments": {
          "additionalProperties": {
            "additionalProperties": false,
            "properties": {
              "autoscaling": {
                "additionalProperties": false,
                "description": "Configuration settings for how to automatically scale the application up and down",
                "properties": {
                  "cpu": {
                    "description": "Maximum CPU usage per replica before scaling up",
                    "type": [
                      "number",
                      "string"
                    ]
                  },
                  "memory": {
                    "description": "Maximum memory usage per replica before scaling up",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "command": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                ],
                "description": "Command to use when the container is booted up",
                "examples": [
                  [
                    "npm",
                    "start"
                  ]
                ]
              },
              "cpu": {
                "description": "The amount of CPU to allocate to each instance of the deployment",
                "type": [
                  "number",
                  "string"
                ]
              },
              "debug": {
                "additionalProperties": false,
                "description": "Debugging options for the deployment",
                "properties": {
                  "autoscaling": {
                    "additionalProperties": false,
                    "description": "Configuration settings for how to automatically scale the application up and down",
                    "properties": {
                      "cpu": {
                        "description": "Maximum CPU usage per replica before scaling up",
                        "type": [
                          "number",
                          "string"
                        ]
                      },
                      "memory": {
                        "description": "Maximum memory usage per replica before scaling up",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "command": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    ],
                    "description": "Command to use when the container is booted up",
                    "examples": [
                      [
                        "npm",
                        "start"
                      ]
                    ]
                  },
                  "cpu": {
                    "description": "The amount of CPU to allocate to each instance of the deployment",
                    "type": [
                      "number",
                      "string"
                    ]
                  },
                  "description": {
                    "description": "Human readable description of the deployment",
                    "examples": [
                      "Runs the frontend web application"
                    ],
                    "type": "string"
                  },
                  "entrypoint": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    ],
                    "default": [
                      ""
                    ],
                    "description": "The executable to run every time the container is booted up"
                  },
                  "environment": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Environment variables to pass to the service",
                    "examples": [
                      {
                        "NODE_ENV": "production"
                      },
                      {
                        "BACKEND_URL": "${{ ingresses.backend.url }}"
                      }
                    ],
                    "type": "object"
                  },
                  "image": {
                    "description": "Docker image to use for the deployment",
                    "examples": [
                      "${{ builds.frontend.image }}",
                      "my-registry.com/my-app:latest"
                    ],
                    "type": "string"
                  },
                  "labels": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "The labels to apply to the deployment",
                    "type": "object"
                  },
                  "memory": {
                    "description": "The amount of memory to allocate to each instance of the deployment",
                    "type": "string"
                  },
                  "platform": {
                    "description": "Set platform if server is multi-platform capable",
                    "examples": [
                      "linux/amd64"
                    ],
                    "type": "string"
                  },
                  "probes": {
                    "additionalProperties": false,
                    "description": "Configuration details for probes that check each replicas status",
                    "properties": {
                      "liveness": {
                        "anyOf": [
                          {
                            "additionalProperties": false,
                            "properties": {
                              "command": {
                                "description": "Command to run inside the container to determine if its healthy",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "failure_threshold": {
                                "default": 3,
                                "description": "Number of times the probe will tolerate failure before giving up. Giving up in the case of liveness probe means restarting the container.",
                                "minimum": 1,
                                "type": "number"
                              },
                              "initial_delay": {
                                "default": 0,
                                "description": "Number of seconds after the container starts before the probe is initiated.",
                                "minimum": 0,
                                "type": "number"
                              },
                              "interval": {
                                "default": 10,
                                "description": "How often (in seconds) to perform the probe.",
                                "minimum": 1,
                                "type": "number"
                              },
                              "success_threshold": {
                                "default": 1,
                                "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                "minimum": 1,
                                "type": "number"
                              },
                              "timeout": {
                                "default": 1,
                                "description": "Number of seconds after which the probe times out",
                                "minimum": 1,
                                "type": "number"
                              },
                              "type": {
                                "const": "exec",
                                "type": "string"
                              }
                            },
                            "required": [
                              "command",
                              "type"
                            ],
                            "type": "object"
                          },
                          {
                            "additionalProperties": false,
                            "properties": {
                              "failure_threshold": {
                                "default": 3,
                                "description": "Number of times the probe will tolerate failure before giving up. Giving up in the case of liveness probe means restarting the container.",
                                "minimum": 1,
                                "type": "number"
                              },
                              "headers": {
                                "description": "Custom headers to set in the request.",
                                "items": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "value"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "initial_delay": {
                                "default": 0,
                                "description": "Number of seconds after the container starts before the probe is initiated.",
                                "minimum": 0,
                                "type": "number"
                              },
                              "interval": {
                                "default": 10,
                                "description": "How often (in seconds) to perform the probe.",
                                "minimum": 1,
                                "type": "number"
                              },
                              "path": {
                                "default": "/",
                                "description": "Path to access on the http server",
                                "type": "string"
                              },
                              "port": {
                                "description": "Port to access on the container",
                                "type": "number"
                              },
                              "scheme": {
                                "default": "http",
                                "description": "Scheme to use for connecting to the host (http or https).",
                                "type": "string"
                              },
                              "success_threshold": {
                                "default": 1,
                                "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                "minimum": 1,
                                "type": "number"
                              },
                              "timeout": {
                                "default": 1,
                                "description": "Number of seconds after which the probe times out",
                                "minimum": 1,
                                "type": "number"
                              },
                              "type": {
                                "const": "http",
                                "type": "string"
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "type": "object"
                          }
                        ],
                        "description": "Configuration settings to determine if the deployment is ready to receive traffic"
                      }
                    },
                    "type": "object"
                  },
                  "volumes": {
                    "additionalProperties": {
                      "additionalProperties": false,
                      "properties": {
                        "host_path": {
                          "description": "Path on the host machine to sync with the volume",
                          "type": "string"
                        },
                        "mount_path": {
                          "description": "Path inside the container to mount the volume to",
                          "type": "string"
                        }
                      },
                      "required": [
                        "mount_path"
                      ],
                      "type": "object"
                    },
                    "description": "Volumes that should be created and attached to each replica",
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "description": {
                "description": "Human readable description of the deployment",
                "examples": [
                  "Runs the frontend web application"
                ],
                "type": "string"
              },
              "entrypoint": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                ],
                "default": [
                  ""
                ],
                "description": "The executable to run every time the container is booted up"
              },
              "environment": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Environment variables to pass to the service",
                "examples": [
                  {
                    "NODE_ENV": "production"
                  },
                  {
                    "BACKEND_URL": "${{ ingresses.backend.url }}"
                  }
                ],
                "type": "object"
              },
              "image": {
                "description": "Docker image to use for the deployment",
                "examples": [
                  "${{ builds.frontend.image }}",
                  "my-registry.com/my-app:latest"
                ],
                "type": "string"
              },
              "labels": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "The labels to apply to the deployment",
                "type": "object"
              },
              "memory": {
                "description": "The amount of memory to allocate to each instance of the deployment",
                "type": "string"
              },
              "platform": {
                "description": "Set platform if server is multi-platform capable",
                "examples": [
                  "linux/amd64"
                ],
                "type": "string"
              },
              "probes": {
                "additionalProperties": false,
                "description": "Configuration details for probes that check each replicas status",
                "properties": {
                  "liveness": {
                    "anyOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "command": {
                            "description": "Command to run inside the container to determine if its healthy",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "failure_threshold": {
                            "default": 3,
                            "description": "Number of times the probe will tolerate failure before giving up. Giving up in the case of liveness probe means restarting the container.",
                            "minimum": 1,
                            "type": "number"
                          },
                          "initial_delay": {
                            "default": 0,
                            "description": "Number of seconds after the container starts before the probe is initiated.",
                            "minimum": 0,
                            "type": "number"
                          },
                          "interval": {
                            "default": 10,
                            "description": "How often (in seconds) to perform the probe.",
                            "minimum": 1,
                            "type": "number"
                          },
                          "success_threshold": {
                            "default": 1,
                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                            "minimum": 1,
                            "type": "number"
                          },
                          "timeout": {
                            "default": 1,
                            "description": "Number of seconds after which the probe times out",
                            "minimum": 1,
                            "type": "number"
                          },
                          "type": {
                            "const": "exec",
                            "type": "string"
                          }
                        },
                        "required": [
                          "command",
                          "type"
                        ],
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "failure_threshold": {
                            "default": 3,
                            "description": "Number of times the probe will tolerate failure before giving up. Giving up in the case of liveness probe means restarting the container.",
                            "minimum": 1,
                            "type": "number"
                          },
                          "headers": {
                            "description": "Custom headers to set in the request.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name",
                                "value"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "initial_delay": {
                            "default": 0,
                            "description": "Number of seconds after the container starts before the probe is initiated.",
                            "minimum": 0,
                            "type": "number"
                          },
                          "interval": {
                            "default": 10,
                            "description": "How often (in seconds) to perform the probe.",
                            "minimum": 1,
                            "type": "number"
                          },
                          "path": {
                            "default": "/",
                            "description": "Path to access on the http server",
                            "type": "string"
                          },
                          "port": {
                            "description": "Port to access on the container",
                            "type": "number"
                          },
                          "scheme": {
                            "default": "http",
                            "description": "Scheme to use for connecting to the host (http or https).",
                            "type": "string"
                          },
                          "success_threshold": {
                            "default": 1,
                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                            "minimum": 1,
                            "type": "number"
                          },
                          "timeout": {
                            "default": 1,
                            "description": "Number of seconds after which the probe times out",
                            "minimum": 1,
                            "type": "number"
                          },
                          "type": {
                            "const": "http",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "type": "object"
                      }
                    ],
                    "description": "Configuration settings to determine if the deployment is ready to receive traffic"
                  }
                },
                "type": "object"
              },
              "volumes": {
                "additionalProperties": {
                  "additionalProperties": false,
                  "properties": {
                    "host_path": {
                      "description": "Path on the host machine to sync with the volume",
                      "type": "string"
                    },
                    "mount_path": {
                      "description": "Path inside the container to mount the volume to",
                      "type": "string"
                    }
                  },
                  "required": [
                    "mount_path"
                  ],
                  "type": "object"
                },
                "description": "Volumes that should be created and attached to each replica",
                "type": "object"
              }
            },
            "required": [
              "image"
            ],
            "type": "object"
          },
          "description": "Workloads that should be deployed",
          "type": "object"
        },
        "ingresses": {
          "additionalProperties": {
            "additionalProperties": false,
            "properties": {
              "headers": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Additional headers to include in responses",
                "examples": [
                  {
                    "Access-Control-Allow-Credentials": "true",
                    "Access-Control-Allow-Origin": "${{ variables.allowed_return_urls }}"
                  }
                ],
                "type": "object"
              },
              "internal": {
                "default": false,
                "description": "Whether or not the ingress rule should be attached to an internal gateway",
                "type": "boolean"
              },
              "service": {
                "description": "Service the ingress rule forwards traffic to",
                "examples": [
                  "backend"
                ],
                "type": "string"
              }
            },
            "required": [
              "service"
            ],
            "type": "object"
          },
          "description": "Claims for external (e.g. client) access to a service",
          "type": "object"
        },
        "services": {
          "additionalProperties": {
            "additionalProperties": false,
            "properties": {
              "deployment": {
                "description": "Deployment the service sends requests to",
                "examples": [
                  "backend"
                ],
                "type": "string"
              },
              "description": {
                "description": "Description of the service",
                "examples": [
                  "Exposes the backend to other applications"
                ],
                "type": "string"
              },
              "password": {
                "description": "Basic auth password",
                "type": "string"
              },
              "port": {
                "description": "Port the service listens on",
                "examples": [
                  8080
                ],
                "type": "number"
              },
              "protocol": {
                "default": "http",
                "description": "Protocol the service listens on",
                "type": "string"
              },
              "username": {
                "description": "Basic auth username",
                "type": "string"
              }
            },
            "required": [
              "deployment",
              "port"
            ],
            "type": "object"
          },
          "description": "Services that can receive network traffic",
          "type": "object"
        },
        "variables": {
          "additionalProperties": {
            "additionalProperties": false,
            "properties": {
              "default": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                ],
                "description": "A default value to use if one isn't provided",
                "examples": [
                  "https://architect.io"
                ]
              },
              "description": {
                "description": "A human-readable description",
                "examples": [
                  "API key used to authenticate with Stripe"
                ],
                "type": "string"
              },
              "merge": {
                "default": false,
                "description": "If true, upstream components can pass in values that will be merged together with each other and environment-provided values",
                "type": "boolean"
              },
              "required": {
                "default": false,
                "description": "If true, a value is required or the component won't run.",
                "type": "boolean"
              },
              "sensitive": {
                "default": false,
                "description": "Whether or not the data should be considered sensitive and stripped from logs",
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "description": "A set of inputs the component expects to be provided",
          "type": "object"
        }
      },
      "type": "object"
    }
  }
}